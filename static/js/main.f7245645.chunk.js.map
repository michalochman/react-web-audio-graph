{"version":3,"sources":["worklets/and-gate-processor.worklet.ts","worklets/comparator-processor.worklet.ts","worklets/envelope-processor.worklet.ts","worklets/gate-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/meter-processor.worklet.ts","worklets/noise-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/sample-and-hold-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","worklets/envelope-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/Comparator.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/nodes/Equalizer.tsx","components/FlowContextMenu.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Meter.tsx","utils/scale.ts","components/nodes/Metronome.tsx","worklets/noise-processor.types.ts","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","worklets/sample-and-hold-processor.types.ts","components/nodes/SampleAndHold.tsx","components/nodes/Sign.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","components/nodes/WaveShaper.tsx","components/nodes/XorGate.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","Promise","all","audioWorklet","addModule","AndGateWorkletProcessor","ComparatorWorkletProcessor","EnvelopeWorkletProcessor","GateWorkletProcessor","MeterWorkletProcessor","NoiseWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","RectifierWorkletProcessor","SampleAndHoldWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","AudioWorkletNode","port","postMessage","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","props","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Mode","Parameters","Stage","memo","ADSR","selected","mode","Linear","sustainOn","envelope","processorOptions","AttackTime","parameters","get","DecayTime","ReleaseTime","SustainLevel","Exponential","Logarithmic","checked","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","Analyser","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","items","item","kind","getAsFile","onDragOver","onDrop","BiquadFilterType","BiquadFilter","detune","gain","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","fill","channel","alignItems","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","Comparator","ConstantSource","offset","createConstantSource","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","float32toDb","abs","DelayEffect","feedback","mix","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","toFixed","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","gate","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","releaseTimeUsed","gateTrigger","message","onmessage","meta","sustainTime","scale","arc","drawEnvelope","BANDS_OCTAVES","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filters","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","FlowContextMenu","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","A","B","toggleInput","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","DPI_RATIO","devicePixelRatio","drawMeter","levels","setTransform","font","textAlign","textBaseline","save","clearRect","restore","MAX_LEVEL","significant","rulerHeight","rulerWidth","levelText","groupY","lineX","WIDTH","textY","fillText","groupX","level","levelIndex","t","decibels","hue","lightness","Meter","levelsRef","channels","setChannels","canvasWidth","handleMessage","payload","slice","BUCKETS","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","Noise","White","Pink","Brown","NotGate","OrGate","Oscillator","frequencyDetuned","createOscillator","modifierStyles","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","OutputSwitch","toggleOutput","Rectifier","HalfWave","FullWave","SampleAndHold","sampleAndHold","HoldTime","Sign","StereoPanner","pan","createStereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","XorGate","nodeTypes","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","defaultPosition","defaultZoom","onlyRenderVisibleElements","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f7245645.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"3c60d6738f1135879fc6.worklet.js\";","module.exports = __webpack_public_path__ + \"d7691c746ba495f49384.worklet.js\";","module.exports = __webpack_public_path__ + \"f9390332e6dd551a4c7c.worklet.js\";","module.exports = __webpack_public_path__ + \"ee2ccda5b07e710428d9.worklet.js\";","module.exports = __webpack_public_path__ + \"2fd20acac10a566f9a75.worklet.js\";","module.exports = __webpack_public_path__ + \"7609024a0dfa6519ee36.worklet.js\";","module.exports = __webpack_public_path__ + \"bb20777439c70ae891d8.worklet.js\";","module.exports = __webpack_public_path__ + \"f6855cba3f25275ae3e9.worklet.js\";","module.exports = __webpack_public_path__ + \"64d1892a3999c7d09079.worklet.js\";","module.exports = __webpack_public_path__ + \"0d5b39bea6f7ad721ba4.worklet.js\";","module.exports = __webpack_public_path__ + \"b90471baecaa5b3e21eb.worklet.js\";","module.exports = __webpack_public_path__ + \"5fec77c4657f1a14234a.worklet.js\";","module.exports = __webpack_public_path__ + \"47be22378c03e68e41b9.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport ComparatorWorkletProcessor from \"worklet-loader!worklets/comparator-processor.worklet.ts\";\nimport EnvelopeWorkletProcessor from \"worklet-loader!worklets/envelope-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport MeterWorkletProcessor from \"worklet-loader!worklets/meter-processor.worklet.ts\";\nimport NoiseWorkletProcessor from \"worklet-loader!worklets/noise-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport SampleAndHoldWorkletProcessor from \"worklet-loader!worklets/sample-and-hold-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await Promise.all([\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(ComparatorWorkletProcessor),\n        context.audioWorklet.addModule(EnvelopeWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(MeterWorkletProcessor),\n        context.audioWorklet.addModule(NoiseWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SampleAndHoldWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n\n    if (node instanceof AudioWorkletNode) {\n      node.port.postMessage(\"stop\");\n    }\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu} {...props}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode, Parameters } from \"worklets/envelope-processor.types\";\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.Linear, onChange, sustainOn = true } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      const envelope = new AudioWorkletNode(context, \"envelope-processor\", {\n        processorOptions: { sustainOn, mode },\n      });\n\n      return {\n        [Parameters.AttackTime]: envelope.parameters.get(Parameters.AttackTime),\n        [Parameters.DecayTime]: envelope.parameters.get(Parameters.DecayTime),\n        gain: envelope,\n        gate: envelope,\n        input: undefined,\n        output: undefined,\n        [Parameters.ReleaseTime]: envelope.parameters.get(Parameters.ReleaseTime),\n        [Parameters.SustainLevel]: envelope.parameters.get(Parameters.SustainLevel),\n      };\n    },\n    [mode, sustainOn]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"and-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>Play</button>\n          <button onClick={stop}>Stop</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input checked={loop} onChange={() => onChange({ loop: !loop })} title=\"Loop\" type=\"checkbox\" />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Comparator({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"comparator-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Comparator\" type={type} />;\n}\n\nexport default React.memo(Comparator);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface EnvelopeNode extends Required<ComplexAudioNode<GainNode, GainNode>> {\n  gate: AudioWorkletNode;\n}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const gain = context.createGain();\n    const gate = new AudioWorkletNode(context, \"gate-processor\");\n\n    return {\n      gate,\n      input: gain,\n      output: gain,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  const triggerOff = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const gateTrigger = useCallback(\n    ({ data: message }: MessageEvent) => {\n      if (message === \"gateOn\") {\n        triggerOn();\n      } else if (message === \"gateOff\") {\n        triggerOff();\n      }\n    },\n    [triggerOff, triggerOn]\n  );\n  useEffect(() => {\n    node.gate.port.onmessage = gateTrigger;\n  }, [node, gateTrigger]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gate\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"25%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport produce from \"immer\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\n\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n\n  return `${frequency}`;\n}\n\ninterface EqualizerNode extends ComplexAudioNode<GainNode, GainNode> {\n  filters: BiquadFilterNode[];\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = Array(BANDS_OCTAVES.length).fill(0), onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const output = context.createGain();\n\n    const filters = BANDS_OCTAVES.map((frequency, index, frequencies) => {\n      const isLowShelf = index === 0;\n      const isHighShelf = index === frequencies.length - 1;\n      const isBandPass = !isLowShelf && !isHighShelf;\n\n      const gain = isBandPass ? gains[index] : 0;\n      const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n      const Q = octaveBandwidthToQ(bandwidth);\n\n      const filter = context.createBiquadFilter();\n      filter.frequency.value = frequency;\n      filter.gain.value = gain;\n      filter.type = type;\n      filter.Q.value = Q;\n\n      return filter;\n    });\n\n    (filters as AudioNode[]).concat(output).reduce((source, destination) => source.connect(destination), input);\n\n    return {\n      filters,\n      input,\n      output,\n    };\n  }) as unknown) as EqualizerNode;\n\n  // AudioParam;\n  useEffect(() => {\n    node.filters.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [node, gains]);\n  useEffect(() => {\n    node.filters.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [node, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {node.filters.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      <li>\n        Sources\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"AudioBufferSource\")}>Audio Buffer Source</li>\n          <li onClick={() => addNode(\"Gate\")}>Gate</li>\n          <li onClick={() => addNode(\"Keyboard\")}>Keyboard</li>\n          <li onClick={() => addNode(\"Metronome\")}>Metronome</li>\n          <li onClick={() => addNode(\"Noise\")}>Noise</li>\n          <li onClick={() => addNode(\"Oscillator\")}>Oscillator</li>\n          <li onClick={() => addNode(\"OscillatorNote\")}>Oscillator Note</li>\n        </ul>\n      </li>\n      <li>\n        Destinations\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Destination\")}>Destination</li>\n        </ul>\n      </li>\n      <li>\n        Effects\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"BiquadFilter\")}>Biquad Filter</li>\n          <li onClick={() => addNode(\"ChannelMerger\")}>Channel Merger</li>\n          <li onClick={() => addNode(\"ChannelSplitter\")}>Channel Splitter</li>\n          <li onClick={() => addNode(\"Delay\")}>Delay</li>\n          <li onClick={() => addNode(\"DelayEffect\")}>Delay Effect</li>\n          <li onClick={() => addNode(\"DynamicsCompressor\")}>Dynamics Compressor</li>\n          <li onClick={() => addNode(\"Equalizer\")}>Equalizer</li>\n          <li onClick={() => addNode(\"Gain\")}>Gain</li>\n          <li onClick={() => addNode(\"Rectifier\")}>Rectifier</li>\n          <li onClick={() => addNode(\"SampleAndHold\")}>Sample and Hold</li>\n          <li onClick={() => addNode(\"Sign\")}>Sign</li>\n          <li onClick={() => addNode(\"StereoPanner\")}>Stereo Panner</li>\n          <li onClick={() => addNode(\"Transformer\")}>Transformer</li>\n          <li onClick={() => addNode(\"WaveShaper\")}>Wave Shaper</li>\n        </ul>\n      </li>\n      <li>\n        Controllers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"ADSR\")}>ADSR</li>\n          <li onClick={() => addNode(\"ConstantSource\")}>Constant Source</li>\n          <li onClick={() => addNode(\"Envelope\")}>Envelope</li>\n          <li onClick={() => addNode(\"InputSwitch\")}>Input Switch</li>\n          <li onClick={() => addNode(\"OutputSwitch\")}>Output Switch</li>\n        </ul>\n      </li>\n      <li>\n        Logic\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"AndGate\")}>AND Gate</li>\n          <li onClick={() => addNode(\"Comparator\")}>Comparator</li>\n          <li onClick={() => addNode(\"NotGate\")}>NOT Gate</li>\n          <li onClick={() => addNode(\"OrGate\")}>OR Gate</li>\n          <li onClick={() => addNode(\"XorGate\")}>XOR Gate</li>\n        </ul>\n      </li>\n      <li>\n        Analysers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Analyser\")}>Analyser</li>\n          <li onClick={() => addNode(\"Meter\")}>Meter</li>\n        </ul>\n      </li>\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2)} dB`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface InputSwitchNode extends ComplexAudioNode<undefined, GainNode> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const output = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    A.connect(output);\n    B.connect(output);\n\n    return {\n      A,\n      B,\n      input: undefined,\n      output,\n    };\n  }) as unknown) as InputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (input === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, input]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n              1\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n              2\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n              3\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n              4\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n              5\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n              6\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n              7\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n              8\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n              9\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n              10\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n              11\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n              12\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n              13\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n              14\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n              15\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n              16\n            </button>\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { float32toDb } from \"utils/units\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport { logarithmic } from \"utils/scale\";\n\nconst MAX_LEVEL = 6;\nconst MIN_LEVEL = -48;\nconst BUCKETS = MAX_LEVEL - MIN_LEVEL + 1;\nconst DPI_RATIO = window.devicePixelRatio ?? 1;\nconst LEVEL_GAP = 2;\nconst HEIGHT = 2;\nconst WIDTH = 25;\n\nfunction drawMeter(context: CanvasRenderingContext2D, levels: number[]) {\n  // high dpi\n  context.setTransform(DPI_RATIO, 0, 0, DPI_RATIO, 0, 0);\n\n  // reset\n  context.fillStyle = \"#000000\";\n  context.font = \"10px Arial\";\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  context.restore();\n\n  // rulers\n  Array(BUCKETS)\n    .fill(undefined)\n    .forEach((_, item) => {\n      const significant = [0, 6, 12, 18, 30, 42, 54].includes(item);\n      const rulerHeight = significant ? 1 : 0.5;\n      const rulerWidth = significant ? 6 : 3;\n      const levelText = `${MAX_LEVEL - item}`;\n      const groupX = 0;\n      const groupY = item * HEIGHT + 5.5;\n      const lineX = WIDTH - 8 + (significant ? 0 : 3);\n      const lineY = 0;\n      const textX = groupX + 15;\n      const textY = groupY;\n\n      if (significant) {\n        context.fillText(levelText, textX, textY);\n      }\n\n      context.lineWidth = rulerHeight;\n      context.fillRect(groupX + lineX, groupY + lineY, rulerWidth, rulerHeight);\n    });\n\n  // levels\n  levels.forEach((level, levelIndex) => {\n    Array(BUCKETS)\n      .fill(undefined)\n      .forEach((_, item) => {\n        const decibels = MAX_LEVEL - item;\n        const hue = Math.min(Math.max(120 * logarithmic(Math.max(0, -decibels / 10)), 0), 120).toFixed(0);\n        const lightness = float32toDb(level) >= decibels ? \"50%\" : \"0%\";\n\n        context.fillStyle = `hsl(${hue}, 50%, ${lightness})`;\n        context.fillRect((levelIndex + 1) * (WIDTH + LEVEL_GAP) - LEVEL_GAP, item * HEIGHT + 5, WIDTH, HEIGHT);\n      });\n  });\n}\n\ntype ChannelMessageEvent = MessageEvent<{ payload: { channels: number; id: string }; type: \"channels\" }>;\ntype LevelMessageEvent = MessageEvent<{ payload: { channel: number; id: string; level: number }; type: \"level\" }>;\n\n// TODO add peak hold\nfunction Meter({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const levelsRef = useRef<number[]>([]);\n  const [channels, setChannels] = useState(1);\n\n  const canvasHeight = BUCKETS * HEIGHT + 10;\n  const canvasWidth = (WIDTH + LEVEL_GAP) * (channels + 1);\n\n  // AudioNode\n  const node = useNode(id, context => new AudioWorkletNode(context, \"meter-processor\", { numberOfOutputs: 0 }));\n\n  const handleMessage = useCallback(\n    ({ data: event }: ChannelMessageEvent | LevelMessageEvent) => {\n      if (event.type === \"channels\") {\n        if (event.payload.channels !== channels) {\n          setChannels(event.payload.channels);\n        }\n      }\n\n      if (event.type === \"level\") {\n        levelsRef.current[event.payload.channel] = event.payload.level;\n      }\n    },\n    [channels]\n  );\n  useEffect(() => {\n    node.port.onmessage = handleMessage;\n  }, [node, handleMessage]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawMeter(context, levelsRef.current.slice(0, channels));\n  }, [channels]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} title=\"Meter\" type={type}>\n      <div className=\"customNode_editor\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            width={DPI_RATIO * canvasWidth}\n            height={DPI_RATIO * canvasHeight}\n            style={{ height: canvasHeight, width: canvasWidth }}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Meter);\n","export function exponential(t: number): number {\n  return (Math.pow(10, t) - 1) / 9;\n}\n\nexport function linear(t: number): number {\n  return t;\n}\n\nexport function logarithmic(t: number): number {\n  return Math.log10(1 + t * 9);\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","export enum NoiseType {\n  Brown = \"Brown\",\n  Pink = \"Pink\",\n  White = \"White\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoiseType } from \"worklets/noise-processor.types\";\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => new AudioWorkletNode(context, \"noise-processor\", { numberOfInputs: 0, processorOptions: { type } }),\n    [type]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType.White}</option>\n              <option value={NoiseType.Pink}>{NoiseType.Pink}</option>\n              <option value={NoiseType.Brown}>{NoiseType.Brown}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"not-gate-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"or-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detune: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detune, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      &nbsp;\n      <small>\n        ({frequency.toFixed(2)} Hz\n        {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n      </small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface OutputSwitchNode extends ComplexAudioNode<GainNode, undefined> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    input.connect(A);\n    input.connect(B);\n\n    return {\n      A,\n      B,\n      input,\n      output: undefined,\n    };\n  }) as unknown) as OutputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (output === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, output]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"rectifier-processor\", { processorOptions: { mode } }), [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Parameters {\n  HoldTime = \"holdTime\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Parameters } from \"worklets/sample-and-hold-processor.types\";\n\nfunction SampleAndHold({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => {\n    const sampleAndHold = new AudioWorkletNode(context, \"sample-and-hold-processor\");\n\n    return {\n      [Parameters.HoldTime]: sampleAndHold.parameters.get(Parameters.HoldTime),\n      input: sampleAndHold,\n      output: sampleAndHold,\n    };\n  });\n\n  return <Node id={id} inputs={[\"input\", Parameters.HoldTime]} outputs={[\"output\"]} title=\"Sample/Hold\" type={type} />;\n}\n\nexport default React.memo(SampleAndHold);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Sign({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"sign-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context =>\n      new AudioWorkletNode(context, \"transformer-processor\", {\n        processorOptions: {\n          inputMin,\n          inputMax,\n          outputMin,\n          outputMax,\n        },\n      }),\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"xor-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport Comparator from \"components/nodes/Comparator\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Meter from \"components/nodes/Meter\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport SampleAndHold from \"components/nodes/SampleAndHold\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport XorGate from \"components/nodes/XorGate\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  AudioBufferSource: AudioBufferSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  Comparator: Comparator,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Meter: Meter,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Rectifier: Rectifier,\n  SampleAndHold: SampleAndHold,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  XorGate: XorGate,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}