{"version":3,"sources":["worklets/and-gate-processor.worklet.ts","worklets/envelope-processor.worklet.ts","worklets/gate-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","worklets/envelope-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/nodes/Equalizer.tsx","components/FlowContextMenu.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Metronome.tsx","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","components/nodes/Sign.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","components/nodes/WaveShaper.tsx","components/nodes/XorGate.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","Promise","all","audioWorklet","addModule","AndGateWorkletProcessor","EnvelopeWorkletProcessor","GateWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","RectifierWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Mode","Parameters","Stage","memo","ADSR","selected","mode","Linear","sustainOn","envelope","AudioWorkletNode","processorOptions","attack","parameters","get","AttackTime","decay","DecayTime","gain","gate","release","ReleaseTime","sustain","SustainLevel","Exponential","Logarithmic","checked","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","Analyser","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","AndGate","numberOfInputs","BiquadFilterType","BiquadFilter","detune","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","fill","channel","alignItems","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","start","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","SliderType","Slider","props","valueShown","Log","lin2log","change","newValue","log10","log2lin","float32toDb","abs","DelayEffect","feedback","mix","createGain","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","toFixed","Destination","destination","DynamicsCompressor","knee","ratio","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","releaseTimeUsed","gateTrigger","message","port","onmessage","meta","sustainTime","scale","arc","drawEnvelope","BANDS_OCTAVES","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filters","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","FlowContextMenu","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","A","B","toggleInput","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","buffer","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","createBufferSource","loop","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","generateWhiteNoise","bufferSize","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","White","generator","Brown","Pink","NotGate","OrGate","Oscillator","frequencyDetuned","createOscillator","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","OutputSwitch","toggleOutput","Rectifier","HalfWave","FullWave","Sign","StereoPanner","pan","createStereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","XorGate","nodeTypes","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","setTransform","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","defaultPosition","defaultZoom","onlyRenderVisibleElements","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3b395bdb.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"2647c93661fd31d0c3d5.worklet.js\";","module.exports = __webpack_public_path__ + \"a0235f5e912865b33aba.worklet.js\";","module.exports = __webpack_public_path__ + \"a0986bdee6ebf67ad863.worklet.js\";","module.exports = __webpack_public_path__ + \"b486e618e29c0ba3e23f.worklet.js\";","module.exports = __webpack_public_path__ + \"b28d04036ea7e233c10d.worklet.js\";","module.exports = __webpack_public_path__ + \"33e09377500b25fe57d5.worklet.js\";","module.exports = __webpack_public_path__ + \"02fab5fec625866308db.worklet.js\";","module.exports = __webpack_public_path__ + \"d5dbf86340fca9aa51a1.worklet.js\";","module.exports = __webpack_public_path__ + \"fd3cf5a6a173d7df4717.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport EnvelopeWorkletProcessor from \"worklet-loader!worklets/envelope-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await Promise.all([\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(EnvelopeWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode, Parameters } from \"worklets/envelope-processor.types\";\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.Linear, onChange, sustainOn = true } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      const envelope = new AudioWorkletNode(context, \"envelope-processor\", {\n        processorOptions: { sustainOn, mode },\n      });\n\n      return {\n        attack: envelope.parameters.get(Parameters.AttackTime),\n        decay: envelope.parameters.get(Parameters.DecayTime),\n        gain: envelope,\n        gate: envelope,\n        input: undefined,\n        output: undefined,\n        release: envelope.parameters.get(Parameters.ReleaseTime),\n        sustain: envelope.parameters.get(Parameters.SustainLevel),\n      };\n    },\n    [mode, sustainOn]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"and-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface EnvelopeNode extends Required<ComplexAudioNode<GainNode, GainNode>> {\n  gate: AudioWorkletNode;\n}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const gain = context.createGain();\n    const gate = new AudioWorkletNode(context, \"gate-processor\");\n\n    return {\n      gate,\n      input: gain,\n      output: gain,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  const triggerOff = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const gateTrigger = useCallback(\n    ({ data: message }: MessageEvent) => {\n      if (message === \"gateOn\") {\n        triggerOn();\n      } else if (message === \"gateOff\") {\n        triggerOff();\n      }\n    },\n    [triggerOff, triggerOn]\n  );\n  useEffect(() => {\n    node.gate.port.onmessage = gateTrigger;\n  }, [node, gateTrigger]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gate\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"25%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport produce from \"immer\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\n\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n\n  return `${frequency}`;\n}\n\ninterface EqualizerNode extends ComplexAudioNode<GainNode, GainNode> {\n  filters: BiquadFilterNode[];\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = Array(BANDS_OCTAVES.length).fill(0), onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const output = context.createGain();\n\n    const filters = BANDS_OCTAVES.map((frequency, index, frequencies) => {\n      const isLowShelf = index === 0;\n      const isHighShelf = index === frequencies.length - 1;\n      const isBandPass = !isLowShelf && !isHighShelf;\n\n      const gain = isBandPass ? gains[index] : 0;\n      const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n      const Q = octaveBandwidthToQ(bandwidth);\n\n      const filter = context.createBiquadFilter();\n      filter.frequency.value = frequency;\n      filter.gain.value = gain;\n      filter.type = type;\n      filter.Q.value = Q;\n\n      return filter;\n    });\n\n    (filters as AudioNode[]).concat(output).reduce((source, destination) => source.connect(destination), input);\n\n    return {\n      filters,\n      input,\n      output,\n    };\n  }) as unknown) as EqualizerNode;\n\n  // AudioParam;\n  useEffect(() => {\n    node.filters.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [node, gains]);\n  useEffect(() => {\n    node.filters.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [node, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {node.filters.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      <li>\n        Sources\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Gate\")}>Gate</li>\n          <li onClick={() => addNode(\"Keyboard\")}>Keyboard</li>\n          <li onClick={() => addNode(\"Metronome\")}>Metronome</li>\n          <li onClick={() => addNode(\"Noise\")}>Noise</li>\n          <li onClick={() => addNode(\"Oscillator\")}>Oscillator</li>\n          <li onClick={() => addNode(\"OscillatorNote\")}>Oscillator Note</li>\n        </ul>\n      </li>\n      <li>\n        Destinations\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Destination\")}>Destination</li>\n        </ul>\n      </li>\n      <li>\n        Effects\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"BiquadFilter\")}>Biquad Filter</li>\n          <li onClick={() => addNode(\"ChannelMerger\")}>Channel Merger</li>\n          <li onClick={() => addNode(\"ChannelSplitter\")}>Channel Splitter</li>\n          <li onClick={() => addNode(\"Delay\")}>Delay</li>\n          <li onClick={() => addNode(\"DelayEffect\")}>Delay Effect</li>\n          <li onClick={() => addNode(\"DynamicsCompressor\")}>Dynamics Compressor</li>\n          <li onClick={() => addNode(\"Equalizer\")}>Equalizer</li>\n          <li onClick={() => addNode(\"Gain\")}>Gain</li>\n          <li onClick={() => addNode(\"Rectifier\")}>Rectifier</li>\n          <li onClick={() => addNode(\"Sign\")}>Sign</li>\n          <li onClick={() => addNode(\"StereoPanner\")}>Stereo Panner</li>\n          <li onClick={() => addNode(\"Transformer\")}>Transformer</li>\n          <li onClick={() => addNode(\"WaveShaper\")}>Wave Shaper</li>\n        </ul>\n      </li>\n      <li>\n        Controllers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"ADSR\")}>ADSR</li>\n          <li onClick={() => addNode(\"ConstantSource\")}>Constant Source</li>\n          <li onClick={() => addNode(\"Envelope\")}>Envelope</li>\n          <li onClick={() => addNode(\"InputSwitch\")}>Input Switch</li>\n          <li onClick={() => addNode(\"OutputSwitch\")}>Output Switch</li>\n        </ul>\n      </li>\n      <li>\n        Logic\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"AndGate\")}>AND Gate</li>\n          <li onClick={() => addNode(\"NotGate\")}>NOT Gate</li>\n          <li onClick={() => addNode(\"OrGate\")}>OR Gate</li>\n          <li onClick={() => addNode(\"XorGate\")}>XOR Gate</li>\n        </ul>\n      </li>\n      <li>\n        Analysers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Analyser\")}>Analyser</li>\n        </ul>\n      </li>\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2)} dB`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface InputSwitchNode extends ComplexAudioNode<undefined, GainNode> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const output = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    A.connect(output);\n    B.connect(output);\n\n    return {\n      A,\n      B,\n      input: undefined,\n      output,\n    };\n  }) as unknown) as InputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (input === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, input]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n              1\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n              2\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n              3\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n              4\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n              5\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n              6\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n              7\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n              8\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n              9\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n              10\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n              11\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n              12\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n              13\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n              14\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n              15\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n              16\n            </button>\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum NoiseType {\n  Brown = \"brown\" as any,\n  Pink = \"pink\" as any,\n  White = \"white\" as any,\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        [NoiseType.Brown]: generateBrownNoise,\n        [NoiseType.Pink]: generatePinkNoise,\n        [NoiseType.White]: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType[NoiseType.White]}</option>\n              <option value={NoiseType.Pink}>{NoiseType[NoiseType.Pink]}</option>\n              <option value={NoiseType.Brown}>{NoiseType[NoiseType.Brown]}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"not-gate-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"or-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detune: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detune, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      &nbsp;\n      <small>\n        ({frequency.toFixed(2)} Hz\n        {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n      </small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface OutputSwitchNode extends ComplexAudioNode<GainNode, undefined> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    input.connect(A);\n    input.connect(B);\n\n    return {\n      A,\n      B,\n      input,\n      output: undefined,\n    };\n  }) as unknown) as OutputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (output === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, output]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"rectifier-processor\", { processorOptions: { mode } }), [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Sign({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"sign-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context =>\n      new AudioWorkletNode(context, \"transformer-processor\", {\n        processorOptions: {\n          inputMin,\n          inputMax,\n          outputMin,\n          outputMax,\n        },\n      }),\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"xor-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport XorGate from \"components/nodes/XorGate\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Rectifier: Rectifier,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  XorGate: XorGate,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}