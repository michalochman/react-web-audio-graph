{"version":3,"sources":["worklets/and-gate-processor.worklet.ts","worklets/envelope-processor.worklet.ts","worklets/gate-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","worklets/envelope-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Envelope.tsx","components/nodes/Equalizer.tsx","components/FlowContextMenu.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Metronome.tsx","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","components/nodes/Sign.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","components/nodes/WaveShaper.tsx","components/nodes/XorGate.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","Promise","all","audioWorklet","addModule","AndGateWorkletProcessor","EnvelopeWorkletProcessor","GateWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","RectifierWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","props","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Mode","Parameters","Stage","memo","ADSR","selected","mode","Linear","sustainOn","envelope","AudioWorkletNode","processorOptions","attack","parameters","get","AttackTime","decay","DecayTime","gain","gate","release","ReleaseTime","sustain","SustainLevel","Exponential","Logarithmic","checked","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","Analyser","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","max","min","step","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","items","item","kind","getAsFile","onDragOver","onDrop","BiquadFilterType","BiquadFilter","detune","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","fill","channel","alignItems","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","ConstantSource","offset","createConstantSource","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","float32toDb","abs","DelayEffect","feedback","mix","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","toFixed","Destination","destination","DynamicsCompressor","knee","ratio","threshold","createDynamicsCompressor","Envelope","attackTime","decayTime","releaseTime","sustainLevel","keyOnEventTime","Number","MAX_SAFE_INTEGER","keyOffEventTime","triggerOn","cancelScheduledValues","setValueAtTime","linearRampToValueAtTime","triggerOff","releaseTimeUsed","gateTrigger","message","port","onmessage","meta","sustainTime","scale","arc","drawEnvelope","BANDS_OCTAVES","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filters","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","FlowContextMenu","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","A","B","toggleInput","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","generateWhiteNoise","bufferSize","random","generatePinkNoise","b0","b1","b2","b3","b4","b5","b6","white","generateBrownNoise","lastOut","Noise","White","generator","Brown","Pink","NotGate","OrGate","Oscillator","frequencyDetuned","createOscillator","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","OutputSwitch","toggleOutput","Rectifier","HalfWave","FullWave","Sign","StereoPanner","pan","createStereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","XorGate","nodeTypes","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","setTransform","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","defaultPosition","defaultZoom","onlyRenderVisibleElements","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sIAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,qMCE9BC,EAAeC,wBAA4B,M,6JCyEzCC,MAzDf,YAAqC,IAApBC,EAAmB,EAAnBA,SAAmB,EACRC,oBAAS,GADD,mBAC3BC,EAD2B,KACpBC,EADoB,KAG5BC,EAAUC,mBAAQ,WACtB,IAME,OALKC,OAAOT,eAEVS,OAAOT,aAAeS,OAAOC,oBAGxB,IAAID,OAAOT,aAClB,aACD,IAEHW,qBAAU,WACR,IAAMC,EAA2B,uCAAG,WAAOL,GAAP,SAAAM,EAAA,sEAC5BC,QAAQC,IAAI,CAChBR,EAAQS,aAAaC,UAAUC,KAC/BX,EAAQS,aAAaC,UAAUE,KAC/BZ,EAAQS,aAAaC,UAAUG,KAC/Bb,EAAQS,aAAaC,UAAUI,KAC/Bd,EAAQS,aAAaC,UAAUK,KAC/Bf,EAAQS,aAAaC,UAAUM,KAC/BhB,EAAQS,aAAaC,UAAUO,KAC/BjB,EAAQS,aAAaC,UAAUQ,KAC/BlB,EAAQS,aAAaC,UAAUS,OAVC,OAYlCpB,GAAS,GAZyB,2CAAH,sDAe7BC,GACFK,EAA4BL,KAE7B,CAACA,IAEJ,IAAMoB,EAASC,uBAAY,WACF,eAAZ,OAAPrB,QAAO,IAAPA,OAAA,EAAAA,EAASsB,QACXtB,EAAQoB,WAET,CAACpB,IAEJ,OAAKA,EAIAF,EAMH,qBAAKyB,QAASH,EAAd,SACE,cAAC3B,EAAa+B,SAAd,CAAuBC,MAAOzB,EAA9B,SAAwCJ,MALnC,KALA,kG,OCnDE8B,EAAqBhC,wBAAsC,MAEjE,SAASiC,IACd,OAAOC,qBAAWF,G,YCsCLG,MAzCf,YAA2C,IAApBjC,EAAmB,EAAnBA,SAAmB,EACJkC,IAAMjC,SAAS,MADX,mBACjCkC,EADiC,KACrBC,EADqB,OAEEF,IAAMjC,WAFR,mBAEjCoC,EAFiC,KAElBC,EAFkB,KAGlCC,EAAmBC,mBAHe,EAITC,YAAUF,EAAiBG,QAASL,EAAe,CAAEM,UAAW,iBAAvFC,EAJgC,EAIhCA,OAAQC,EAJwB,EAIxBA,WAEVzC,EAAUC,mBACd,iBAAO,CACLyC,QAAS,WACP,OAAgC,MAA5BP,EAAiBG,QACZ,CAAEK,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAG5Db,EAAiBG,QAAQW,yBAElCC,KAAM,WACJlB,EAAc,OAEhBmB,KAAM,SAACC,GACLpB,EAAcoB,IAEhBC,QAAS,SAACC,GACRnB,EAAiBG,QAAU,CACzBW,sBAAuB,kBAAMK,KAGjCpB,sBAEF,IAGF,OACE,eAACR,EAAmBF,SAApB,CAA6BC,MAAOzB,EAApC,UACGJ,EACD,6CAAK2D,IAAK,SAAAC,GAAI,OAAIA,GAAQtB,EAAiBsB,IAAOC,MAAOjB,EAAOkB,QAAYjB,EAAWiB,QAAvF,aACG3B,S,gBCrCF,SAAS4B,EAAYH,GACK,IAAD,YAKvB,IALHI,EAAmBJ,IACrB,QAAC,EAAAA,EAAKK,aAAN,mBAAqBC,YAArB,iBACA,QAAC,EAAAN,EAAKO,cAAN,mBAAsBD,YAAtB,iBACA,UAAAN,EAAKK,aAAL,SAAYG,aACZ,UAAAR,EAAKO,cAAL,SAAaC,eAEb,QAAC,GAAD,EAACR,GAAaM,YAAd,iBACAN,EAAKQ,cA4BMC,MAxBf,YAAqC,IAApBrE,EAAmB,EAAnBA,SACTsE,EAAQ9B,iBAAiC,IACzCpC,EAA2BC,mBAC/B,iBAAO,CACLkE,QAAS,SAACC,EAAIZ,GACZU,EAAM5B,QAAQ8B,GAAMZ,GAEtBa,QAAS,SAAAD,GAAE,OAAIF,EAAM5B,QAAQ8B,IAC7BF,MAAOA,EAAM5B,QACbgC,WAAY,SAAAF,GACVT,EAAYO,EAAM5B,QAAQ8B,WACnBF,EAAM5B,QAAQ8B,OAGzB,IAGF,OACE,8BACE,cAACG,EAAY/C,SAAb,CAAsBC,MAAOzB,EAA7B,SAAuCJ,OCjC7C,SAAS4E,EAAgBC,GAAyB,IAAD,IAC/C,QAAO,oBAAEA,EAAOC,MAAM,kBAAf,aAAE,EAA0B,UAA5B,QAAkC,GAU3C,SAASC,EACPC,EACAP,GAEA,IAAKO,EAAWC,SAAWD,EAAWE,SAAWF,EAAWG,eAAiBH,EAAWI,aACtF,MAAM,IAAIC,MAAM,sBAGlB,IAAMC,EAAsBN,EAAWI,aAAaG,WAAW,SACzDC,EAAsBR,EAAWG,aAAaI,WAAW,UAC3DN,EAASR,EAAQO,EAAWC,QAC5BC,EAAST,EAAQO,EAAWE,QAEhC,GAAIlB,EAAmBiB,IAAWO,EAAqB,CACrD,IAAKP,EAAOd,OACV,MAAM,IAAIkB,MAAM,sBAGlBJ,EAASA,EAAOd,OAGlB,GAAIH,EAAmBkB,IAAWI,EAAqB,CACrD,IAAKJ,EAAOjB,MACV,MAAM,IAAIoB,MAAM,sBAGlBH,EAASA,EAAOjB,MAGlB,IAAKgB,IAAWC,EACd,MAAM,IAAIG,MAAM,sBAGlB,MAAO,CACLI,WAAYH,EAAsBV,EAAgBI,EAAWI,mBAAgBM,EAC7EC,YAAaf,EAAgBI,EAAWG,cACxCF,OAAQO,EACJP,EAEAA,EAAOD,EAAWG,cACtBD,OAAQI,EACJJ,EAEAA,EAAOF,EAAWI,eAInB,SAASQ,EAAaZ,EAA+BP,GAC1D,IAAK,IAAD,EACkDM,EAAkBC,EAAYP,GAA1EgB,EADN,EACMA,WAAYE,EADlB,EACkBA,YAAaV,EAD/B,EAC+BA,OAAQC,EADvC,EACuCA,OACvB,MAAdO,EAEFR,EAAOY,QAAQX,EAAQS,EAAaF,GAGpCR,EAAOY,QAAQX,EAAQS,GAEzB,MAAOG,GACPC,QAAQC,MAAMF,IAIX,SAASG,EAAgBjB,EAA+BP,GAC7D,IAAK,IAAD,EACkDM,EAAkBC,EAAYP,GAA1EgB,EADN,EACMA,WAAYE,EADlB,EACkBA,YAAaV,EAD/B,EAC+BA,OAAQC,EADvC,EACuCA,OACvB,MAAdO,EAEFR,EAAOb,WAAWc,EAAQS,EAAaF,GAGvCR,EAAOb,WAAWc,EAAQS,GAE5B,MAAOG,GACPC,QAAQC,MAAMF,IC9DX,SAAS9B,EAAmBJ,GACjC,OAAOA,GAAQ,UAAWA,GAAQ,WAAYA,EAGzC,IAAMe,EAAc7E,wBAA+B,MAEnD,SAASoG,IACd,OAAOlE,qBAAW2C,GASb,SAASwB,EACd3B,EACA4B,GAEC,IADDC,EACA,uDAD+B,GAEzBjG,EAAU4B,qBAAWnC,GAD3B,EAEyCqG,IAAjC3B,EAFR,EAEQA,QAASE,EAFjB,EAEiBA,QAASC,EAF1B,EAE0BA,WACpB4B,EAAQC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,SAGrC1C,EAAOvD,mBAAQ,kBAAM+F,EAAYhG,KAAUiG,GAgBjD,OAdA7F,qBAAU,WACR+D,EAAQC,EAAIZ,GAGZ,IAAM6C,EAAiBH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAK1B,SAAWT,GAAMmC,EAAKzB,SAAWV,KAGlF,OAFAiC,EAAeG,SAAQ,SAAAD,GAAI,OAAIf,EAAae,EAAMlC,MAE3C,WACLgC,EAAeG,SAAQ,SAAAD,GAAI,OAAIV,EAAgBU,EAAMlC,MACrDC,EAAWF,MAGZ,CAACD,EAASE,EAASb,EAAMY,EAAIE,IAEzBd,E,YClEIiD,EAAiB/G,wBAA4B,MAEnD,SAASgH,IACd,OAAO9E,qBAAW6E,GCUpB,SAASE,GAAT,GAAgF,IAAhE/G,EAA+D,EAA/DA,SAAUwE,EAAqD,EAArDA,GAAIwC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,EAAgB,qEACnBN,IAAlDO,EADqE,EACrEA,SAAUC,EAD2D,EAC3DA,uBAAwBC,EADmC,EACnCA,YACpCC,EAAczF,IACd6B,EAAOyD,EAASI,MAAK,SAAA7D,GAAI,OAAIA,EAAKY,KAAOA,KACzCkD,EAAcrH,mBAClB,iBAAO,CACLsH,WAAW,IAAD,OAAMnD,EAAGoD,QAAQ,OAE7B,CAACpD,IAGGqD,EAAYpG,uBAAY,WAC5B,IAAKmC,EACH,MAAM,IAAIyB,MAAM,kDAGlB,IAAMb,EAAE,UAAM2C,EAAN,YAAcW,eAChBC,EAAWT,EAAuB9C,GAClCwD,EAAU,CACdxD,KACAyD,KAAK,2BAAMrE,EAAKqE,MAAZ,IAAkBF,aACtBZ,KAAMvD,EAAKuD,KACXe,SAAU,CACRC,EAAGvE,EAAKsE,SAASC,EAAIC,GACrBC,EAAGzE,EAAKsE,SAASG,EAAID,KAGzBb,GAAY,SAACF,GAAD,4BAA4BA,GAA5B,CAAsCW,OAClDR,EAAYlE,SACX,CAACkE,EAAaF,EAAwB1D,EAAM2D,EAAaJ,IAEtDxF,EAAUF,uBAAY,WAC1B+F,EAAYlE,SACX,CAACkE,IAEEc,EAAgB7G,uBACpB,SAAC8G,GACCA,EAAMC,iBACNhB,EAAY/D,QAAQ,CAAEN,MAAO,EAAGC,OAAQ,EAAGL,IAAKwF,EAAME,QAASxF,MAAO,EAAGC,OAAQ,EAAGF,KAAMuF,EAAMG,UAChGlB,EAAYjE,KACV,oBAAIoF,UAAU,cAAd,SACE,oBAAIhH,QAASkG,EAAb,wBAIN,CAACA,EAAWL,IAGd,OACE,8CAAKmB,UAAU,aAAazB,MAAO1C,EAAI7C,QAASA,EAAS2G,cAAeA,GAAmBlB,GAA3F,cACE,qBAAKuB,UAAU,oBAAf,gBAAoCzB,QAApC,IAAoCA,IAASC,IAC7C,sBAAKwB,UAAU,kBAAf,UACG3B,GACC,qBAAK2B,UAAU,oBAAf,SACG3B,EAAO4B,KAAI,SAAA3E,GAAK,OACf,sBAAiB0E,UAAU,kBAA3B,UACE,cAAC,IAAD,CAAQnE,GAAIP,EAAOiE,SAAUW,IAASC,KAAMjF,MAAO6D,EAAaP,KAAK,WACpElD,IAFOA,QAOfgD,GACC,qBAAK0B,UAAU,qBAAf,SACG1B,EAAQ2B,KAAI,SAAAzE,GAAM,OACjB,sBAAkBwE,UAAU,kBAA5B,UACE,cAAC,IAAD,CAAQnE,GAAIL,EAAQ+D,SAAUW,IAASE,MAAOlF,MAAO6D,EAAaP,KAAK,WACtEhD,IAFOA,WAQjBnE,MAKQkC,IC9FH8G,GAMAC,GAOAC,GDiFGhH,OAAMiH,KAAKpC,IExF1B,SAASqC,GAAT,GAAwD,IAAxCnB,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACMc,EAAnDqB,YAD6C,MACtCN,GAAKO,OADiC,EACzBxB,EAA+BE,EAA/BF,SADyB,EACME,EAArBuB,iBADe,SAyBrD,OArBArD,EACE3B,GACA,SAAApE,GACE,IAAMqJ,EAAW,IAAIC,iBAAiBtJ,EAAS,qBAAsB,CACnEuJ,iBAAkB,CAAEH,YAAWF,UAGjC,MAAO,CACLM,OAAQH,EAASI,WAAWC,IAAIb,GAAWc,YAC3CC,MAAOP,EAASI,WAAWC,IAAIb,GAAWgB,WAC1CC,KAAMT,EACNU,KAAMV,EACNxF,WAAOyB,EACPvB,YAAQuB,EACR0E,QAASX,EAASI,WAAWC,IAAIb,GAAWoB,aAC5CC,QAASb,EAASI,WAAWC,IAAIb,GAAWsB,iBAGhD,CAACjB,EAAME,IAIP,cAAC,GAAD,CACEhF,GAAIA,EACJwC,OAAQ,CAAC,OAAQiC,GAAWc,WAAYd,GAAWgB,UAAWhB,GAAWoB,YAAapB,GAAWsB,cACjGtD,QAAS,CAAC,QACVC,MAAM,OACNC,KAAMA,EALR,SAOGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuB,KAAMxD,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOyH,EAA/E,UACE,wBAAQzH,MAAOmH,GAAKwB,YAApB,SAAkCxB,GAAKwB,cACvC,wBAAQ3I,MAAOmH,GAAKO,OAApB,SAA6BP,GAAKO,SAClC,wBAAQ1H,MAAOmH,GAAKyB,YAApB,SAAkCzB,GAAKyB,mBAG3C,qBAAK9B,UAAU,kBAAf,SACE,kCACE,uBACE+B,QAASlB,EACTzB,SAAU,kBAAMA,EAAS,CAAEyB,WAAYA,KACvCtC,MAAM,UACNC,KAAK,aALT,wB,SDjDA6B,K,0BAAAA,E,gBAAAA,E,2BAAAA,Q,cAMAC,K,oBAAAA,E,kBAAAA,E,sBAAAA,E,wBAAAA,Q,cAOAC,K,gBAAAA,E,cAAAA,E,kBAAAA,E,mBAAAA,Q,KCoDGhH,WAAMiH,KAAKC,IC3DX,SAASuB,GAAkBC,EAAgCC,GACxE,IAAMC,EAAkBtI,mBAClBuI,EAAavI,mBACbwI,EAAM,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAASG,OAElBC,EAAUxJ,uBACd,SAACyJ,GACC,GAA+B,MAA3BJ,EAAgBpI,QAAiB,CACnC,IAAMyI,EAAYD,EAAOJ,EAAgBpI,UACpCsI,GAAUG,EAAY,IAAOH,KAChCJ,EAASO,GACTL,EAAgBpI,QAAUwI,QAG5BN,EAAS,GACTE,EAAgBpI,QAAUwI,EAG5BH,EAAWrI,QAAU0I,sBAAsBH,KAG7C,CAACL,IAGHpK,qBAAU,WAGR,OAFAuK,EAAWrI,QAAU0I,sBAAsBH,GAEpC,WACqB,MAAtBF,EAAWrI,SACb2I,qBAAqBN,EAAWrI,YAGnC,CAACuI,ICeN,SAASK,GAAT,GAAoE,IAA9C1H,EAA6C,EAA7CA,KAAM2H,EAAuC,EAAvCA,OAAQpE,EAA+B,EAA/BA,KAASqE,EAAsB,wCAC3DC,EAAYjJ,iBAAO,IAAIkJ,WAAW9H,EAAK+H,oBACvCC,EAAYpJ,iBAA0B,MAEtCqJ,EAAOpK,uBAAY,WACvB,IAAMqK,EAASF,EAAUlJ,QACnBtC,EAAO,OAAG0L,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MAC9BD,GAAW1L,IAIZ+G,IAAS6E,GAASC,WApD1B,SAA4B7L,EAAmC6H,GAC7D,IAAIE,EAAI,EACF/E,EAAShD,EAAQ0L,OAAO1I,OACxBD,EAAQ/C,EAAQ0L,OAAO3I,MACvB+I,EAAejE,EAAKkE,OACpBC,EAAajJ,EAAQ+I,EAE3B9L,EAAQiM,UAAY,UACpBjM,EAAQkM,SAAS,EAAG,EAAGnJ,EAAO,KAE9B/C,EAAQmM,UAAY,EACpBnM,EAAQoM,YAAc,UACtBpM,EAAQqM,YACRrM,EAAQsM,OAAOvE,EAAG/E,EAAW6E,EAAK,GAAK,IAAS7E,EAAU,GAC1D,IAAK,IAAIuJ,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMtE,EAAMJ,EAAK0E,GAAK,IAASvJ,EAAU,EACzChD,EAAQwM,OAAOzE,EAAG/E,EAASiF,GAC3BF,GAAKiE,EAEPhM,EAAQyM,SAkCJC,CAAmB1M,EAASqL,EAAU/I,SAC7ByE,IAAS6E,GAASe,WAhCjC,SAA2B3M,EAAmC6H,GAC5D,IAAIE,EAAI,EACF/E,EAAShD,EAAQ0L,OAAO1I,OACxBD,EAAQ/C,EAAQ0L,OAAO3I,MACvB+I,EAAejE,EAAKkE,OACpBa,EAAW7J,EAAQ+I,EAEzB9L,EAAQiM,UAAY,UACpBjM,EAAQkM,SAAS,EAAG,EAAGnJ,EAAOC,GAE9BhD,EAAQiM,UAAY,UACpB,IAAK,IAAIM,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMM,EAAY7J,GAAU6E,EAAK0E,GAAK,KAChCtE,EAAIjF,EAAS6J,EACnB7M,EAAQkM,SAASnE,EAAGE,EAAG2E,EAAUC,GACjC9E,GAAK6E,GAkBHE,CAAkB9M,EAASqL,EAAU/I,YAEtC,CAACyE,IAEEgG,EAAU1L,uBAAY,WAC1B,IAAMyK,EAAetI,EAAK+H,kBACpByB,EAAY,IAAI1B,WAAWQ,GAC7B/E,IAAS6E,GAASC,WACpBrI,EAAKyJ,sBAAsBD,GAClBjG,IAAS6E,GAASe,WAC3BnJ,EAAK0J,qBAAqBF,GAE5B3B,EAAU/I,QAAU0K,IACnB,CAACxJ,EAAMuD,IAWV,OAFAwD,GAPalJ,uBAAY,WAClB8J,IACH4B,IACAtB,OAED,CAACA,EAAMsB,EAAS5B,KAIZ,oCAAQ5H,IAAKiI,EAAW/H,MAAO,CAAE0J,QAAS,UAAe/B,IAGnDtJ,ICxFH8J,GDwFG9J,OAAMiH,KAAKmC,ICnF1B,SAASkC,GAAT,GAAsE,IAAlDvF,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACec,EAA1EyF,kBAD2D,MAC9C,GAD8C,EAC1C3F,EAAyDE,EAAzDF,SAD0C,EACeE,EAA/CsD,cADgC,WACetD,EAA/Bd,YADgB,MACT6E,GAASC,WADA,EAI7DrI,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQuN,oBAK5C,OAFAnN,qBAAU,WAAYoD,EAAKgK,QAAUC,KAAKC,IAAI,EAAGJ,KAAc,CAAC9J,EAAM8J,IAGpE,eAAC,GAAD,CAAMlJ,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,WAAYC,QAAS,CAAC,UAAWC,MAAK,oBAAeC,GAAQA,KAAMsG,EAAnG,UACE,qBAAK9E,UAAU,kBAAf,SACE,cAAC,GAAD,CAAYxB,KAAMA,EAAMvD,KAAMA,EAAM2H,OAAQA,EAAQnI,OAAQ,GAAID,MAAO,QAExEkG,GACC,sBAAKV,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACExB,KAAK,QACL4G,IAAI,KACJC,IAAI,IACJjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE2F,YAAa5H,EAAEZ,OAAOrD,SAChDoM,KAAM,EACNpM,MAAO6L,IAERG,KAAKC,IAAI,EAAGJ,MAEf,sBAAK/E,UAAU,kBAAkB9E,MAAO,CAAEqK,eAAgB,iBAA1D,UACE,yBAAQnG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOsF,EAA/E,UACE,wBAAQtF,MAAOmK,GAASe,UAAxB,SAAoCf,GAASe,YAC7C,wBAAQlL,MAAOmK,GAASC,WAAxB,SAAqCD,GAASC,gBAEhD,kCACE,uBAAOvB,QAASa,EAAQxD,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEwD,QAASA,KAAWrE,MAAM,QAAQC,KAAK,aAD3F,sB,SArCA6E,K,sBAAAA,E,0BAAAA,Q,KAgDG9J,WAAMiH,KAAKqE,ICjD1B,SAASW,GAAT,GAA2C,IAAxB3J,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIrB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,qBAAsB,CAAEgO,eAAgB,OAEtF,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,IAGrFjF,WAAMiH,KAAKgF,ICP1B,SAASE,GAAT,GAAqE,IAAxCpG,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EAChCc,EAA1BqG,YAD0D,SAC7CvG,EAAaE,EAAbF,SACfwG,EAAqB/L,mBAIrBoB,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQoO,gBAEtCC,EAAmBhN,uBACvB,SAACiN,GAAyC,IAAD,EAEvC,UAAAH,EAAmB7L,eAAnB,SAA4B0B,aAC5BmK,EAAmB7L,QAAUgM,EAG7BH,EAAmB7L,QAAQmD,QAAQjC,KAErC,CAACA,IAEG+K,EAAQlN,uBAAY,WACxB,GAAK8M,EAAmB7L,QAAxB,CAIA,IAAMgM,EAAe9K,EAAKxD,QAAQwO,qBAClCF,EAAaG,OAASN,EAAmB7L,QAAQmM,OACjDH,EAAaJ,KAAOA,EAEpBG,EAAiBC,GACjBH,EAAmB7L,QAAQiM,WAC1B,CAAC/K,EAAM0K,EAAMG,IACVvK,EAAOzC,uBAAY,WACvB,IAAK,IAAD,EACF,UAAA8M,EAAmB7L,eAAnB,SAA4BwB,OAC5B,aACD,IAEG4K,EAAgBrN,sBAAW,uCAC/B,WAAOsN,GAAP,eAAArO,EAAA,6DACQgO,EAAe9K,EAAKxD,QAAQwO,qBADpC,KAE8BhL,EAAKxD,QAFnC,SAEiE2O,EAAKC,cAFtE,wCAE2CC,gBAF3C,uBAEEP,EAAaG,OAFf,OAGEH,EAAaJ,KAAOA,EAEpBG,EAAiBC,GALnB,4CAD+B,sDAQ/B,CAAC9K,EAAM0K,EAAMG,IAGTS,EAAezN,uBACnB,SAAAqE,GACEA,EAAE0C,iBACFsG,EAAchJ,EAAEZ,OAAOiK,MAAM,MAE/B,CAACL,IAEGM,EAAiB3N,uBAAY,SAAAqE,GAAUA,EAAE0C,mBAAkB,IAC3D6G,EAAa5N,sBAAW,uCAC5B,WAAMqE,GAAN,eAAApF,EAAA,sDACEoF,EAAE0C,iBACIuG,EAAa,YAAIjJ,EAAEwJ,aAAaC,OACnC7I,QAAO,SAAC8I,GAAD,MAA0C,SAAdA,EAAKC,QAAiB,GACzDC,YACHZ,EAAcC,GALhB,2CAD4B,sDAQ5B,CAACD,IAGH,OACE,cAAC,GAAD,CACEtK,GAAIA,EACJyC,QAAS,CAAC,UACVC,MAAM,gBACNC,KAAMA,EACNwI,WAAYP,EACZQ,OAAQP,EANV,SAQE,sBAAK1G,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,wBAAQhH,QAASgN,EAAjB,kBACA,wBAAQhN,QAASuC,EAAjB,qBAEDmF,GACC,qCACE,qBAAKV,UAAU,kBAAf,SACE,uBAAOZ,SAAUmH,EAAc/H,KAAK,WAEtC,qBAAKwB,UAAU,kBAAf,SACE,kCACE,uBAAO+B,QAAS4D,EAAMvG,SAAU,kBAAMA,EAAS,CAAEuG,MAAOA,KAASpH,MAAM,OAAOC,KAAK,aADrF,oBAYCjF,ICnGV2N,GDmGU3N,OAAMiH,KAAKkF,IC3D1B,SAASyB,GAAT,GAA0E,IAAlD7H,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EAC6Bc,EAA5F8H,cAD+D,MACtD,EADsD,IAC6B9H,EAAhFiC,YADmD,MAC5C,EAD4C,IAC6BjC,EAAtE+H,iBADyC,MAC7B,IAD6B,IAC6B/H,EAArDgI,SADwB,MACpB,EADoB,EACjBlI,EAA8CE,EAA9CF,SADiB,EAC6BE,EAApCd,YADO,MACA0I,GAAiBK,QADjB,EAEjEtE,EAAYpJ,iBAA0B,MAGtCoB,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQ+P,wBAG5C3P,qBAAU,WAAYoD,EAAKmM,OAAOlO,MAAQkO,IAAS,CAACnM,EAAMmM,IAC1DvP,qBAAU,WAAYoD,EAAKoM,UAAUnO,MAAQmO,IAAY,CAACpM,EAAMoM,IAChExP,qBAAU,WAAYoD,EAAKsG,KAAKrI,MAAQqI,IAAO,CAACtG,EAAMsG,IACtD1J,qBAAU,WAAYoD,EAAKqM,EAAEpO,MAAQoO,IAAI,CAACrM,EAAMqM,IAChDzP,qBAAU,WAAYoD,EAAKuD,KAAOA,IAAO,CAACvD,EAAMuD,IAEhD3G,qBAAU,WACR,IAAMsL,EAASF,EAAUlJ,QACnBtC,EAAO,OAAG0L,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MACnC,GAAKD,GAAW1L,EAAhB,CAIA,IAAMgQ,EAAc,IAAIC,aAAazM,EAAKxD,QAAQkQ,WAAa,KAAK1H,KAAI,SAAC2H,EAAG5D,GAAJ,OAAc,IAAJA,KAC5E6D,EAAa,IAAIH,aAAaD,EAAYjE,QAC1CsE,EAAS,IAAIJ,aAAaD,EAAYjE,QAI5CvI,EAAK8M,qBAAqBN,EAAaI,EAAYC,GAxDvD,SAA+BrQ,EAAmC6H,EAAoBrE,GACpF,IAAIuE,EAAI,EACF/E,EAAShD,EAAQ0L,OAAO1I,OACxBD,EAAQ/C,EAAQ0L,OAAO3I,MACvB+I,EAAejE,EAAKkE,OACpBC,EAAajJ,EAAQ+I,EAE3B9L,EAAQiM,UAAY,UACpBjM,EAAQkM,SAAS,EAAG,EAAGnJ,EAAOC,GAE9BhD,EAAQmM,UAAY,EACpBnM,EAAQoM,YAAc,YACtBpM,EAAQqM,YACRrM,EAAQsM,OAAQ9I,EAAKoM,UAAUnO,OAAS+B,EAAKxD,QAAQkQ,WAAa,GAAMnN,EAAO,GAC/E/C,EAAQwM,OAAQhJ,EAAKoM,UAAUnO,OAAS+B,EAAKxD,QAAQkQ,WAAa,GAAMnN,EAAOC,GAC/EhD,EAAQyM,SACRzM,EAAQuQ,YAERvQ,EAAQmM,UAAY,EACpBnM,EAAQoM,YAAc,UACtBpM,EAAQqM,YACR,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMtE,EAAKJ,EAAK0E,GAAKvJ,EAAU,EAC/BhD,EAAQwM,OAAOzE,EAAG/E,EAASiF,GAC3BF,GAAKiE,EAEPhM,EAAQyM,SAgCN+D,CAAsBxQ,EAASoQ,EAAY5M,MAC1C,CAACA,EAAMmM,EAAQ7F,EAAM8F,EAAWC,EAAG5G,EAAUlC,IAEhD,IAAM0J,EAAa,CAAChB,GAAiBiB,SAAUjB,GAAiBkB,UAAWlB,GAAiBmB,SAASC,SAAS9J,GACxG+J,EAAU,CACdrB,GAAiBK,QACjBL,GAAiBsB,SACjBtB,GAAiBuB,SACjBvB,GAAiBmB,QACjBnB,GAAiBwB,MACjBxB,GAAiByB,SACjBL,SAAS9J,GAEX,OACE,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,QAAS,SAAU,YAAa,OAAQ,KACjDC,QAAS,CAAC,UACVC,MAAK,kBAAaC,GAClBA,KAAMsG,EALR,SAOGpE,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEqF,KAAM,IACND,IAAK,IACLhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgI,QAASjK,EAAEZ,OAAOrD,SAC5CoM,KAAM,EACN/G,MAAK,kBAAa6I,EAAb,UACL5I,KAAK,QACLtF,MAAOkO,MAGX,qBAAKpH,UAAU,kBAAf,SACE,uBACEqF,IAAK,GACLD,IAAKnK,EAAKxD,QAAQkQ,WAAa,EAC/BvI,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEiI,WAAYlK,EAAEZ,OAAOrD,SAC/CoM,KAAM,EACN/G,MAAK,qBAAgB8I,EAAhB,OACL7I,KAAK,QACLtF,MAAOmO,MAGX,qBAAKrH,UAAU,kBAAf,SACE,uBACE4I,UAAWV,EACX7C,KAAM,GACND,IAAK,GACLhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEmC,MAAOpE,EAAEZ,OAAOrD,SAC1CoM,KAAM,GACN/G,MAAK,gBAAWgD,EAAX,OACL/C,KAAK,QACLtF,MAAOqI,MAGX,qBAAKvB,UAAU,kBAAf,SACE,uBACE4I,UAAWL,EACXlD,IAAK,KACLD,IAAK,CAAC8B,GAAiBK,QAASL,GAAiBsB,UAAUF,SAAS9J,GAAQ,GAAK,IACjFY,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkI,GAAInK,EAAEZ,OAAOrD,SACvCoM,KAAM,CAAC4B,GAAiBK,QAASL,GAAiBsB,UAAUF,SAAS9J,GAAQ,GAAM,GACnFD,MAAK,aAAQ+I,GACb9I,KAAK,QACLtF,MAAOoO,MAGX,qBAAKtH,UAAU,kBAAf,SACE,wBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SAAUA,MAAOsF,EAAlE,SACGqK,OAAOC,OAAO5B,IAAkBjH,KAAI,SAAA8I,GAAU,OAC7C,wBAAyB7P,MAAO6P,EAAhC,SACGA,GADUA,UAMnB,qBAAK/I,UAAU,kBAAf,SACE,wBAAQhF,IAAKiI,EAAWxI,OAAQ,GAAID,MAAO,c,SApJlD0M,K,kBAAAA,E,oBAAAA,E,oBAAAA,E,oBAAAA,E,sBAAAA,E,kBAAAA,E,cAAAA,E,mBAAAA,Q,KA4JU3N,WAAMiH,KAAK2G,ICjKb6B,GAAgB,CAC3BC,EAAG,SACHC,EAAG,OACHC,EAAG,OCGL,SAASC,GAAT,GAAiE,IAAxC9J,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EAC7Bc,EAAzBjB,cADsD,MAC7C,EAD6C,EAC1Ce,EAAaE,EAAbF,SAGdnE,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQ4R,oBAAoBhL,KAAS,CAACA,IAE1E,OACE,cAAC,GAAD,CACExC,GAAIA,EACJwC,OAAQiL,MAAMrO,EAAKwK,gBAChB8D,KAAK,GACLtJ,KAAI,SAAC2H,EAAG4B,GAAJ,sBAAyBA,MAChClL,QAAS,CAAC,UACVE,KAAMA,EANR,SAQGkC,GACC,qBAAKV,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAkB9E,MAAO,CAAEuO,WAAY,aAAcC,cAAe,UAAnF,SACGb,OAAOc,KAAKX,IAAe/I,KAAI,SAAA2J,GAAY,OAC1C,wBAA0BrL,MAAM,wBAAhC,UACE,uBACEwD,QAAS1D,KAAYuL,EACrBxK,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEf,QAASlB,EAAEZ,OAAOrD,SAC5CsF,KAAK,QACLtF,OAAQ0Q,IACP,IAEFZ,GAAcY,KARLA,YAkBXrQ,WAAMiH,KAAK4I,ICrC1B,SAASS,GAAT,GAAmE,IAAxCvK,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KACrCY,EAA0BE,EAA1BF,SADwD,EAC9BE,EAAhBhB,eAD8C,MACpC,EADoC,EAI1DrD,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQqS,sBAAsBxL,KAAU,CAACA,IAE7E,OACE,cAAC,GAAD,CACEzC,GAAIA,EACJwC,OAAQ,CAAC,SACTC,QAASgL,MAAMrO,EAAK8O,iBACjBR,KAAK,GACLtJ,KAAI,SAAC2H,EAAG4B,GAAJ,uBAA0BA,MACjChL,KAAMA,EANR,SAQGkC,GACC,qBAAKV,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAkB9E,MAAO,CAAEuO,WAAY,aAAcC,cAAe,UAAnF,SACGb,OAAOc,KAAKX,IAAe/I,KAAI,SAAA2J,GAAY,OAC1C,wBAA0BrL,MAAM,wBAAhC,UACE,uBACEwD,QAASzD,KAAasL,EACtBxK,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEd,SAAUnB,EAAEZ,OAAOrD,SAC7CsF,KAAK,QACLtF,OAAQ0Q,IACP,IAEFZ,GAAcY,KARLA,YAkBXrQ,WAAMiH,KAAKqJ,ICtC1B,SAASG,GAAT,GAAkE,IAAxC1K,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EAC9Bc,EAAzB2K,cADuD,MAC9C,EAD8C,EAC3C7K,EAAaE,EAAbF,SAGdnE,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQyS,0BAS5C,OARArS,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAGJpD,qBAAU,kBAAOoD,EAAKgP,OAAO/Q,MAAQ+Q,IAAS,CAAChP,EAAMgP,IAGnD,cAAC,GAAD,CAAMpO,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,oBAAe0L,GAAUzL,KAAMA,EAAvE,SACGkC,GACC,qBAAKV,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE6K,QAAS9M,EAAEZ,OAAOrD,SAC5CgC,MAAO,CAAEV,MAAO,QAChB+D,MAAM,SACNC,KAAK,SACLtF,MAAO+Q,UASN1Q,WAAMiH,KAAKwJ,IChC1B,SAASG,GAAeC,GACtB,OAAOlF,KAAKE,IAAI,KAAOF,KAAKG,IAAI,QAAS+E,IAG3C,SAASC,GAAT,GAAyD,IAAxC/K,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACAc,EAA9C8K,iBAD8C,MAClC,EADkC,IACA9K,EAA/BgL,oBAD+B,MAChB,EADgB,EACblL,EAAaE,EAAbF,SAGnCnE,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQ8S,YAAYJ,GAAeG,MAAgB,CAACA,IAKxF,OAFAzS,qBAAU,WAAYoD,EAAKmP,UAAUlR,MAAQkR,IAAY,CAACnP,EAAMmP,IAG9D,cAAC,GAAD,CAAMvO,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,aAAcC,QAAS,CAAC,UAAWC,MAAK,iBAAY6L,EAAZ,MAA2B5L,KAAMA,EAAzG,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEoF,IAAKnK,EAAKmP,UAAUI,SACpBnF,IAAKpK,EAAKmP,UAAUK,SACpBnF,KAAM6E,GAAeG,GAAgB,GACrClL,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgL,WAAYjN,EAAEZ,OAAOrD,SAC/CqF,MAAK,iBAAY6L,EAAZ,MACL5L,KAAK,QACLtF,MAAOkR,MAGX,qBAAKpK,UAAU,kBAAf,SACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkL,cAAenN,EAAEZ,OAAOrD,SAClDkM,IAAK,EACLC,IAAK,IACL9G,MAAM,YACNC,KAAK,SACLtF,MAAOiR,GAAeG,YASrB/Q,ICxCHmR,GDwCGnR,OAAMiH,KAAK6J,K,SCxCdK,K,gBAAAA,E,WAAAA,Q,KAsCGC,OAzBf,YAA6D,IAA3CvL,EAA0C,EAA1CA,SAAUZ,EAAgC,EAAhCA,KAAMtF,EAA0B,EAA1BA,MAAUuF,EAAgB,2CAGtD6G,EAAO,KACPsF,EAAa1R,EACbsF,IAASkM,GAAWG,MACtBvF,EAAO,GAAK,EAAcA,GAC1BsF,EAfJ,SAAiB1R,GACf,OAAQgM,KAAKC,IAAI,GAAIjM,GAAS,GAAK,EAcpB4R,CAAQF,IAGvB,IAAMG,EAASjS,uBACb,SAACqE,GACC,IAAI6N,GAAY7N,EAAEZ,OAAOrD,MACrBsF,IAASkM,GAAWG,MACtBG,EAlBR,SAAiB9R,GACf,OAAOgM,KAAK+F,MAAM,EAAY,EAAR/R,GAiBLgS,CAAQF,IAGrB5L,EAAS4L,KAEX,CAAC5L,EAAUZ,IAGb,OAAO,iDAAWC,GAAX,IAAkBD,KAAK,QAAQ4G,IApB1B,EAoBoCC,IArBpC,EAqB8CC,KAAMA,EAAMlG,SAAU2L,EAAQ7R,MAAO0R,MCxC1F,SAASO,GAAYjS,GAC1B,OAAO,GAAKgM,KAAK+F,MAAM/F,KAAKkG,IAAIlS,ICElC,SAASmS,GAAT,GAA+D,IAAxC/L,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACKc,EAAzD8K,iBADoD,MACxC,GADwC,IACK9K,EAAxCgM,gBADmC,MACxB,GADwB,IACKhM,EAAxBiM,WADmB,MACb,GADa,EACRnM,EAAaE,EAAbF,SA0CpD,OAvCA5B,EACE3B,GACA,SAAApE,GAEE,IAAM6D,EAAQ7D,EAAQoO,aAChBrK,EAAS/D,EAAQoO,aAEjB2F,EAAM/T,EAAQoO,aACd4F,EAAMhU,EAAQoO,aAEd6F,EAAYjU,EAAQ8S,YAAY,GACtCmB,EAAUtB,UAAUlR,MAAQkR,EAE5B,IAAMuB,EAAelU,EAAQoO,aAkB7B,OAjBA8F,EAAapK,KAAKqK,gBAAgBN,EAAUK,EAAalU,QAAQoU,YAAa,MAG9EL,EAAIjK,KAAKqK,gBAAgB1G,KAAK4G,IAAU,GAANP,EAAYrG,KAAK6G,IAAKP,EAAI/T,QAAQoU,YAAa,MACjFJ,EAAIlK,KAAKqK,gBAAgB1G,KAAK4G,IAAkB,IAAb,EAAMP,GAAarG,KAAK6G,IAAKN,EAAIhU,QAAQoU,YAAa,MAGzFvQ,EAAM4B,QAAQsO,GACdA,EAAItO,QAAQ1B,GAEZF,EAAM4B,QAAQwO,GACdA,EAAUxO,QAAQuO,GAClBA,EAAIvO,QAAQ1B,GAEZiQ,EAAIvO,QAAQyO,GACZA,EAAazO,QAAQwO,GAEd,CACLpQ,QACAE,YAGJ,CAAC4O,EAAWkB,EAAUC,IAItB,cAAC,GAAD,CAAM1P,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAK,cAAiBC,KAAMA,EAAlF,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEoF,IAAI,IACJC,IAAI,IACJjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEmM,KAAMpO,EAAEZ,OAAOrD,SACzCoM,KAAK,OACL/G,MAAK,eAAsB,KAAX,EAAIgN,GAAf,mBAA0C,IAANA,EAApC,SACL/M,KAAK,QACLtF,MAAOqS,MAGX,qBAAKvL,UAAU,kBAAf,SACE,uBACEoF,IAAI,IACJC,IAAI,IACJjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgL,WAAYjN,EAAEZ,OAAOrD,SAC/CoM,KAAK,OACL/G,MAAK,iBAAY6L,EAAZ,MACL5L,KAAK,QACLtF,MAAOkR,MAGX,qBAAKpK,UAAU,kBAAf,SACE,cAAC,GAAD,CACEZ,SAAU,SAAAkM,GAAQ,OAAIlM,EAAS,CAAEkM,cACjC/M,MAAK,oBAAe4M,GAAYG,GAAUU,QAAQ,GAA7C,OACLxN,KAAMkM,GAAW9J,OACjB1H,MAAOoS,WASN/R,WAAMiH,KAAK6K,ICrF1B,SAASY,GAAT,GAA+C,IAAxBpQ,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIzB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQyU,eAExB,cAAC,GAAD,CAAMrQ,GAAIA,EAAIwC,OAAQ,CAAC,SAAUG,KAAMA,IAGjCjF,WAAMiH,KAAKyL,ICP1B,SAASE,GAAT,GAAsE,IAAxC7M,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EAC0Bc,EAArF2B,cAD2D,MAClD,KADkD,IAC0B3B,EAArE8M,YAD2C,MACpC,GADoC,EAChChN,EAA0DE,EAA1DF,SADgC,EAC0BE,EAAhD+M,aADsB,MACd,GADc,IAC0B/M,EAApCmC,eADU,MACA,IADA,IAC0BnC,EAApBgN,iBADN,OACmB,GADnB,EAI7DrR,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQ8U,8BAS5C,OANA1U,qBAAU,WAAYoD,EAAKqR,UAAUpT,MAAQoT,IAAY,CAACrR,EAAMqR,IAChEzU,qBAAU,WAAYoD,EAAKmR,KAAKlT,MAAQkT,IAAO,CAACnR,EAAMmR,IACtDvU,qBAAU,WAAYoD,EAAKoR,MAAMnT,MAAQmT,IAAQ,CAACpR,EAAMoR,IACxDxU,qBAAU,WAAYoD,EAAKgG,OAAO/H,MAAQ+H,IAAS,CAAChG,EAAMgG,IAC1DpJ,qBAAU,WAAYoD,EAAKwG,QAAQvI,MAAQuI,IAAU,CAACxG,EAAMwG,IAG1D,cAAC,GAAD,CACE5F,GAAIA,EACJwC,OAAQ,CAAC,QAAS,YAAa,OAAQ,QAAS,SAAU,WAC1DC,QAAS,CAAC,UACVE,KAAMA,EAJR,SAMGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEqF,IAAI,OACJD,IAAI,IACJhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkN,WAAYnP,EAAEZ,OAAOrD,SAC/CoM,KAAK,IACL/G,MAAK,qBAAgB+N,EAAhB,OACL9N,KAAK,QACLtF,MAAOoT,MAGX,qBAAKtM,UAAU,kBAAf,SACE,uBACEqF,IAAI,IACJD,IAAI,KACJhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgN,MAAOjP,EAAEZ,OAAOrD,SAC1CoM,KAAK,IACL/G,MAAK,gBAAW6N,EAAX,OACL5N,KAAK,QACLtF,MAAOkT,MAGX,qBAAKpM,UAAU,kBAAf,SACE,uBACEqF,IAAI,IACJD,IAAI,KACJhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEiN,OAAQlP,EAAEZ,OAAOrD,SAC3CoM,KAAK,IACL/G,MAAK,iBAAY8N,EAAZ,OACL7N,KAAK,QACLtF,MAAOmT,MAGX,qBAAKrM,UAAU,kBAAf,SACE,uBACEqF,IAAI,IACJD,IAAI,IACJhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE6B,QAAS9D,EAAEZ,OAAOrD,SAC5CoM,KAAK,QACL/G,MAAK,kBAAa0C,EAAb,MACLzC,KAAK,QACLtF,MAAO+H,MAGX,qBAAKjB,UAAU,kBAAf,SACE,uBACEqF,IAAI,IACJD,IAAI,IACJhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqC,SAAUtE,EAAEZ,OAAOrD,SAC7CoM,KAAK,QACL/G,MAAK,mBAAckD,EAAd,MACLjD,KAAK,QACLtF,MAAOuI,WASNlI,WAAMiH,KAAK2L,ICtB1B,SAASK,GAAT,GAA4D,IAAxClN,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACwDc,EAAzGmN,kBADiD,MACpC,GADoC,IACwDnN,EAAvFoN,iBAD+B,MACnB,GADmB,EACdtN,EAAsEE,EAAtEF,SADc,EACwDE,EAA5DqN,mBADI,MACU,GADV,IACwDrN,EAAzCsN,oBADf,MAC8B,GAD9B,IACwDtN,EAArBuB,iBADnC,SAEnDoC,EAAYpJ,iBAA0B,MACtCgT,EAAiBhT,iBAAOiT,OAAOC,kBAC/BC,EAAkBnT,iBAAOiT,OAAOC,kBAGhC9R,EAAQuC,EAAQ3B,GAAI,SAAApE,GACxB,IAAM8J,EAAO9J,EAAQoO,aAGrB,MAAO,CACLrE,KAHW,IAAIT,iBAAiBtJ,EAAS,kBAIzC6D,MAAOiG,EACP/F,OAAQ+F,MAKZ1J,qBAAU,WAAWoD,EAAKO,OAAO+F,KAAKqK,gBAAgB,EAAG3Q,EAAKO,OAAO/D,QAAQoU,YAAa,QAAQ,CAAC5Q,IAEnG,IAAMgS,EAAYnU,uBAAY,WAAO,IAC3B+S,EAAgB5Q,EAAKO,OAAO/D,QAA5BoU,YACRgB,EAAe9S,QAAU8R,EACzB5Q,EAAKO,OAAO+F,KAAK2L,sBAAsBrB,GACvC5Q,EAAKO,OAAO+F,KAAK4L,eAAe,EAAGtB,GACnC5Q,EAAKO,OAAO+F,KAAK6L,wBAAwB,EAAKvB,EAAcY,GAC5DxR,EAAKO,OAAO+F,KAAK6L,wBAAwBR,EAAcf,EAAcY,EAAaC,GAE7E7L,GACH5F,EAAKO,OAAO+F,KAAK6L,wBAAwB,EAAGvB,EAAcY,EAAaC,EAAYC,KAEpF,CAAC1R,EAAMwR,EAAYC,EAAWC,EAAaC,EAAc/L,IAEtDwM,EAAavU,uBAAY,WAAO,IAC5B+S,EAAgB5Q,EAAKO,OAAO/D,QAA5BoU,YACRmB,EAAgBjT,QAAU8R,EAC1B5Q,EAAKO,OAAO+F,KAAK2L,sBAAsBrB,GACvC5Q,EAAKO,OAAO+F,KAAK4L,eAAelS,EAAKO,OAAO+F,KAAKrI,MAAO2S,GAExD,IAAMyB,EAAmBzM,EAErB,EADAqE,KAAKE,IAAI,EAAG4H,EAAgBjT,QAAU8S,EAAe9S,SAAW0S,EAAaC,IAGjFzR,EAAKO,OAAO+F,KAAK6L,wBAAwB,EAAGvB,EAAcc,EAAcW,KACvE,CAACrS,EAAMwR,EAAYC,EAAWC,EAAa9L,IAExC0M,EAAczU,uBAClB,YAAsC,IAA7B0U,EAA4B,EAAlClO,KACe,WAAZkO,EACFP,IACqB,YAAZO,GACTH,MAGJ,CAACA,EAAYJ,IAiCf,OA/BApV,qBAAU,WACRoD,EAAKuG,KAAKiM,KAAKC,UAAYH,IAC1B,CAACtS,EAAMsS,IA2BVvL,GAzBalJ,uBAAY,WACvB,IAAMqK,EAASF,EAAUlJ,QACnBtC,EAAO,OAAG0L,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MAC9BD,GAAW1L,GAzGpB,SAAsBA,EAAmCqJ,EAAwB6M,GAAiC,IACxGlB,EAAgE3L,EAAhE2L,WAAYC,EAAoD5L,EAApD4L,UAAWE,EAAyC9L,EAAzC8L,aAAc/L,EAA2BC,EAA3BD,UAAW8L,EAAgB7L,EAAhB6L,YAChDd,EAAuD8B,EAAvD9B,YAAatK,EAA0CoM,EAA1CpM,KAAMyL,EAAoCW,EAApCX,gBAAiBH,EAAmBc,EAAnBd,eAEtCpS,EAAShD,EAAQ0L,OAAO1I,OACxBD,EAAQ/C,EAAQ0L,OAAO3I,MAGvBoT,EAAc/M,GAAa4L,EAAaC,EAAYC,GAAe,EAAI,EACvEkB,EAAQrT,GAASiS,EAAaC,EAAYC,EAAciB,GAG9DnW,EAAQiM,UAAY,UACpBjM,EAAQkM,SAAS,EAAG,EAAGnJ,EAAOC,GAG9BhD,EAAQmM,UAAY,EACpBnM,EAAQoM,YAAc,UACtBpM,EAAQqM,YACRrM,EAAQsM,OAAO,EAAGtJ,GAClBhD,EAAQwM,OAAOwI,EAAaoB,EAAO,GACnCpW,EAAQwM,QAAQwI,EAAaC,GAAamB,GAAQ,EAAIjB,GAAgBnS,GACtEhD,EAAQwM,QAAQwI,EAAaC,EAAYkB,GAAeC,GAAQ,EAAIjB,GAAgBnS,GACpFhD,EAAQwM,QAAQwI,EAAaC,EAAYkB,EAAcjB,GAAekB,EAAOpT,GAC7EhD,EAAQyM,SACRzM,EAAQuQ,YAGR,IAAIxI,EACF0F,KAAKG,IAAIwG,EAAcgB,EAAgBJ,EAAaC,EAAYkB,GAAe/M,EAAY,EAAI8L,IAC/FkB,EACEhN,GAAamM,EAAkBH,IACjCrN,GAAKiN,EAAaC,EAAYkB,EAAc1I,KAAKG,IAAIwG,EAAcmB,EAAiBL,IAAgBkB,GAEtGpW,EAAQqM,YACRrM,EAAQiM,UAAY,UACpBjM,EAAQsM,OAAOvE,GAAI,EAAI+B,GAAQ9G,GAC/BhD,EAAQqW,IAAItO,GAAI,EAAI+B,GAAQ9G,EAAQ,EAAG,EAAa,EAAVyK,KAAK6G,IAC/CtU,EAAQ8R,OAuENwE,CACEtW,EACA,CACEgV,aACAC,YACAC,cACAC,eACA/L,aAEF,CACEgL,YAAa5Q,EAAKO,OAAO/D,QAAQoU,YACjCtK,KAAMtG,EAAKO,OAAO+F,KAAKrI,MACvB8T,gBAAiBA,EAAgBjT,QACjC8S,eAAgBA,EAAe9S,YAGlC,CAACkB,EAAMwR,EAAYC,EAAWC,EAAaC,EAAc/L,KAK1D,cAAC,GAAD,CAAMhF,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,QAASC,QAAS,CAAC,UAAWE,KAAMA,EAApE,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,wBAAQhF,IAAKiI,EAAWxI,OAAQ,GAAID,MAAO,QAE7C,qBAAKwF,UAAU,kBAAf,SACE,kCACE,uBACE+B,QAASlB,EACTzB,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEyB,WAAYA,KACtCtC,MAAM,UACNC,KAAK,aALT,kBAUF,sBAAKwB,UAAU,kBAAkB9E,MAAO,CAAEV,MAAO,KAAjD,UACE,uBACE6K,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqN,YAAatP,EAAEZ,OAAOrD,SAChDoM,KAAM,IACNpK,MAAO,CAAEV,MAAO,OAChB+D,MAAM,cACNC,KAAK,SACLtF,MAAOuT,IAET,uBACEpH,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEsN,WAAYvP,EAAEZ,OAAOrD,SAC/CoM,KAAM,IACNpK,MAAO,CAAEV,MAAO,OAChB+D,MAAM,aACNC,KAAK,SACLtF,MAAOwT,IAET,uBACEtH,IAAK,EACLC,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEwN,cAAezP,EAAEZ,OAAOrD,SAClDoM,KAAM,IACNpK,MAAO,CAAEV,MAAO,OAChB+D,MAAM,gBACNC,KAAK,SACLtF,MAAO0T,IAET,uBACEvH,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuN,aAAcxP,EAAEZ,OAAOrD,SACjDoM,KAAM,IACNpK,MAAO,CAAEV,MAAO,OAChB+D,MAAM,eACNC,KAAK,SACLtF,MAAOyT,YASNpT,WAAMiH,KAAKgM,IClNpBwB,GAAgB,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,IAAM,IAAM,IAAM,MAEtE,SAASC,GAAmBC,GAC1B,IAAMC,EAAiBjJ,KAAKC,IAAI,EAAG+I,GACnC,OAAOhJ,KAAKkJ,KAAKD,IAAmBA,EAAiB,GAevD,SAASE,GAAT,GAA6D,IAAxC/O,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACuBc,EAAzE4O,iBADkD,MACtC,EADsC,IACuB5O,EAA1DgP,aADmC,MAC3BhF,MAAM0E,GAAcxK,QAAQ+F,KAAK,GADN,EACUnK,EAAaE,EAAbF,SAG9DnE,EAAQuC,EAAQ3B,GAAI,SAAApE,GACxB,IAAM6D,EAAQ7D,EAAQoO,aAChBrK,EAAS/D,EAAQoO,aAEjB0I,EAAUP,GAAc/N,KAAI,SAACoH,EAAWmH,EAAO/G,GACnD,IAAMgH,EAAuB,IAAVD,EACbE,EAAcF,IAAU/G,EAAYjE,OAAS,EAG7CjC,GAFckN,IAAeC,EAETJ,EAAME,GAAS,EACnChQ,EAAOiQ,EAAa,WAAaC,EAAc,YAAc,UAC7DpH,EAAI2G,GAAmBC,GAEvBnQ,EAAStG,EAAQ+P,qBAMvB,OALAzJ,EAAOsJ,UAAUnO,MAAQmO,EACzBtJ,EAAOwD,KAAKrI,MAAQqI,EACpBxD,EAAOS,KAAOA,EACdT,EAAOuJ,EAAEpO,MAAQoO,EAEVvJ,KAKT,OAFCwQ,EAAwBI,OAAOnT,GAAQoT,QAAO,SAACtS,EAAQ4P,GAAT,OAAyB5P,EAAOY,QAAQgP,KAAc5Q,GAE9F,CACLiT,UACAjT,QACAE,aAgBJ,OAXA3D,qBAAU,WACRoD,EAAKsT,QAAQtQ,SAAQ,SAACF,EAAQyQ,GAC5BzQ,EAAOwD,KAAKqK,gBAAgB0C,EAAME,GAAQzQ,EAAOtG,QAAQoU,YAAa,WAEvE,CAAC5Q,EAAMqT,IACVzW,qBAAU,WACRoD,EAAKsT,QAAQtQ,SAAQ,SAAAF,GACnBA,EAAOuJ,EAAEsE,gBAAgBqC,GAAmBC,GAAYnQ,EAAOtG,QAAQoU,YAAa,WAErF,CAAC5Q,EAAMiT,IAGR,cAAC,GAAD,CAAMrS,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,KAAKC,KAAMA,EAAvE,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACG/E,EAAKsT,QAAQtO,KAAI,SAAClC,EAAQyQ,GAAT,OAChB,gCACE,uBACEpJ,IAAK,GACLC,KAAM,GACNjG,SAAU,SAAAjC,GAAC,OACTiC,EAAS,CAAEkP,MAAOO,YAAQP,GAAO,SAACQ,GAA0BA,EAAMN,IAAUrR,EAAEZ,OAAOrD,YAEvFoM,KAAM,GACN/G,MAAK,gBAAW+P,EAAME,GAAjB,OACLhQ,KAAK,QACLtF,MAAOoV,EAAME,MA5ERnH,EA8EUtJ,EAAOsJ,UAAUnO,MA7E9CmO,GAAa,IACT,GAAN,OAAUnC,KAAK6J,MAAM1H,EAAY,KAAjC,KAGI,GAAN,OAAUA,MA6DcmH,GAlE1B,IAAyBnH,SAmFf,qBAAKrH,UAAU,kBAAf,SACE,uBACEoF,IAAK,EACLC,IAAK,GACLC,KAAM,GACNlG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE8O,WAAY/Q,EAAEZ,OAAOrD,SAC/CqF,MAAK,qBAAgB2P,EAAhB,YACL1P,KAAK,QACLtF,MAAOgV,WASN3U,WAAMiH,KAAK6N,IC5G1B,SAASW,GAAT,GAA8C,IAAnBpT,EAAkB,EAAlBA,QACzB,OACE,qBAAIoE,UAAU,cAAd,UACE,yCAEE,qBAAIA,UAAU,kBAAd,UACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,sBAA3B,iCACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,SAA3B,kBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,aAA3B,sBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,cAA3B,uBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,UAA3B,mBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,eAA3B,wBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,mBAA3B,mCAGJ,8CAEE,oBAAIoE,UAAU,kBAAd,SACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,gBAA3B,8BAGJ,yCAEE,qBAAIoE,UAAU,kBAAd,UACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,iBAA3B,2BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,kBAA3B,4BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,oBAA3B,8BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,UAA3B,mBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,gBAA3B,0BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,uBAA3B,iCACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,cAA3B,uBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,SAA3B,kBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,cAA3B,uBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,SAA3B,kBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,iBAA3B,2BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,gBAA3B,yBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,eAA3B,+BAGJ,6CAEE,qBAAIoE,UAAU,kBAAd,UACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,SAA3B,kBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,mBAA3B,6BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,aAA3B,sBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,gBAA3B,0BACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,iBAA3B,iCAGJ,uCAEE,qBAAIoE,UAAU,kBAAd,UACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,YAA3B,sBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,YAA3B,sBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,WAA3B,qBACA,oBAAI5C,QAAS,kBAAM4C,EAAQ,YAA3B,4BAGJ,2CAEE,oBAAIoE,UAAU,kBAAd,SACE,oBAAIhH,QAAS,kBAAM4C,EAAQ,aAA3B,8BAOKrC,WAAMiH,KAAKwO,ICnE1B,SAASC,GAAT,GAAkE,IAAlD3P,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACTc,EAA9CiC,YADuD,MAChD,EADgD,EAC7CnC,EAAoCE,EAApCF,SAD6C,EACTE,EAA1Bd,YADmC,MAC5BkM,GAAWG,IADiB,EAEzDtM,EAAK,gBAAY4M,GAAY5J,GAAMyK,QAAQ,GAAtC,OAGL/Q,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQoO,gBAO5C,OAJAhO,qBAAU,WACRoD,EAAKsG,KAAKqK,gBAAgBrK,EAAMtG,EAAKxD,QAAQoU,YAAa,QACzD,CAAC5Q,EAAMsG,IAGR,cAAC,GAAD,CAAM1F,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,QAASC,QAAS,CAAC,UAAWC,MAAOA,EAAOC,KAAMsG,EAAlF,SACGpE,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQZ,SAAU,SAAAmC,GAAI,OAAInC,EAAS,CAAEmC,UAAShD,MAAOA,EAAOC,KAAMA,EAAMtF,MAAOqI,MAEjF,qBAAKvB,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOsF,EAA/E,UACE,wBAAQtF,MAAOwR,GAAW9J,OAA1B,SAAmC8J,GAAW9J,SAC9C,wBAAQ1H,MAAOwR,GAAWG,IAA1B,SAAgCH,GAAWG,gBAS1CtR,WAAMiH,KAAKyO,ICjC1B,SAASC,GAAT,GAA8C,IAA9B5P,EAA6B,EAA7BA,KAAMzD,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAAmB,EACRc,EAA3B6P,YADmC,SACrB/P,EAAaE,EAAbF,SAGhBnE,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQyS,0BAC5CrS,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAGJpD,qBAAU,WAAWoD,EAAKgP,OAAO2B,gBAAgBuD,EAAO,EAAI,EAAGlU,EAAKxD,QAAQoU,YAAa,QAAQ,CAAC5Q,EAAMkU,IAExG,IAAMC,EAAWtW,uBACf,SAACqE,GACK,WAAYA,GAAKA,EAAEkS,QAGvBjQ,EAAS,CAAE+P,MAAM,MAEnB,CAAC/P,IAEGkQ,EAAYxW,uBAAY,kBAAMsG,EAAS,CAAE+P,MAAM,MAAU,CAAC/P,IAEhE,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAM,OAAOC,KAAMA,EAAtD,SACE,qBAAKwB,UAAU,kBAAf,SACE,yBAAQuP,YAAaH,EAAUI,UAAWF,EAAWG,UAAWL,EAAUM,QAASJ,EAAnF,qBACWH,EAAO,MAAQ,YAOnB5V,WAAMiH,KAAK0O,ICrBXS,OAVf,YAAiF,IAA/D5N,EAA8D,EAA9DA,QAA8D,IAArD6N,gBAAqD,MAA1C,MAA0C,MAAnCC,eAAmC,MAAzB,KAAyB,EAAnBzQ,EAAmB,EAAnBA,SAC3D,OACE,wBAAOY,UAAU,SAAjB,UACE,uBAAO+B,QAASA,EAAS3C,SAAUA,EAAUZ,KAAK,aAClD,sBAAMwB,UAAU,SAAhB,SAA0B6P,IAC1B,sBAAM7P,UAAU,SAAhB,SAA0B4P,QCHhC,SAASE,GAAT,GAAyE,IAAlDxQ,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACpCc,EAA1BhE,aAD8D,MACtD,IADsD,EACjD8D,EAAaE,EAAbF,SAGfnE,EAAQuC,EAAQ3B,GAAI,SAAApE,GACxB,IAAM+D,EAAS/D,EAAQoO,aACjBkK,EAAItY,EAAQoO,aACZmK,EAAIvY,EAAQoO,aAKlB,OAHAkK,EAAE7S,QAAQ1B,GACVwU,EAAE9S,QAAQ1B,GAEH,CACLuU,IACAC,IACA1U,WAAOyB,EACPvB,aAKJ3D,qBAAU,WACM,MAAVyD,GACFL,EAAK8U,EAAExO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,MAC3D5Q,EAAK+U,EAAEzO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,QAE3D5Q,EAAK8U,EAAExO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,MAC3D5Q,EAAK+U,EAAEzO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,SAE5D,CAAC5Q,EAAMK,IAEV,IAAM2U,EAAcnX,uBAAY,kBAAMsG,EAAS,CAAE9D,MAAiB,MAAVA,EAAgB,IAAM,QAAQ,CAAC8D,EAAU9D,IAEjG,OACE,cAAC,GAAD,CAAMO,GAAIA,EAAIwC,OAAQ,CAAC,IAAK,KAAMC,QAAS,CAAC,UAAWC,MAAK,iBAAYjD,GAASkD,KAAMsG,EAAvF,SACGpE,GACC,qBAAKV,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQ+B,QAAmB,MAAVzG,EAAesU,SAAS,IAAIC,QAAQ,IAAIzQ,SAAU6Q,UAQhE1W,ICvDH2W,GAQAC,GD+CG5W,OAAMiH,KAAKsP,ICzDpBM,GAAQ,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,KAwBpE,SAASC,GAAmBC,GACjC,GAAIA,EAAU,GAAKA,EAAU,GAC3B,MAAM,IAAIC,WAAJ,8CAAsDD,IAIzD,SAASE,GAAiBC,EAAgBH,IAZ1C,SAA2BG,GAChC,GAAIA,EAAS,GAAKA,EAAS,GACzB,MAAM,IAAIF,WAAJ,8CAAsDE,IAW9DC,CAAkBD,GAClBJ,GAAmBC,GAGnB,OADW,QACCpL,KAAKC,IAAI,EAAGsL,EAASH,EAAU,IAGtC,SAASK,GAAYL,GAG1B,OAFAD,GAAmBC,GAEZF,GAAME,I,SAvCHJ,O,MACF,U,QADEA,I,KAEH,U,OAFGA,I,QAGA,U,UAHAA,I,UAIE,U,YAJFA,I,MAKF,U,SALEA,Q,cAQAC,O,MACF,G,QADEA,I,KAEH,G,OAFGA,I,QAGA,G,UAHAA,I,MAIF,G,QAJEA,I,UAKE,I,aALFA,Q,eCHNS,GAAW,gBACXC,GAAW,gBAOjB,SAASC,GAAT,GAAkD,IAA9BxR,EAA6B,EAA7BA,KAAMzD,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAAmB,EACdc,EAAzBmR,cADuC,MAC9B,EAD8B,EAC3BrR,EAAaE,EAAbF,SAGdnE,EAAQuC,EAAQ3B,GAAI,SAAApE,GAExB,IAAM+J,EAAO/J,EAAQyS,uBAGrB,MAAO,CACL7C,UAHgB5P,EAAQyS,uBAIxB1I,OACAlG,WAAOyB,EACPvB,YAAQuB,MAGZlF,qBAAU,WAMR,OALAoD,EAAKoM,UAAU4C,OAAO/Q,MAAQ,EAC9B+B,EAAKoM,UAAUrB,QACf/K,EAAKuG,KAAKyI,OAAO/Q,MAAQ,EACzB+B,EAAKuG,KAAKwE,QAEH,WACL/K,EAAKuG,KAAK/F,aACVR,EAAKuG,KAAKjG,OACVN,EAAKoM,UAAU5L,aACfR,EAAKoM,UAAU9L,UAEhB,CAACN,IAEJ,IAAM8V,EAAUjY,uBACd,SAAC2X,EAAgBH,GAAqB,IAC5B7Y,EAAYwD,EAAKoM,UAAjB5P,QACFuZ,EAAgBR,GAAiBC,EAAQH,GAC/CrV,EAAKoM,UAAU4C,OAAO2B,gBAAgBoF,EAAevZ,EAAQoU,YAAa,QAE5E,CAAC5Q,IAEGgW,EAAWnY,uBAAY,WAAYmC,EAAKuG,KAAKyI,OAAO/Q,MAAQ,IAAI,CAAC+B,IACjEiW,EAAWpY,uBAAY,WAAYmC,EAAKuG,KAAKyI,OAAO/Q,MAAQ,IAAI,CAAC+B,IAEvE,OACE,cAAC,GAAD,CAAMY,GAAIA,EAAIyC,QAAS,CAAC,YAAa,QAASC,MAAK,WAAcC,KAAMA,EAAvE,SACE,sBAAKwB,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,WAAWuP,YAAa0B,EAAUE,aAAcD,EAAU1B,UAAW0B,EAApF,UACE,wBAAQlR,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAS,EAAG,IAArE,eAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAS,EAAG,KAArE,eAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAS,EAAG,KAArE,eAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,eAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,gBAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,gBAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,gBAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,IAAjE,gBAGA,wBAAQzQ,UAAW4Q,GAAUQ,aAAc,kBAAML,EAAQN,EAAQ,KAAjE,gBAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAQ,KAAjE,gBAGA,wBAAQzQ,UAAW6Q,GAAUO,aAAc,kBAAML,EAAQN,EAAS,EAAG,IAArE,qBAKJ,qBAAKzQ,UAAU,kBAAf,SACE,uBACEqF,IAAK,EACLD,IAAK,EACLhG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqR,QAAStT,EAAEZ,OAAOrD,SAC5CqF,MAAM,SACNC,KAAK,SACLtF,MAAOuX,WAQJlX,WAAMiH,KAAKsQ,I,SCvHpBO,I,MAAiC,CACrCC,WAAY,UACZC,SAAU,GACV9W,OAAQ,GACR+W,WAAY,EACZC,QAAS,EACTjX,MAAO,KAGT,SAASkX,GAAT,GAAuE,IAAlDpS,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACyBc,EAArFqS,uBAD4D,MAC1C,EAD0C,IACyBrS,EAAhEsS,sBADuC,MACtB,IADsB,IACyBtS,EAA1CuS,aADiB,MACT,CAAC1B,GAAU2B,SADF,EACY1S,EAAaE,EAAbF,SAG1EnE,EAAOuC,EACX3B,GACA,SAAApE,GACE,IADS,EACHsa,EAA+B,GAAKH,EAEpCI,EAA2BD,EAA+BJ,EAE1DzL,EAASzO,EAAQwa,aAAa,EAAGxa,EAAQkQ,WAAaqK,EAA0Bva,EAAQkQ,YACxF6B,EAAUtD,EAAOgM,eAAe,GAN7B,eAOQL,GAPR,IAOT,2BAQE,IARuB,IAAhBM,EAAe,QAChBC,EAAyBL,EAA+B5B,GAAU2B,QAAWK,EAC7EE,EAAwB5a,EAAQkQ,WAAayK,EAC7CpB,EARqB,IAQmBmB,EAAQhC,GAAU2B,QAC1DQ,EAAmBX,EAAkBQ,EAAQhC,GAAU2B,QAEzDS,EAAQ,EACRhR,EAAO,EACFyC,EAAI,EAAGA,EAAIsO,EAAiBtO,IACnC,IAAK,IAAIwO,EAAI,EAAGA,EAAIH,EAAuBG,IAAK,CAC9C,IACMnL,EADqB,IAANrD,EAC4B,KAAhBgN,EAAuBA,EAClDyB,EAASD,EAAItN,KAAK6J,MAAM/K,EAAIqO,GAC5BK,EAAU,EAAIb,EAAMrO,OACpBmP,EAAazN,KAAKG,IAAIqN,EAASF,GAA0B,KAArB/a,EAAQkQ,aAElD6B,EAAQiJ,IAAWvN,KAAK0N,IAAIL,GAAShR,EACrCgR,GAAiB,EAAIrN,KAAK6G,GAAK1E,EAAa5P,EAAQkQ,WACpDpG,EAAO2D,KAAKE,IAAIuN,EAAaH,EAAIH,EAAuB,IAzBrD,8BA8BT,IAAM/V,EAAS7E,EAAQwO,qBAKvB,OAJA3J,EAAO4J,OAASA,EAChB5J,EAAOqJ,MAAO,EACdrJ,EAAOuW,QAAUb,EAEV1V,IAET,CAACqV,EAAiBE,EAAMrO,OAAQoO,IAGlC/Z,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAEJ,IAAM6X,EAAaha,uBACjB,SAAAqZ,GAAI,OAAI/S,EAAS,CAAEyS,MAAOA,EAAMvJ,SAAS6J,GAAQN,EAAM9T,QAAO,SAACgV,GAAD,OAAeA,IAAMZ,KAAQN,EAAMlD,OAAOwD,OACxG,CAACN,EAAOzS,IAGV,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,qBAAgBqT,EAAhB,QAAsCpT,KAAMsG,EAApF,SACGpE,GACC,sBAAKV,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEoF,IAAK,IACLC,IAAK,GACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEwS,gBAAiBzU,EAAEZ,OAAOrD,SACpDqF,MAAM,mBACNC,KAAK,SACLtF,MAAO0Y,IAET,uBACExM,IAAK,EACLC,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuS,iBAAkBxU,EAAEZ,OAAOrD,SACrDqF,MAAM,oBACNC,KAAK,SACLtF,MAAOyY,OAGX,qBAAK3R,UAAU,kBAAf,SACE,sBAAM9E,MAAO,CAAEuO,WAAY,SAAU7E,QAAS,OAAQW,eAAgB,iBAAtE,SACG,CAAC4K,GAAU6C,MAAO7C,GAAU8C,KAAM9C,GAAU2B,QAAS3B,GAAU+C,MAAO/C,GAAUgD,WAAWlT,KAAI,SAAAkS,GAAI,OAClG,wBAEEnZ,QAAS,kBAAM8Z,EAAWX,IAC1BjX,MAAK,2BAAOmW,IAAP,IAAkB+B,MAAOvB,EAAMvJ,SAAS6J,GAAQ,OAAS,SAC9D5T,MAAK,UAAK4R,GAAUgC,GAAf,SAJP,SAMGjC,GAAWC,GAAUgC,KALjBA,eAgBR5Y,IC7GV8Z,GD6GU9Z,OAAMiH,KAAKkR,I,QCtG1B,SAAS4B,GAAmBpN,GAG1B,IAFA,IAAMqN,EAAarN,EAAO1C,OACpBhI,EAAS0K,EAAOgM,eAAe,GAC5BlO,EAAI,EAAGA,EAAIuP,EAAYvP,IAC9BxI,EAAOwI,GAAqB,EAAhBkB,KAAKsO,SAAe,EAGlC,OAAOtN,EAIT,SAASuN,GAAkBvN,GAUzB,IATA,IAAMqN,EAAarN,EAAO1C,OACpBhI,EAAS0K,EAAOgM,eAAe,GACjCwB,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACLC,EAAK,EACAhQ,EAAI,EAAGA,EAAIuP,EAAYvP,IAAK,CACnC,IAAMiQ,EAAwB,EAAhB/O,KAAKsO,SAAe,EAClCE,EAAK,OAAUA,EAAa,SAARO,EACpBN,EAAK,OAAUA,EAAa,SAARM,EACpBL,EAAK,KAAQA,EAAa,QAARK,EAClBJ,EAAK,MAASA,EAAa,SAARI,EACnBH,EAAK,IAAOA,EAAa,SAARG,EACjBF,GAAM,MAASA,EAAa,QAARE,EACpBzY,EAAOwI,GAAK0P,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAKC,EAAa,MAARC,EAC/CzY,EAAOwI,IAAM,IACbgQ,EAAa,QAARC,EAGP,OAAO/N,EAIT,SAASgO,GAAmBhO,GAI1B,IAHA,IAAMqN,EAAarN,EAAO1C,OACpBhI,EAAS0K,EAAOgM,eAAe,GACjCiC,EAAU,EACLnQ,EAAI,EAAGA,EAAIuP,EAAYvP,IAAK,CACnC,IAAMiQ,EAAwB,EAAhB/O,KAAKsO,SAAe,EAClChY,EAAOwI,IAAMmQ,EAAU,IAAOF,GAAS,KACvCE,EAAU3Y,EAAOwI,GACjBxI,EAAOwI,IAAM,IAGf,OAAOkC,EAGT,SAASkO,GAAT,GAAmE,IAAlD9U,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAC3BY,EAAqCE,EAArCF,SADwD,EACnBE,EAA3Bd,YAD8C,MACvC6U,GAAUgB,MAD6B,EAI1DpZ,EAAOuC,EACX3B,GACA,SAAApE,GAAY,IAAD,EAEH8b,EAAa,EAAI9b,EAAQkQ,WAOzBzB,GAASoO,GANC,oBACbjB,GAAUkB,MAAQL,IADL,eAEbb,GAAUmB,KAAOf,IAFJ,eAGbJ,GAAUgB,MAAQf,IAHL,GAKa9U,IACJ/G,EAAQwa,aAAa,EAAGsB,EAAY9b,EAAQkQ,aAC/D1M,EAAOxD,EAAQwO,qBAIrB,OAHAhL,EAAKiL,OAASA,EACdjL,EAAK0K,MAAO,EAEL1K,IAET,CAACuD,IAOH,OALA3G,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAGF,cAAC,GAAD,CAAMY,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,iBAAYC,GAAQA,KAAMsG,EAAlE,SACGpE,GACC,qBAAKV,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOsF,EAA/E,UACE,wBAAQtF,MAAOma,GAAUgB,MAAzB,SAAiChB,GAAUA,GAAUgB,SACrD,wBAAQnb,MAAOma,GAAUmB,KAAzB,SAAgCnB,GAAUA,GAAUmB,QACpD,wBAAQtb,MAAOma,GAAUkB,MAAzB,SAAiClB,GAAUA,GAAUkB,mB,SAhG9DlB,O,MACK,S,QADLA,I,KAEI,Q,OAFJA,I,MAGK,S,SAHLA,Q,KAyGU9Z,WAAMiH,KAAK4T,ICzG1B,SAASK,GAAT,GAA2C,IAAxB5Y,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIrB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,yBAE9C,cAAC,GAAD,CAAMoE,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,IAGxEjF,WAAMiH,KAAKiU,ICP1B,SAASC,GAAT,GAA0C,IAAxB7Y,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIpB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,oBAAqB,CAAEgO,eAAgB,OAErF,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,WAAWC,KAAMA,IAGpFjF,WAAMiH,KAAKkU,ICP1B,SAASC,GAAT,GAAwE,IAAlDrV,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACJc,EAAzD8H,cAD6D,MACpD,EADoD,IACJ9H,EAA7C+H,iBADiD,MACrC,IADqC,EAChCjI,EAA4BE,EAA5BF,SADgC,EACJE,EAAlBd,YADsB,MACf,OADe,EAE/DoW,EAAmBvN,EAAYnC,KAAKC,IAAI,EAAGiC,EAAS,MAGpDnM,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQod,sBAW5C,OAVAhd,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAGJpD,qBAAU,WAAYoD,EAAKmM,OAAOlO,MAAZ,OAAoBkO,QAApB,IAAoBA,IAAU,IAAI,CAACnM,EAAMmM,IAC/DvP,qBAAU,WAAYoD,EAAKoM,UAAUnO,MAAf,OAAuBmO,QAAvB,IAAuBA,IAAa,MAAM,CAACpM,EAAMoM,IACvExP,qBAAU,WAAYoD,EAAKuD,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACvD,EAAMuD,IAGxD,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,SAAU,aACnBC,QAAS,CAAC,UACVC,MAAK,UAAKqW,EAAiB5I,QAAQ,GAA9B,eAAuCxN,GAC5CA,KAAMsG,EALR,SAOGpE,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEoF,IAAK,IACLC,KAAM,IACNjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgI,QAASjK,EAAEZ,OAAOrD,SAC5CoM,KAAM,EACNpK,MAAO,CAAEV,MAAO,QAChB+D,MAAK,kBAAa6I,EAAb,UACL5I,KAAK,QACLtF,MAAOkO,MAGX,qBAAKpH,UAAU,kBAAf,SACE,uBACEoF,IAAK,IACLC,IAAK,EACLjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEiI,WAAYlK,EAAEZ,OAAOrD,SAC/CqF,MAAM,YACNC,KAAK,SACLtF,MAAOmO,MAGX,qBAAKrH,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOsF,EAA/E,UACE,wBAAQtF,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASCK,WAAMiH,KAAKmU,IC1DpBG,GAAsC,CAC1ClQ,QAAS,eACTmQ,UAAW,SACXva,MAAO,GAEHwa,GAAiC,2BAClCF,IADkC,IAErCG,cAAe,QAEXC,GAAqC,2BACtCJ,IADsC,IAEzCK,UAAW,oBACXF,cAAe,UAGjB,SAASG,GAAT,GAAmD,IAAnChO,EAAkC,EAAlCA,OAAQqJ,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,QAAkB,EACrBK,GAAYL,GAAS+E,MAAM,IADN,mBACzCC,EADyC,KACnCC,EADmC,KAE1ClO,EAAYmJ,GAAiBC,EAAQH,GACrCsE,EAAmBvN,EAAYnC,KAAKC,IAAI,EAAGiC,EAAS,MAE1D,OACE,iCACGkO,EACD,uBAAOpa,MAAO8Z,GAAd,SAA6BvE,IAC5B8E,GAAc,uBAAOra,MAAOga,GAAd,SAAiCK,IAHlD,OAKE,sCACIlO,EAAU2E,QAAQ,GADtB,MAEc,IAAX5E,GAAgB,gDAAWwN,EAAiB5I,QAAQ,GAApC,SAFnB,UAQSzS,WAAMiH,KAAK4U,ICpC1B,SAASI,GAAT,GAA4E,IAAlDlW,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAA6B,EACAc,EAAjE8H,cADiE,MACxD,EADwD,IACA9H,EAArDmR,cADqD,MAC5C,EAD4C,EACzCrR,EAAyCE,EAAzCF,SADyC,EACAE,EAA/BgR,eAD+B,MACrB,EADqB,IACAhR,EAAlBd,YADkB,MACX,OADW,EAEnE6I,EAAYmJ,GAAiBC,EAAQH,GAGrCrV,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQod,sBAW5C,OAVAhd,qBAAU,WAER,OADAoD,EAAK+K,QACE,kBAAM/K,EAAKM,UACjB,CAACN,IAGJpD,qBAAU,WAAYoD,EAAKmM,OAAOlO,MAAZ,OAAoBkO,QAApB,IAAoBA,IAAU,IAAI,CAACnM,EAAMmM,IAC/DvP,qBAAU,WAAYoD,EAAKoM,UAAUnO,MAAQmO,IAAY,CAACpM,EAAMoM,IAChExP,qBAAU,WAAYoD,EAAKuD,KAAL,OAAYA,QAAZ,IAAYA,IAAQ,SAAS,CAACvD,EAAMuD,IAGxD,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,UACTC,QAAS,CAAC,UACVC,MAAO,cAAC,GAAD,CAAM6I,OAAQA,EAAQqJ,OAAQA,EAAQH,QAASA,IACtD9R,KAAMsG,EALR,SAOGpE,GACC,sBAAKV,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEoF,IAAK,IACLC,KAAM,IACNjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgI,QAASjK,EAAEZ,OAAOrD,SAC5CoM,KAAM,EACNpK,MAAO,CAAEV,MAAO,QAChB+D,MAAK,kBAAa6I,EAAb,UACL5I,KAAK,QACLtF,MAAOkO,MAGX,sBAAKpH,UAAU,kBAAf,UACE,wBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkR,SAAUnT,EAAEZ,OAAOrD,SAC7CgC,MAAO,CAAEV,MAAO,OAChB+D,MAAM,OACNrF,MAAOoX,EAJT,SAMGhH,MAAM,IACJC,KAAK,GACLtJ,KAAI,SAAC2H,EAAG0I,GAAJ,OACH,wBAAsBpX,MAAOoX,EAA7B,SACGK,GAAYL,IADFA,QAKnB,wBACElR,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqR,QAAStT,EAAEZ,OAAOrD,SAC5CgC,MAAO,CAAEV,MAAO,OAChB+D,MAAM,SACNrF,MAAOuX,EAJT,SAMGnH,MAAM,IACJC,KAAK,GACLtJ,KAAI,SAAC2H,EAAG6I,GAAJ,OACH,wBAAqBvX,MAAOuX,EAA5B,SACGA,GADUA,WAMrB,qBAAKzQ,UAAU,kBAAf,SACE,yBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOrD,SACzCgC,MAAO,CAAEV,MAAO,QAChB+D,MAAM,OACNrF,MAAOsF,EAJT,UAME,wBAAQtF,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASCK,WAAMiH,KAAKgV,ICnF1B,SAASC,GAAT,GAA0E,IAAlDnW,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAI6E,EAAuC,EAAvCA,SAAgBoE,EAAuB,EAA7BtG,KAClCY,EAA2BE,EAA3BF,SAD+D,EACpCE,EAAjB9D,cADqD,MAC5C,IAD4C,EAIjEP,EAAQuC,EAAQ3B,GAAI,SAAApE,GACxB,IAAM6D,EAAQ7D,EAAQoO,aAChBkK,EAAItY,EAAQoO,aACZmK,EAAIvY,EAAQoO,aAKlB,OAHAvK,EAAM4B,QAAQ6S,GACdzU,EAAM4B,QAAQ8S,GAEP,CACLD,IACAC,IACA1U,QACAE,YAAQuB,MAKZlF,qBAAU,WACO,MAAX2D,GACFP,EAAK8U,EAAExO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,MAC3D5Q,EAAK+U,EAAEzO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,QAE3D5Q,EAAK8U,EAAExO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,MAC3D5Q,EAAK+U,EAAEzO,KAAKqK,gBAAgB,EAAG3Q,EAAK8U,EAAEtY,QAAQoU,YAAa,SAE5D,CAAC5Q,EAAMO,IAEV,IAAMka,EAAe5c,uBAAY,kBAAMsG,EAAS,CAAE5D,OAAmB,MAAXA,EAAiB,IAAM,QAAQ,CAAC4D,EAAU5D,IAEpG,OACE,cAAC,GAAD,CAAMK,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,IAAK,KAAMC,MAAK,kBAAa/C,GAAUgD,KAAMsG,EAAxF,SACGpE,GACC,qBAAKV,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQ+B,QAAoB,MAAXvG,EAAgBoU,SAAS,IAAIC,QAAQ,IAAIzQ,SAAUsW,UAQjEnc,ICzDH8G,GDyDG9G,OAAMiH,KAAKiV,IEnD1B,SAASE,GAAT,GAA6D,IAAxCrW,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACfc,EAAnCqB,YADkD,MAC3CN,GAAKuV,SADsC,EAC5BxW,EAAaE,EAAbF,SAK9B,OAFA5B,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,sBAAuB,CAAEuJ,iBAAkB,CAAEL,YAAW,CAACA,IAG5G,cAAC,GAAD,CAAM9E,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,EAA9E,SACGkC,GACC,qBAAKV,UAAU,oBAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuB,KAAMxD,EAAEZ,OAAOrD,SAAUqF,MAAM,OAAOrF,MAAOyH,EAA/E,UACE,wBAAQzH,MAAOmH,GAAKwV,SAApB,SAA+BxV,GAAKwV,WACpC,wBAAQ3c,MAAOmH,GAAKuV,SAApB,SAA+BvV,GAAKuV,oBCdlD,SAASE,GAAT,GAAwC,IAAxBja,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIlB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,qBAE9C,cAAC,GAAD,CAAMoE,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,OAAOC,KAAMA,ICJlF,SAASuX,GAAT,GAAgE,IAAxCzW,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EAC/Bc,EAAtB0W,WADqD,MAC/C,EAD+C,EAC5C5W,EAAaE,EAAbF,SACXb,EAAK,kBAAc2G,KAAKkG,IAAU,IAAN4K,GAAWhK,QAAQ,GAA1C,aAAiDgK,EAAM,EAAI,QAAUA,EAAM,EAAI,OAAS,IAG7F/a,EAAOuC,EAAQ3B,GAAI,SAAApE,GAAO,OAAIA,EAAQwe,wBAK5C,OAFApe,qBAAU,WAAYoD,EAAK+a,IAAI9c,MAAQ8c,IAAM,CAAC/a,EAAM+a,IAGlD,cAAC,GAAD,CAAMna,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,OAAQC,QAAS,CAAC,UAAWC,MAAOA,EAAOC,KAAMA,EAAjF,SACGkC,GACC,qBAAKV,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEoF,IAAI,IACJC,IAAI,KACJjG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE4W,KAAM7Y,EAAEZ,OAAOrD,SACzCoM,KAAK,OACL/G,MAAOA,EACPC,KAAK,QACLtF,MAAO8c,W,SH3BT3V,K,qBAAAA,E,sBAAAA,Q,KGoCG9G,IC/BT2c,GAAa,CACjB1b,MAAO,IAGT,SAAS2b,GAAT,GAA+D,IAAxC7W,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAAmB,EACoBc,EAAxE8W,gBADoD,MACzC,EADyC,IACoB9W,EAA1D+W,gBADsC,OAC1B,EAD0B,EACvBjX,EAA2CE,EAA3CF,SADuB,EACoBE,EAAjCgX,iBADa,MACD,EADC,IACoBhX,EAAlBiX,iBADF,MACc,EADd,EAkB5D,OAdA/Y,EACE3B,GACA,SAAApE,GAAO,OACL,IAAIsJ,iBAAiBtJ,EAAS,wBAAyB,CACrDuJ,iBAAkB,CAChBqV,WACAD,WACAG,YACAD,iBAGN,CAACD,EAAUD,EAAUG,EAAWD,IAIhC,cAAC,GAAD,CAAMza,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,cAAcC,KAAMA,EAAhF,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEiX,UAAWlZ,EAAEZ,OAAOrD,SAC9CgC,MAAOgb,GACP3X,MAAK,YACLC,KAAK,SACLtF,MAAOmd,IAET,0CACA,uBACEjX,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEmX,WAAYpZ,EAAEZ,OAAOrD,SAC/CgC,MAAOgb,GACP3X,MAAK,aACLC,KAAK,SACLtF,MAAOqd,OAGX,sBAAKvW,UAAU,kBAAf,UACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgX,UAAWjZ,EAAEZ,OAAOrD,SAC9CgC,MAAOgb,GACP3X,MAAK,YACLC,KAAK,SACLtF,MAAOkd,IAET,0CACA,uBACEhX,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkX,WAAYnZ,EAAEZ,OAAOrD,SAC/CgC,MAAOgb,GACP3X,MAAK,aACLC,KAAK,SACLtF,MAAOod,YC9CrB,SAASE,GAAT,GAA8D,IAAD,EAAvClX,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAI6E,EAA6B,EAA7BA,SAAUlC,EAAmB,EAAnBA,KAChCY,EAAyBE,EAAzBF,SAAUqX,EAAenX,EAAfmX,WADyC,EAE7Bnf,mBAAQ,UAACgI,EAAKoX,eAAN,QAXxB,6OAS6C,mBAEpDA,EAFoD,KAE3CC,EAF2C,OAGXrf,mBAASof,GAHE,mBAGpDE,EAHoD,KAGlCC,EAHkC,KAMrDpf,EAAU4B,qBAAWnC,GACrB+D,EAAOuC,EAAQ3B,GAAI,kBAAMpE,EAAQqf,sBAEjCC,EAAQrf,mBAAQ,WACpB,IAAMqf,EAAQ,IAAIrP,aAAajQ,EAAQkQ,YAEvC,OAAO,IAAIqP,SAAS,QAASJ,EAAtB,CAAwCG,KAC9C,CAACtf,EAAQkQ,WAAYiP,IAGxB/e,qBAAU,WAAYoD,EAAK8b,MAAQA,IAAQ,CAAC9b,EAAM8b,IAClDlf,qBAAU,WAAYoD,EAAKwb,WAAaA,IAAa,CAACxb,EAAMwb,IAE5D,IAAMQ,EAAcne,uBAAY,WAC9B,IAEE,IAAIke,SAAS,QAASN,EAAtB,CAA+B,IAAIhP,aAAajQ,EAAQkQ,aAExDkP,EAAoBH,GACpBtX,EAAS,CAAEsX,YACX,MAAOvZ,GACPC,QAAQC,MAAMF,MAEf,CAAC1F,EAAQkQ,WAAY+O,EAAStX,IAEjC,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWE,KAAMA,EAA5D,SACGkC,GACC,sBAAKV,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAkB9E,MAAO,CAAEgc,SAAU,QAApD,UACE,0BACE9X,SAAU,SAAAjC,GAAC,OAAIwZ,EAAWxZ,EAAEZ,OAAOrD,QACnCie,KAAM,EACNjc,MAAO,CAAEV,MAAO,QAChB+D,MAAM,iBACNrF,MAAOwd,IAET,wBAAQ1d,QAASie,EAAjB,qBAEF,qBAAKjX,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqX,WAAYtZ,EAAEZ,OAAOrD,SAAUqF,MAAM,aAAarF,MAAOud,EAA3F,UACE,wBAAQvd,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,0BC5Dd,SAASke,GAAT,GAA2C,IAAxBvb,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAIrB,OAFAhB,EAAQ3B,GAAI,SAAApE,GAAO,OAAI,IAAIsJ,iBAAiBtJ,EAAS,qBAAsB,CAAEgO,eAAgB,OAEtF,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,IAGrFjF,ICyCT8d,GAAY,CAChB5W,KAAMA,GACNoE,SAAUA,GACVW,QAASA,GACTE,kBAAmBA,GACnByB,aAAcA,GACdiC,cAAeA,GACfS,gBAAiBA,GACjBG,eAAgBA,GAChBK,MAAOA,GACPgB,YAAaA,GACbY,YAAaA,GACbE,mBAAoBA,GACpBK,SAAUA,GACV6B,UAAWA,GACXY,KAAMA,GACNC,KAAMA,GACNY,YAAaA,GACbgB,SAAUA,GACVY,UAAWA,GACX0C,MAAOA,GACPK,QAASA,GACTC,OAAQA,GACRC,WAAYA,GACZa,eAAgBA,GAChBC,aAAcA,GACdE,UNnDapc,IAAMiH,KAAKmV,IMoDxBG,KLpEavc,IAAMiH,KAAKsV,IKqExBC,aJ7Caxc,IAAMiH,KAAKuV,II8CxBI,YHXa5c,IAAMiH,KAAK2V,IGYxBK,WFTajd,IAAMiH,KAAKgW,IEUxBY,QDxEa7d,IAAMiH,KAAK4W,KC2E1B,SAASE,GAAiBC,GACxB,OAAKA,EAAOjb,OAILuM,OAAO2O,OAAO,GAAID,EAAQ,CAC/Brc,MAAO,CACLgJ,OAAO,IAAD,OAAMqT,EAAOjb,OAAO2C,QAAQ,OAL7BsY,E,SAUIE,G,mFAAf,WAAmCC,EAA2BC,GAA9D,eAAA5f,EAAA,sDACQ6f,EAAuBF,EAAgB3Z,OAAO8Z,KAAQjJ,QAAgC,SAACkJ,EAAS9Z,GAGpG,OAFA8Z,EAAQ9Z,EAAK1B,SAAU,EACvBwb,EAAQ9Z,EAAKzB,SAAU,EAChBub,IACN,IALL,WAMSjP,OAAOc,KAAKiO,GAAsBpU,OAN3C,uBAOIqF,OAAOc,KAAKgO,GAAY1Z,SAAQ,SAAA8Z,UACvBH,EAAqBG,MARlC,SAUU,IAAI/f,SAAQ,SAAAggB,GAAO,OAAIC,WAAWD,EAAS,MAVrD,kE,sBAcO,IAAMvY,GAAY,GAEzB,SAASyY,GAAW3Y,GAClB,OAAO2F,KAAK6J,MAAMxP,EAAWE,IAAaA,GAG5C,SAAS0Y,KAAQ,IAAD,EACqEha,IAA3EO,EADM,EACNA,SAAUC,EADJ,EACIA,uBAAwBC,EAD5B,EAC4BA,YAAawZ,EADzC,EACyCA,aAAcjD,EADvD,EACuDA,UAC/DtW,EAAczF,IACLue,EAAepa,IAAtB5B,MAEF0c,E9C9BD,WAAyB,IACtBvc,EAAYyB,IAAZzB,QAER,OAAOhD,uBAAY,SAACuD,GAAD,OAAmCY,EAAaZ,EAAYP,KAAU,CAACA,I8C2BhEwc,GACpBC,E9CxBD,WAA4B,IACzBzc,EAAYyB,IAAZzB,QAER,OAAOhD,uBAAY,SAACkF,GAAD,OAAgBV,EAAgBU,EAAMlC,KAAU,CAACA,I8CqB/C0c,GACfC,E9ClBD,WAA4B,IACzB3c,EAAYyB,IAAZzB,QAER,OAAOhD,uBAAY,SAACif,GAAD,OAAoB3c,EAAYU,EAAQic,MAAU,CAACjc,I8CejD4c,GAEfC,EAAS7f,sBAAW,uCACxB,WAAO8f,GAAP,SAAA7gB,EAAA,6DACE6gB,EAAkBR,aAAajD,GAG/BvW,EACEiQ,aAAQ,SAACC,GACPA,EAAM/Q,OAAO8a,KAAQ5a,SAAQ,SAAAhD,GAC3BA,EAAKqE,KAAKF,SAAWT,EAAuB1D,EAAKY,WAPzD,SAcQ4b,GAAoB/Y,EAAUiZ,GAdtC,OAegBjZ,EAASX,OAAO8Z,KACxB5Z,SAAQ,SAAAD,GAAI,OAAIqa,EAAkBra,MAhB1C,2CADwB,sDAoBxB,IAGI8a,EAAYhgB,uBAChB,SAAAqc,GACEiD,EAAajD,KAEf,CAACiD,IAGGW,EAAYjgB,uBAChB,SAACye,GACC3Y,GAAY,SAACF,GAAD,OAAwBsa,YAAQ1B,GAAiBC,GAAS7Y,MACtE2Z,EAAkBd,KAEpB,CAACc,EAAmBzZ,IAEhBqa,EAAmBngB,uBACvB,SAACogB,GACCA,EAAiBnb,OAAO8Z,KAAQ5Z,SAAQ,SAAAD,GAAI,OAAIua,EAAava,MAC7Dkb,EAAiBnb,OAAO8a,KAAQ5a,SAAQ,SAAAhD,GAAI,OAAIwd,EAAaxd,EAAKY,OAElE+C,GAAY,SAACF,GAAD,OAAwBya,YAAeD,EAAkBxa,QAEvE,CAAC6Z,EAAcE,EAAc7Z,IAEzBwa,EAAetgB,uBACnB,SAACugB,EAAeC,GACdf,EAAac,GACbza,GAAY,SAACF,GAAD,OAAwBya,YAAe,CAACE,GAAU3a,MAC9DE,GAAY,SAACF,GAAD,OAAwBsa,YAAQ1B,GAAiBgC,GAAgB5a,MAC7E2Z,EAAkBiB,KAEpB,CAACf,EAAcF,EAAmBzZ,IAG9B2a,EAAiBzgB,uBACrB,SAAC8G,EAA8C4Z,GAC7C5a,EACEiQ,aAAQ,SAACC,GACP,IAAM7T,EAAO6T,EAAM/Q,OAAO8a,KAAQ/Z,MAAK,SAAA2a,GAAO,OAAIA,EAAQ5d,KAAO2d,EAAY3d,MACxEZ,IAGLA,EAAKsE,SAAW,CACdC,EAAG0Y,GAAWsB,EAAYja,SAASC,GACnCE,EAAGwY,GAAWsB,EAAYja,SAASG,WAK3C,CAACd,IAGGhD,EAAU9C,uBACd,SAAC0F,GACC,IAAM3C,EAAE,UAAM2C,EAAN,YAAcW,eAMhBlE,EAAO,CACXY,KACAyD,KAAM,CAAEF,SAPOT,EAAuB9C,IAQtC2C,OACAe,SARe,CACfC,EAAG0Y,IAAYrZ,EAAY1E,UAAUE,KAAO8a,EAAU3V,GAAK2V,EAAUuE,MACrEha,EAAGwY,IAAYrZ,EAAY1E,UAAUC,IAAM+a,EAAUzV,GAAKyV,EAAUuE,QAQtE9a,GAAY,SAACF,GAAD,4BAA4BA,GAA5B,CAAsCzD,OAClD4D,EAAYlE,SAEd,CAACkE,EAAaF,EAAwBC,EAAauW,IAG/CwE,EAAc7gB,uBAAY,WAC9B+F,EAAYlE,SACX,CAACkE,IAEE+a,EAAoB9gB,uBACxB,SAAC8G,GACCA,EAAMC,iBACNhB,EAAY/D,QAAQ,CAAEN,MAAO,EAAGC,OAAQ,EAAGL,IAAKwF,EAAME,QAASxF,MAAO,EAAGC,OAAQ,EAAGF,KAAMuF,EAAMG,UAChGlB,EAAYjE,KAAK,cAAC,GAAD,CAAiBgB,QAASA,OAE7C,CAACA,EAASiD,IAGZ,OACE,mCACE,eAAC,IAAD,CACEgb,gBAAiB,CAAC1E,EAAU3V,EAAG2V,EAAUzV,GACzCoa,YAAa3E,EAAUuE,KACvBhb,SAAUA,EACV2Y,UAAWA,GACX0B,UAAWA,EACXK,aAAcA,EACdH,iBAAkBA,EAClBN,OAAQA,EACRG,UAAWA,EACXS,eAAgBA,EAChBI,YAAaA,EACbC,kBAAmBA,EACnBG,2BAA2B,EAC3B7B,YAAU,EACV8B,SAAU,CAACva,GAAWA,IAEtBvE,MAAO,CAAE+e,OAAQ,GAjBnB,UAmBE,cAAC,IAAD,CAAYC,IAAKza,KACjB,cAAC,IAAD,SAMOlG,WAAMiH,KAAK2X,ICxPpBgC,GAAsC,CAC1C5I,SAAU,GACV9W,OAAQ,OACR2f,OAAQ,OACR5f,MAAO,QAGH6f,GAAsC,CAC1CzV,QAAS,OACTrF,SAAU,WACVjF,MAAO,OACPF,KAAM,GACN+a,UAAW,iBACXmF,gBAAiB,gBAcNC,GAAoB,iBAAO,CACtC1e,GAAIsD,cACJT,SAAU,GACVyW,UAAW,CACT3V,EAAG,EACHE,EAAG,EACHga,KAAM,KAgFKc,OA5Ef,WAAoB,IAAD,EACqDrc,IAA9DO,EADS,EACTA,SAAU7C,EADD,EACCA,GAAI+C,EADL,EACKA,YAAa6b,EADlB,EACkBA,MAAOrC,EADzB,EACyBA,aAAcjD,EADvC,EACuCA,UADvC,EAEa7d,oBAAS,GAFtB,mBAEVojB,EAFU,KAEDC,EAFC,KAGXC,EAAeljB,mBAAQ,kBAxBP,SAACgjB,GAAD,MAA4C,CAClEjgB,OAAQ,OACRgX,QAAS,GACTlS,SAAU,WACVjF,MAAO,EACPF,IAAK,EACL+a,UAAWuF,EAAU,gBAAkB,mBACvCG,WAAY,sBACZrgB,MAAO,KAgB4BsgB,CAAgBJ,KAAU,CAACA,IAG9D7iB,qBAAU,WACR,IAAMkjB,EAAUC,KAAKrjB,OAAOsjB,SAASC,KAAKjc,OAAO,IACjD,IAAK,IAAD,EACkCkc,KAAKC,MAAML,GAAvCrc,EADN,EACMA,SAAU7C,EADhB,EACgBA,GAAIsZ,EADpB,EACoBA,UACtBvW,EAAYF,GACZ+b,EAAK,OAAC5e,QAAD,IAACA,IAAMsD,eACZiZ,EAAajD,GACb,MAAOhY,GACPC,QAAQC,MAAMF,MAEf,CAACyB,EAAa6b,EAAOrC,IAGxBvgB,qBAAU,WACRF,OAAOsjB,SAASC,KAAOG,KACrBF,KAAKG,UAAU,CACb5c,SAAUA,EAASuB,KAAI,SAAAwZ,GAAO,kCAAUA,GAAV,IAAmB8B,UAAMxe,OACvDlB,KACAsZ,iBAGH,CAACzW,EAAU7C,EAAIsZ,IAElB,IAAM/V,EAAWtG,uBACf,SAACqE,GACC,IAAK,IAAD,EACkCge,KAAKC,MAAMje,EAAEZ,OAAOrD,OAAhDwF,EADN,EACMA,SAAU7C,EADhB,EACgBA,GAAIsZ,EADpB,EACoBA,UACtBvW,EAAYF,GACZ+b,EAAK,OAAC5e,QAAD,IAACA,IAAMsD,eACZiZ,EAAajD,GACb,MAAOhY,GACPC,QAAQC,MAAMF,MAGlB,CAACyB,EAAa6b,EAAOrC,IAGjBoD,EAAe1iB,uBAAY,WAC/B,IAAM2iB,EAAiBlB,KACvB3b,EAAY6c,EAAe/c,UAC3B+b,EAAMgB,EAAe5f,IACrBuc,EAAaqD,EAAetG,aAC3B,CAACvW,EAAa6b,EAAOrC,IAClBsD,EAAsB5iB,uBAAY,kBAAM6hB,GAAW,SAAAD,GAAO,OAAKA,OAAU,IAE/E,OACE,sBAAKxf,MAAO0f,EAAZ,UACE,0BACExb,SAAUA,EACVlE,MAAOif,GACPjhB,MAAOiiB,KAAKG,UACV,CACE5c,SAAUA,EAASuB,KAAI,SAAAwZ,GAAO,kCAAUA,GAAV,IAAmB8B,UAAMxe,OACvDlB,KACAsZ,aAEF,KACA,KAGJ,sBAAKja,MAAOmf,GAAZ,UACE,wBAAQrhB,QAASwiB,EAActgB,MAAO,CAAEygB,YAAa,IAArD,mBAGA,wBAAQ3iB,QAAS0iB,EAAjB,SAAuChB,EAAU,OAAS,gBCnEnDkB,OA7Cf,WACE,IAAMH,EAAiB/jB,kBAAQ6iB,GAAmB,IADrC,EAEOjjB,mBAA6BmkB,EAAe5f,IAFnD,mBAENA,EAFM,KAEF4e,EAFE,OAGmBnjB,mBAAmCmkB,EAAe/c,UAHrE,mBAGNA,EAHM,KAGIE,EAHJ,OAIqBtH,mBAAoCmkB,EAAetG,WAJxE,mBAINA,EAJM,KAIKiD,EAJL,KAmBP2C,EAAU,CAAErc,WAAU7C,KAAI8C,uBAdD7F,uBAC7B,SAAC+C,GAAD,OAAgB,SAACyD,GACfV,EACEiQ,aAAQ,SAACC,GACP,IAAM7T,EAAO6T,EAAM/Q,OAAO8a,KAAQ/Z,MAAK,SAAA2a,GAAO,OAAIA,EAAQ5d,KAAOA,KAC5DZ,GAGL4N,OAAOc,KAAKrK,GAAMrB,SAAQ,SAAA4d,GAAQ,OAAK5gB,EAAKqE,KAAKuc,GAAYvc,EAAKuc,aAIxE,CAACjd,IAEqDA,cAAa6b,QAAOrC,eAAcjD,aAE1F,OACE,cAACjX,EAAejF,SAAhB,CAAyBC,MAAO6hB,EAAhC,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,EAAD,UACE,sBACE7f,MAAO,CACLuO,WAAY,UACZ7E,QAAS,OACTnK,OAAQ,SAJZ,UAOE,cAAC,GAAD,GAAWsgB,EAAQlf,IACnB,cAAC,GAAD,kBC/BDigB,GAZS,SAACC,GACnBA,GAAeA,aAAuB/E,UACxC,6BAAqBgF,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.cccce2cf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"2647c93661fd31d0c3d5.worklet.js\";","module.exports = __webpack_public_path__ + \"a0235f5e912865b33aba.worklet.js\";","module.exports = __webpack_public_path__ + \"a0986bdee6ebf67ad863.worklet.js\";","module.exports = __webpack_public_path__ + \"b486e618e29c0ba3e23f.worklet.js\";","module.exports = __webpack_public_path__ + \"b28d04036ea7e233c10d.worklet.js\";","module.exports = __webpack_public_path__ + \"33e09377500b25fe57d5.worklet.js\";","module.exports = __webpack_public_path__ + \"02fab5fec625866308db.worklet.js\";","module.exports = __webpack_public_path__ + \"d5dbf86340fca9aa51a1.worklet.js\";","module.exports = __webpack_public_path__ + \"fd3cf5a6a173d7df4717.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport EnvelopeWorkletProcessor from \"worklet-loader!worklets/envelope-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await Promise.all([\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(EnvelopeWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu} {...props}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode, Parameters } from \"worklets/envelope-processor.types\";\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.Linear, onChange, sustainOn = true } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      const envelope = new AudioWorkletNode(context, \"envelope-processor\", {\n        processorOptions: { sustainOn, mode },\n      });\n\n      return {\n        attack: envelope.parameters.get(Parameters.AttackTime),\n        decay: envelope.parameters.get(Parameters.DecayTime),\n        gain: envelope,\n        gate: envelope,\n        input: undefined,\n        output: undefined,\n        release: envelope.parameters.get(Parameters.ReleaseTime),\n        sustain: envelope.parameters.get(Parameters.SustainLevel),\n      };\n    },\n    [mode, sustainOn]\n  );\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"and-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>Play</button>\n          <button onClick={stop}>Stop</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input checked={loop} onChange={() => onChange({ loop: !loop })} title=\"Loop\" type=\"checkbox\" />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface EnvelopeNode extends Required<ComplexAudioNode<GainNode, GainNode>> {\n  gate: AudioWorkletNode;\n}\n\ninterface ADSREnvelope {\n  attackTime: number;\n  decayTime: number;\n  sustainLevel: number;\n  sustainOn: boolean;\n  releaseTime: number;\n}\n\ninterface ADSREnvelopeDrawMetadata {\n  currentTime: number;\n  gain: number;\n  keyOffEventTime: number;\n  keyOnEventTime: number;\n}\n\nfunction drawEnvelope(context: CanvasRenderingContext2D, envelope: ADSREnvelope, meta: ADSREnvelopeDrawMetadata) {\n  const { attackTime, decayTime, sustainLevel, sustainOn, releaseTime } = envelope;\n  const { currentTime, gain, keyOffEventTime, keyOnEventTime } = meta;\n\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  // Draw Sustain as quarter of the whole width\n  const sustainTime = sustainOn ? (attackTime + decayTime + releaseTime) / 9 : 0;\n  const scale = width / (attackTime + decayTime + releaseTime + sustainTime);\n\n  // Background\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  // Envelope shape\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(0, height);\n  context.lineTo(attackTime * scale, 0);\n  context.lineTo((attackTime + decayTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime) * scale, (1 - sustainLevel) * height);\n  context.lineTo((attackTime + decayTime + sustainTime + releaseTime) * scale, height);\n  context.stroke();\n  context.closePath();\n\n  // Current gain\n  let x =\n    Math.min(currentTime - keyOnEventTime, attackTime + decayTime + sustainTime + (sustainOn ? 0 : releaseTime)) *\n    scale;\n  if (sustainOn && keyOffEventTime > keyOnEventTime) {\n    x = (attackTime + decayTime + sustainTime + Math.min(currentTime - keyOffEventTime, releaseTime)) * scale;\n  }\n  context.beginPath();\n  context.fillStyle = \"#ffff00\";\n  context.moveTo(x, (1 - gain) * height);\n  context.arc(x, (1 - gain) * height, 3, 0, Math.PI * 2);\n  context.fill();\n}\n\nfunction Envelope({ data, id, selected, type }: NodeProps) {\n  const { attackTime = 0.2, decayTime = 0.1, onChange, releaseTime = 0.6, sustainLevel = 0.7, sustainOn = true } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const keyOnEventTime = useRef(Number.MAX_SAFE_INTEGER);\n  const keyOffEventTime = useRef(Number.MAX_SAFE_INTEGER);\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const gain = context.createGain();\n    const gate = new AudioWorkletNode(context, \"gate-processor\");\n\n    return {\n      gate,\n      input: gain,\n      output: gain,\n    };\n  }) as unknown) as EnvelopeNode;\n\n  // AudioParam\n  useEffect(() => void node.output.gain.setTargetAtTime(0, node.output.context.currentTime, 0.015), [node]);\n\n  const triggerOn = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOnEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(0, currentTime);\n    node.output.gain.linearRampToValueAtTime(1.0, currentTime + attackTime);\n    node.output.gain.linearRampToValueAtTime(sustainLevel, currentTime + attackTime + decayTime);\n\n    if (!sustainOn) {\n      node.output.gain.linearRampToValueAtTime(0, currentTime + attackTime + decayTime + releaseTime);\n    }\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  const triggerOff = useCallback(() => {\n    const { currentTime } = node.output.context;\n    keyOffEventTime.current = currentTime;\n    node.output.gain.cancelScheduledValues(currentTime);\n    node.output.gain.setValueAtTime(node.output.gain.value, currentTime);\n\n    const releaseTimeUsed = !sustainOn\n      ? Math.max(0, keyOffEventTime.current - keyOnEventTime.current - (attackTime + decayTime))\n      : 0;\n\n    node.output.gain.linearRampToValueAtTime(0, currentTime + releaseTime - releaseTimeUsed);\n  }, [node, attackTime, decayTime, releaseTime, sustainOn]);\n\n  const gateTrigger = useCallback(\n    ({ data: message }: MessageEvent) => {\n      if (message === \"gateOn\") {\n        triggerOn();\n      } else if (message === \"gateOff\") {\n        triggerOff();\n      }\n    },\n    [triggerOff, triggerOn]\n  );\n  useEffect(() => {\n    node.gate.port.onmessage = gateTrigger;\n  }, [node, gateTrigger]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawEnvelope(\n      context,\n      {\n        attackTime,\n        decayTime,\n        releaseTime,\n        sustainLevel,\n        sustainOn,\n      },\n      {\n        currentTime: node.output.context.currentTime,\n        gain: node.output.gain.value,\n        keyOffEventTime: keyOffEventTime.current,\n        keyOnEventTime: keyOnEventTime.current,\n      }\n    );\n  }, [node, attackTime, decayTime, releaseTime, sustainLevel, sustainOn]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gate\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={e => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 276 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"25%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"25%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Envelope);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport produce from \"immer\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\n\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n\n  return `${frequency}`;\n}\n\ninterface EqualizerNode extends ComplexAudioNode<GainNode, GainNode> {\n  filters: BiquadFilterNode[];\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = Array(BANDS_OCTAVES.length).fill(0), onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const output = context.createGain();\n\n    const filters = BANDS_OCTAVES.map((frequency, index, frequencies) => {\n      const isLowShelf = index === 0;\n      const isHighShelf = index === frequencies.length - 1;\n      const isBandPass = !isLowShelf && !isHighShelf;\n\n      const gain = isBandPass ? gains[index] : 0;\n      const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n      const Q = octaveBandwidthToQ(bandwidth);\n\n      const filter = context.createBiquadFilter();\n      filter.frequency.value = frequency;\n      filter.gain.value = gain;\n      filter.type = type;\n      filter.Q.value = Q;\n\n      return filter;\n    });\n\n    (filters as AudioNode[]).concat(output).reduce((source, destination) => source.connect(destination), input);\n\n    return {\n      filters,\n      input,\n      output,\n    };\n  }) as unknown) as EqualizerNode;\n\n  // AudioParam;\n  useEffect(() => {\n    node.filters.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [node, gains]);\n  useEffect(() => {\n    node.filters.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [node, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {node.filters.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      <li>\n        Sources\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"AudioBufferSource\")}>Audio Buffer Source</li>\n          <li onClick={() => addNode(\"Gate\")}>Gate</li>\n          <li onClick={() => addNode(\"Keyboard\")}>Keyboard</li>\n          <li onClick={() => addNode(\"Metronome\")}>Metronome</li>\n          <li onClick={() => addNode(\"Noise\")}>Noise</li>\n          <li onClick={() => addNode(\"Oscillator\")}>Oscillator</li>\n          <li onClick={() => addNode(\"OscillatorNote\")}>Oscillator Note</li>\n        </ul>\n      </li>\n      <li>\n        Destinations\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Destination\")}>Destination</li>\n        </ul>\n      </li>\n      <li>\n        Effects\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"BiquadFilter\")}>Biquad Filter</li>\n          <li onClick={() => addNode(\"ChannelMerger\")}>Channel Merger</li>\n          <li onClick={() => addNode(\"ChannelSplitter\")}>Channel Splitter</li>\n          <li onClick={() => addNode(\"Delay\")}>Delay</li>\n          <li onClick={() => addNode(\"DelayEffect\")}>Delay Effect</li>\n          <li onClick={() => addNode(\"DynamicsCompressor\")}>Dynamics Compressor</li>\n          <li onClick={() => addNode(\"Equalizer\")}>Equalizer</li>\n          <li onClick={() => addNode(\"Gain\")}>Gain</li>\n          <li onClick={() => addNode(\"Rectifier\")}>Rectifier</li>\n          <li onClick={() => addNode(\"Sign\")}>Sign</li>\n          <li onClick={() => addNode(\"StereoPanner\")}>Stereo Panner</li>\n          <li onClick={() => addNode(\"Transformer\")}>Transformer</li>\n          <li onClick={() => addNode(\"WaveShaper\")}>Wave Shaper</li>\n        </ul>\n      </li>\n      <li>\n        Controllers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"ADSR\")}>ADSR</li>\n          <li onClick={() => addNode(\"ConstantSource\")}>Constant Source</li>\n          <li onClick={() => addNode(\"Envelope\")}>Envelope</li>\n          <li onClick={() => addNode(\"InputSwitch\")}>Input Switch</li>\n          <li onClick={() => addNode(\"OutputSwitch\")}>Output Switch</li>\n        </ul>\n      </li>\n      <li>\n        Logic\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"AndGate\")}>AND Gate</li>\n          <li onClick={() => addNode(\"NotGate\")}>NOT Gate</li>\n          <li onClick={() => addNode(\"OrGate\")}>OR Gate</li>\n          <li onClick={() => addNode(\"XorGate\")}>XOR Gate</li>\n        </ul>\n      </li>\n      <li>\n        Analysers\n        <ul className=\"contextMenu sub\">\n          <li onClick={() => addNode(\"Analyser\")}>Analyser</li>\n        </ul>\n      </li>\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2)} dB`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface InputSwitchNode extends ComplexAudioNode<undefined, GainNode> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const output = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    A.connect(output);\n    B.connect(output);\n\n    return {\n      A,\n      B,\n      input: undefined,\n      output,\n    };\n  }) as unknown) as InputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (input === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, input]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n              1\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n              2\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n              3\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n              4\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n              5\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n              6\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n              7\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n              8\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n              9\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n              10\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n              11\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n              12\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n              13\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n              14\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n              15\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n              16\n            </button>\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum NoiseType {\n  Brown = \"brown\" as any,\n  Pink = \"pink\" as any,\n  White = \"white\" as any,\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateWhiteNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  for (let i = 0; i < bufferSize; i++) {\n    output[i] = Math.random() * 2 - 1;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generatePinkNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let b0 = 0;\n  let b1 = 0;\n  let b2 = 0;\n  let b3 = 0;\n  let b4 = 0;\n  let b5 = 0;\n  let b6 = 0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    b0 = 0.99886 * b0 + white * 0.0555179;\n    b1 = 0.99332 * b1 + white * 0.0750759;\n    b2 = 0.969 * b2 + white * 0.153852;\n    b3 = 0.8665 * b3 + white * 0.3104856;\n    b4 = 0.55 * b4 + white * 0.5329522;\n    b5 = -0.7616 * b5 - white * 0.016898;\n    output[i] = b0 + b1 + b2 + b3 + b4 + b5 + b6 + white * 0.5362;\n    output[i] *= 0.11; // (roughly) compensate for gain\n    b6 = white * 0.115926;\n  }\n\n  return buffer;\n}\n\n// See: https://noisehack.com/generate-noise-web-audio-api/\nfunction generateBrownNoise(buffer: AudioBuffer) {\n  const bufferSize = buffer.length;\n  const output = buffer.getChannelData(0);\n  let lastOut = 0.0;\n  for (let i = 0; i < bufferSize; i++) {\n    const white = Math.random() * 2 - 1;\n    output[i] = (lastOut + 0.02 * white) / 1.02;\n    lastOut = output[i];\n    output[i] *= 3.5; // (roughly) compensate for gain\n  }\n\n  return buffer;\n}\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      // Will create buffer with 5 seconds of noise\n      const bufferSize = 5 * context.sampleRate;\n      const generators = {\n        [NoiseType.Brown]: generateBrownNoise,\n        [NoiseType.Pink]: generatePinkNoise,\n        [NoiseType.White]: generateWhiteNoise,\n      };\n      const generator = generators[type as keyof typeof generators];\n      const buffer = generator(context.createBuffer(1, bufferSize, context.sampleRate));\n      const node = context.createBufferSource();\n      node.buffer = buffer;\n      node.loop = true;\n\n      return node;\n    },\n    [type]\n  );\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType[NoiseType.White]}</option>\n              <option value={NoiseType.Pink}>{NoiseType[NoiseType.Pink]}</option>\n              <option value={NoiseType.Brown}>{NoiseType[NoiseType.Brown]}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"not-gate-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"or-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detune: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detune, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      &nbsp;\n      <small>\n        ({frequency.toFixed(2)} Hz\n        {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n      </small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface OutputSwitchNode extends ComplexAudioNode<GainNode, undefined> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    input.connect(A);\n    input.connect(B);\n\n    return {\n      A,\n      B,\n      input,\n      output: undefined,\n    };\n  }) as unknown) as OutputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (output === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, output]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"rectifier-processor\", { processorOptions: { mode } }), [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Sign({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"sign-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context =>\n      new AudioWorkletNode(context, \"transformer-processor\", {\n        processorOptions: {\n          inputMin,\n          inputMax,\n          outputMin,\n          outputMax,\n        },\n      }),\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"xor-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Envelope from \"components/nodes/Envelope\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport XorGate from \"components/nodes/XorGate\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  AudioBufferSource: AudioBufferSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Envelope: Envelope,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Rectifier: Rectifier,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  XorGate: XorGate,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}