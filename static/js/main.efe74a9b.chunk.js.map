{"version":3,"sources":["worklets/adsr-processor.worklet.ts","worklets/and-gate-processor.worklet.ts","worklets/comparator-processor.worklet.ts","worklets/gate-processor.worklet.ts","worklets/meter-processor.worklet.ts","worklets/noise-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/quantizer-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/sample-and-hold-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContextContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","hooks/nodes/useAudioWorkletNode.tsx","worklets/adsr-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","hooks/nodes/useAnalyserNode.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","hooks/nodes/useBiquadFilterNode.tsx","components/nodes/BiquadFilter.tsx","hooks/nodes/useChannelMergerNode.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","hooks/nodes/useChannelSplitterNode.tsx","components/nodes/ChannelSplitter.tsx","hooks/nodes/useWaveShaperNode.tsx","components/nodes/Clipper.tsx","components/nodes/Comparator.tsx","hooks/nodes/useConstantSourceNode.tsx","components/nodes/ConstantSource.tsx","hooks/nodes/useDelayNode.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","hooks/nodes/useGainNode.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","hooks/nodes/useDestinationNode.tsx","components/nodes/Destination.tsx","hooks/nodes/useDynamicsCompressorNode.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Equalizer.tsx","components/FlowContextMenu.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/Note.tsx","components/nodes/Keyboard.tsx","components/nodes/Meter.tsx","utils/scale.ts","components/nodes/Metronome.tsx","worklets/noise-processor.types.ts","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","hooks/nodes/useOscillatorNode.tsx","components/nodes/Oscillator.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","components/nodes/Quantizer.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","worklets/sample-and-hold-processor.types.ts","components/nodes/SampleAndHold.tsx","components/nodes/Sign.tsx","hooks/nodes/useStereoPannerNode.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","components/nodes/WaveShaper.tsx","components/nodes/XorGate.tsx","components/nodes/XYPad.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContextContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","AudioContext","useEffect","awaitAudioWorkletProcessors","a","audioWorklet","Promise","all","addModule","ADSRWorkletProcessor","AndGateWorkletProcessor","ComparatorWorkletProcessor","GateWorkletProcessor","MeterWorkletProcessor","NoiseWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","QuantizerWorkletProcessor","RectifierWorkletProcessor","SampleAndHoldWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","AudioWorkletNode","port","postMessage","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","props","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","memo","useAudioWorkletNode","Mode","Parameters","Stage","name","options","ADSR","selected","attackTime","decayTime","mode","Linear","releaseTime","sustainLevel","sustainOn","workletNode","processorOptions","AttackTime","parameters","get","DecayTime","ReleaseTime","SustainLevel","Exponential","Logarithmic","checked","min","step","max","useAnimationFrame","callback","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","useAnalyserNode","fftSizeExp","createAnalyser","fftSize","Math","pow","Analyser","nodeType","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","items","item","kind","getAsFile","onDragOver","onDrop","useBiquadFilterNode","detune","frequency","gain","Q","createBiquadFilter","filtersUsingGain","filtersUsingQ","BiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","includes","canUseQ","disabled","useChannelMergerNode","createChannelMerger","channelCounts","ChannelMerger","Array","fill","channel","alignItems","flexDirection","Object","keys","channelCount","useChannelSplitterNode","createChannelSplitter","ChannelSplitter","numberOfOutputs","useWaveShaperNode","curve","oversample","createWaveShaper","WaveShaper","Comparator","useConstantSourceNode","offset","createConstantSource","ConstantSource","useDelayNode","delayTime","maxDelayTime","createDelay","clampDelayTime","Delay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","useGainNode","setTargetAtTime","currentTime","float32toDb","abs","DelayEffect","feedback","mix","inputNode","outputNode","dryNode","cos","PI","wetNode","delayNode","feedbackNode","toFixed","useDestinationNode","destination","Destination","useDynamicsCompressorNode","attack","knee","ratio","release","threshold","createDynamicsCompressor","DynamicsCompressor","BANDS_OCTAVES","FILTER_BANDS","FILTER_GAINS","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filterNodes","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","label","FlowContextMenu","subitem","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","inputANode","inputBNode","toggleInput","A","B","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","modifierStyles","textAlign","octaveStyles","verticalAlign","accidentalStyles","transform","Note","detailed","split","accidental","frequencyDetuned","keysOptions","Keyboard","gateNode","frequencyNode","setNote","noteFrequency","playNote","stopNote","gate","onMouseLeave","keyIndex","keyTwelfth","keyOctave","keyClassName","onMouseEnter","DPI_RATIO","window","devicePixelRatio","drawMeter","levels","setTransform","font","textBaseline","save","clearRect","restore","MAX_LEVEL","significant","rulerHeight","rulerWidth","levelText","groupY","lineX","WIDTH","textY","fillText","groupX","level","levelIndex","t","decibels","hue","lightness","Meter","levelsRef","channels","setChannels","canvasWidth","handleMessage","payload","onmessage","slice","BUCKETS","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","Noise","White","Pink","Brown","NotGate","OrGate","useOscillatorNode","createOscillator","Oscillator","OscillatorNote","OutputSwitch","outputANode","outputBNode","toggleOutput","Rectifier","HalfWave","FullWave","SampleAndHold","HoldTime","Sign","useStereoPannerNode","pan","createStereoPanner","StereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","Function","updateCurve","flexWrap","rows","XorGate","XYPad","setLineDash","drawAxes","xNode","yNode","setXY","gateOn","gateOff","onMouseMove","rect","getXY","cursor","nodeTypes","Clipper","Quantizer","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","tryingToConnect","setTryingToConnect","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnectStart","onConnectStop","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","handleType","defaultPosition","defaultZoom","onlyRenderVisibleElements","selectNodesOnDrag","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wHAAAA,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,mBCA3CD,EAAOC,QAAU,IAA0B,mC,gMCG9BC,EAAsBC,wBAAgC,M,iQCkFpDC,MA7Df,YAAqC,IAApBC,EAAmB,EAAnBA,SACf,EAA0BC,oBAAS,GAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAEMC,EAAUC,mBAAQ,WACtB,IACE,OAAO,IAAIC,IACX,aACD,IAEHC,qBAAU,WACR,IAAMC,EAA2B,uCAAG,WAAOJ,GAAP,SAAAK,EAAA,yDAC7BL,EAAQM,aADqB,iEAK5BC,QAAQC,IAAI,CAChBR,EAAQM,aAAaG,UAAUC,KAC/BV,EAAQM,aAAaG,UAAUE,KAC/BX,EAAQM,aAAaG,UAAUG,KAC/BZ,EAAQM,aAAaG,UAAUI,KAC/Bb,EAAQM,aAAaG,UAAUK,KAC/Bd,EAAQM,aAAaG,UAAUM,KAC/Bf,EAAQM,aAAaG,UAAUO,KAC/BhB,EAAQM,aAAaG,UAAUQ,KAC/BjB,EAAQM,aAAaG,UAAUS,KAC/BlB,EAAQM,aAAaG,UAAUU,KAC/BnB,EAAQM,aAAaG,UAAUW,KAC/BpB,EAAQM,aAAaG,UAAUY,KAC/BrB,EAAQM,aAAaG,UAAUa,KAC/BtB,EAAQM,aAAaG,UAAUc,OAnBC,OAqBlCxB,GAAS,GArByB,2CAAH,sDAwB7BC,GACFI,EAA4BJ,KAE7B,CAACA,IAEJ,IAAMwB,EAASC,uBAAY,WACF,eAAZ,OAAPzB,QAAO,IAAPA,OAAA,EAAAA,EAAS0B,QACX1B,EAAQwB,WAET,CAACxB,IAEJ,OAAKA,EAIAF,EAMH,qBAAK6B,QAASH,EAAd,SACE,cAAC/B,EAAoBmC,SAArB,CAA8BC,MAAO7B,EAArC,SAA+CJ,MAL1C,KALA,kG,OC7DEkC,EAAqBpC,wBAAsC,MAEjE,SAASqC,IACd,OAAOC,qBAAWF,G,YCsCLG,MAzCf,YAA2C,IAApBrC,EAAmB,EAAnBA,SACrB,EAAoCsC,IAAMrC,SAAS,MAAnD,mBAAOsC,EAAP,KAAmBC,EAAnB,KACA,EAA0CF,IAAMrC,WAAhD,mBAAOwC,EAAP,KAAsBC,EAAtB,KACMC,EAAmBC,mBACzB,EAA+BC,YAAUF,EAAiBG,QAASL,EAAe,CAAEM,UAAW,iBAAvFC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAEV7C,EAAUC,mBACd,iBAAO,CACL6C,QAAS,WACP,OAAgC,MAA5BP,EAAiBG,QACZ,CAAEK,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,EAAGC,MAAO,EAAGC,OAAQ,GAG5Db,EAAiBG,QAAQW,yBAElCC,KAAM,WACJlB,EAAc,OAEhBmB,KAAM,SAACC,GACLpB,EAAcoB,IAEhBC,QAAS,SAACC,GACRnB,EAAiBG,QAAU,CACzBW,sBAAuB,kBAAMK,KAGjCpB,sBAEF,IAGF,OACE,eAACR,EAAmBF,SAApB,CAA6BC,MAAO7B,EAApC,UACGJ,EACD,6CAAK+D,IAAK,SAAAC,GAAI,OAAIA,GAAQtB,EAAiBsB,IAAOC,MAAOjB,EAAOkB,QAAYjB,EAAWiB,QAAvF,aACG3B,S,sBCpCF,SAAS4B,EAAYH,GACK,IAAD,YAKvB,IALHI,GAAmBJ,IACrB,QAAC,EAAAA,EAAKK,aAAN,mBAAqBC,YAArB,iBACA,QAAC,EAAAN,EAAKO,cAAN,mBAAsBD,YAAtB,iBACA,UAAAN,EAAKK,aAAL,SAAYG,aACZ,UAAAR,EAAKO,cAAL,SAAaC,eAEb,QAAC,GAAD,EAACR,GAAaM,YAAd,iBACAN,EAAKQ,aAEDR,aAAgBS,KAClBT,EAAKU,KAAKC,YAAY,SA6BbC,OAxBf,YAAqC,IAApB5E,EAAmB,EAAnBA,SACT6E,EAAQjC,iBAAiC,IACzCxC,EAA2BC,mBAC/B,iBAAO,CACLyE,QAAS,SAACC,EAAIf,GACZa,EAAM/B,QAAQiC,GAAMf,GAEtBgB,QAAS,SAAAD,GAAE,OAAIF,EAAM/B,QAAQiC,IAC7BF,MAAOA,EAAM/B,QACbmC,WAAY,SAAAF,GACVZ,EAAYU,EAAM/B,QAAQiC,WACnBF,EAAM/B,QAAQiC,OAGzB,IAGF,OACE,8BACE,cAACG,GAAYlD,SAAb,CAAsBC,MAAO7B,EAA7B,SAAuCJ,OCtC7C,SAASmF,GAAgBC,GAAyB,IAAD,IAC/C,QAAO,oBAAEA,EAAOC,MAAM,kBAAf,aAAE,EAA0B,UAA5B,QAAkC,GAU3C,SAASC,GACPC,EACAP,GAEA,IAAKO,EAAWC,SAAWD,EAAWE,SAAWF,EAAWG,eAAiBH,EAAWI,aACtF,MAAM,IAAIC,MAAM,sBAGlB,IAAMC,EAAsBN,EAAWI,aAAaG,WAAW,SACzDC,EAAsBR,EAAWG,aAAaI,WAAW,UAC3DN,EAASR,EAAQO,EAAWC,QAC5BC,EAAST,EAAQO,EAAWE,QAEhC,GAAIrB,GAAmBoB,IAAWO,EAAqB,CACrD,IAAKP,EAAOjB,OACV,MAAM,IAAIqB,MAAM,sBAGlBJ,EAASA,EAAOjB,OAGlB,GAAIH,GAAmBqB,IAAWI,EAAqB,CACrD,IAAKJ,EAAOpB,MACV,MAAM,IAAIuB,MAAM,sBAGlBH,EAASA,EAAOpB,MAGlB,IAAKmB,IAAWC,EACd,MAAM,IAAIG,MAAM,sBAGlB,MAAO,CACLI,WAAYH,EAAsBV,GAAgBI,EAAWI,mBAAgBM,EAC7EC,YAAaf,GAAgBI,EAAWG,cACxCF,OAAQO,EACJP,EAEAA,EAAOD,EAAWG,cACtBD,OAAQI,EACJJ,EAEAA,EAAOF,EAAWI,eAInB,SAASQ,GAAaZ,EAA+BP,GAC1D,IACE,MAAoDM,GAAkBC,EAAYP,GAA1EgB,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,YAAaV,EAAjC,EAAiCA,OAAQC,EAAzC,EAAyCA,OACvB,MAAdO,EAEFR,EAAOY,QAAQX,EAAQS,EAAaF,GAGpCR,EAAOY,QAAQX,EAAQS,GAEzB,MAAOG,GACPC,QAAQC,MAAMF,IAIX,SAASG,GAAgBjB,EAA+BP,GAC7D,IACE,MAAoDM,GAAkBC,EAAYP,GAA1EgB,EAAR,EAAQA,WAAYE,EAApB,EAAoBA,YAAaV,EAAjC,EAAiCA,OAAQC,EAAzC,EAAyCA,OACvB,MAAdO,EAEFR,EAAOhB,WAAWiB,EAAQS,EAAaF,GAGvCR,EAAOhB,WAAWiB,EAAQS,GAE5B,MAAOG,GACPC,QAAQC,MAAMF,IC7DX,SAASjC,GAAmBJ,GACjC,OAAOA,GAAQ,UAAWA,GAAQ,WAAYA,EAGzC,IAAMkB,GAAcpF,wBAA+B,MAEnD,SAAS2G,KACd,OAAOrE,qBAAW8C,IASb,SAASwB,GACd3B,EACA4B,GAEC,IADDC,EACA,uDAD+B,GAEzBxG,EAAUgC,qBAAWvC,GAC3B,EAAyC4G,KAAjC3B,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,QAASC,EAA1B,EAA0BA,WACpB4B,EAAQC,aAAc,SAAAC,GAAK,OAAIA,EAAMF,SAGrC7C,EAAO3D,mBAAQ,kBAAMsG,EAAYvG,KAAUwG,GAgBjD,OAdArG,qBAAU,WACRuE,EAAQC,EAAIf,GAGZ,IAAMgD,EAAiBH,EAAMI,QAAO,SAAAC,GAAI,OAAIA,EAAK1B,SAAWT,GAAMmC,EAAKzB,SAAWV,KAGlF,OAFAiC,EAAeG,SAAQ,SAAAD,GAAI,OAAIf,GAAae,EAAMlC,MAE3C,WACLgC,EAAeG,SAAQ,SAAAD,GAAI,OAAIV,GAAgBU,EAAMlC,MACrDC,EAAWF,MAGZ,CAACD,EAASE,EAAShB,EAAMe,EAAIE,IAEzBjB,E,aCnEIoD,GAAiBtH,wBAA4B,MAEnD,SAASuH,KACd,OAAOjF,qBAAWgF,I,2DCUpB,SAASE,GAAT,GAAgF,IAAhEtH,EAA+D,EAA/DA,SAAU+E,EAAqD,EAArDA,GAAIwC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,KAASC,EAAgB,mBAC7E,EAA0DN,KAAlDO,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,uBAAwBC,EAA1C,EAA0CA,YACpCC,EAAc5F,IACd6B,EAAO4D,EAASI,MAAK,SAAAhE,GAAI,OAAIA,EAAKe,KAAOA,KACzCkD,EAAc5H,mBAClB,iBAAO,CACL6H,WAAW,IAAD,OAAMnD,EAAGoD,QAAQ,OAE7B,CAACpD,IAGGqD,EAAYvG,uBAAY,WAC5B,IAAKmC,EACH,MAAM,IAAI4B,MAAM,kDAGlB,IAAMb,EAAE,UAAM2C,EAAN,YAAcW,eAChBC,EAAWT,EAAuB9C,GAClCwD,EAAU,CACdxD,KACAyD,KAAK,2BAAMxE,EAAKwE,MAAZ,IAAkBF,aACtBZ,KAAM1D,EAAK0D,KACXe,SAAU,CACRC,EAAG1E,EAAKyE,SAASC,EAAIC,GACrBC,EAAG5E,EAAKyE,SAASG,EAAID,KAGzBb,GAAY,SAACF,GAAD,4BAA4BA,GAA5B,CAAsCW,OAClDR,EAAYrE,SACX,CAACqE,EAAaF,EAAwB7D,EAAM8D,EAAaJ,IAEtD3F,EAAUF,uBAAY,WAC1BkG,EAAYrE,SACX,CAACqE,IAEEc,EAAgBhH,uBACpB,SAACiH,GACCA,EAAMC,iBACNhB,EAAYlE,QAAQ,CAAEN,MAAO,EAAGC,OAAQ,EAAGL,IAAK2F,EAAME,QAAS3F,MAAO,EAAGC,OAAQ,EAAGF,KAAM0F,EAAMG,UAChGlB,EAAYpE,KACV,oBAAIuF,UAAU,cAAd,SACE,oBAAInH,QAASqG,EAAb,wBAIN,CAACA,EAAWL,IAGd,OACE,8CAAKmB,UAAU,aAAazB,MAAO1C,EAAIhD,QAASA,EAAS8G,cAAeA,GAAmBlB,GAA3F,cACE,qBAAKuB,UAAU,oBAAf,gBAAoCzB,QAApC,IAAoCA,IAASC,IAC7C,sBAAKwB,UAAU,kBAAf,UACG3B,GACC,qBAAK2B,UAAU,oBAAf,SACG3B,EAAO4B,KAAI,SAAA9E,GAAK,OACf,sBAAiB6E,UAAU,kBAA3B,UACE,cAAC,IAAD,CAAQnE,GAAIV,EAAOoE,SAAUW,IAASC,KAAMpF,MAAOgE,EAAaP,KAAK,WACpErD,IAFOA,QAOfmD,GACC,qBAAK0B,UAAU,qBAAf,SACG1B,EAAQ2B,KAAI,SAAA5E,GAAM,OACjB,sBAAkB2E,UAAU,kBAA5B,UACE,cAAC,IAAD,CAAQnE,GAAIR,EAAQkE,SAAUW,IAASE,MAAOrF,MAAOgE,EAAaP,KAAK,WACtEnD,IAFOA,WAQjBvE,MAKQsC,WAAMiH,KAAKjC,ICjFXkC,ICbHC,GAMAC,GAOAC,GDAGH,GATf,SACEzE,EACA6E,EACAC,EACAjD,GAEA,OAAOF,GAAQ3B,GAAI,SAAA3E,GAAO,OAAI,IAAIqE,IAAkBrE,EAASwJ,EAAMC,KAAUjD,IEO/E,SAASkD,GAAT,GAAwD,IAAxCtB,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAClC,EAQIc,EAPFwB,kBADF,MACe,GADf,IAQIxB,EANFyB,iBAFF,MAEc,GAFd,IAQIzB,EALF0B,YAHF,MAGST,GAAKU,OAHd,EAIE7B,EAIEE,EAJFF,SAJF,EAQIE,EAHF4B,mBALF,MAKgB,GALhB,IAQI5B,EAFF6B,oBANF,MAMiB,GANjB,IAQI7B,EADF8B,iBAPF,SAUMC,EAAcf,GAClBzE,EACA,iBACA,CACEyF,iBAAkB,CAAEF,YAAWJ,SAEjC,CAACA,EAAMI,IAIHtG,EAAQ0C,GACZ3B,GACA,2CACG2E,GAAWe,WAAaF,EAAYG,WAAWC,IAAIjB,GAAWe,aADjE,cAEGf,GAAWkB,UAAYL,EAAYG,WAAWC,IAAIjB,GAAWkB,YAFhE,qBAGQL,GAHR,qBAIQA,GAJR,2BAKStE,GALT,4BAMUA,GANV,cAOGyD,GAAWmB,YAAcN,EAAYG,WAAWC,IAAIjB,GAAWmB,cAPlE,cAQGnB,GAAWoB,aAAeP,EAAYG,WAAWC,IAAIjB,GAAWoB,eARnE,IAUA,CAACZ,EAAMI,IAST,OALA/J,qBAAU,WAAYyD,EAAK0F,GAAWe,YAAYxI,MAAQ+H,IAAa,CAAChG,EAAMgG,IAC9EzJ,qBAAU,WAAYyD,EAAK0F,GAAWkB,WAAW3I,MAAQgI,IAAY,CAACjG,EAAMiG,IAC5E1J,qBAAU,WAAYyD,EAAK0F,GAAWmB,aAAa5I,MAAQmI,IAAc,CAACpG,EAAMoG,IAChF7J,qBAAU,WAAYyD,EAAK0F,GAAWoB,cAAc7I,MAAQoI,IAAe,CAACrG,EAAMqG,IAGhF,cAAC,GAAD,CACEtF,GAAIA,EACJwC,OAAQ,CAAC,OAAQmC,GAAWe,WAAYf,GAAWkB,UAAWlB,GAAWmB,YAAanB,GAAWoB,cACjGtD,QAAS,CAAC,QACVC,MAAM,OACNC,KAAMA,EALR,SAOGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE4B,KAAM7D,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOiI,EAA/E,UACE,wBAAQjI,MAAOwH,GAAKsB,YAApB,SAAkCtB,GAAKsB,cACvC,wBAAQ9I,MAAOwH,GAAKU,OAApB,SAA6BV,GAAKU,SAClC,wBAAQlI,MAAOwH,GAAKuB,YAApB,SAAkCvB,GAAKuB,mBAG3C,qBAAK9B,UAAU,kBAAf,SACE,kCACE,uBACE+B,QAASX,EACThC,SAAU,kBAAMA,EAAS,CAAEgC,WAAYA,KACvC7C,MAAM,UACNC,KAAK,aALT,kBAUF,sBAAKwB,UAAU,kBAAkBjF,MAAO,CAAEV,MAAO,KAAjD,UACE,uBACE2H,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE0B,YAAa3D,EAAEZ,OAAOxD,SAChDkJ,KAAM,IACNlH,MAAO,CAAEV,MAAO,OAChBkE,MAAM,cACNC,KAAK,SACLzF,MAAO+H,IAET,uBACEkB,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE2B,WAAY5D,EAAEZ,OAAOxD,SAC/CkJ,KAAM,IACNlH,MAAO,CAAEV,MAAO,OAChBkE,MAAM,aACNC,KAAK,SACLzF,MAAOgI,OAGX,sBAAKf,UAAU,kBAAkBjF,MAAO,CAAEV,MAAO,KAAjD,UACE,uBACE2H,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE8B,aAAc/D,EAAEZ,OAAOxD,SACjDkJ,KAAM,IACNlH,MAAO,CAAEV,MAAO,OAChBkE,MAAM,eACNC,KAAK,SACLzF,MAAOmI,IAET,uBACEgB,IAAK,EACLF,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+B,cAAehE,EAAEZ,OAAOxD,SAClDkJ,KAAM,IACNlH,MAAO,CAAEV,MAAO,OAChBkE,MAAM,gBACNC,KAAK,SACLzF,MAAOoI,a,SD7HTZ,K,0BAAAA,E,gBAAAA,E,2BAAAA,Q,cAMAC,K,oBAAAA,E,kBAAAA,E,sBAAAA,E,wBAAAA,Q,cAOAC,K,gBAAAA,E,cAAAA,E,kBAAAA,E,mBAAAA,Q,KCyHGrH,WAAMiH,KAAKO,IChIX,SAASuB,GAAkBC,EAAgCzB,GACxE,IAAM0B,EAAkB3I,mBAClB4I,EAAa5I,mBACb6I,EAAM,OAAG5B,QAAH,IAAGA,OAAH,EAAGA,EAAS4B,OAElBC,EAAU7J,uBACd,SAAC8J,GACC,GAA+B,MAA3BJ,EAAgBzI,QAAiB,CACnC,IAAM8I,EAAYD,EAAOJ,EAAgBzI,UACpC2I,GAAUG,EAAY,IAAOH,KAChCH,EAASM,GACTL,EAAgBzI,QAAU6I,QAG5BL,EAAS,GACTC,EAAgBzI,QAAU6I,EAG5BH,EAAW1I,QAAU+I,sBAAsBH,KAG7C,CAACJ,IAGH/K,qBAAU,WAGR,OAFAiL,EAAW1I,QAAU+I,sBAAsBH,GAEpC,WACqB,MAAtBF,EAAW1I,SACbgJ,qBAAqBN,EAAW1I,YAGnC,CAAC4I,I,gCCgBN,SAASK,GAAT,GAAoE,IAA9C/H,EAA6C,EAA7CA,KAAMgI,EAAuC,EAAvCA,OAAQtE,EAA+B,EAA/BA,KAASuE,EAAsB,mBAC3DC,EAAYtJ,iBAAO,IAAIuJ,WAAWnI,EAAKoI,oBACvCC,EAAYzJ,iBAA0B,MAEtC0J,EAAOzK,uBAAY,WACvB,IAAM0K,EAASF,EAAUvJ,QACnB1C,EAAO,OAAGmM,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MAC9BD,GAAWnM,IAIZsH,IAAS+E,GAASC,WApD1B,SAA4BtM,EAAmCoI,GAC7D,IAAIE,EAAI,EACFlF,EAASpD,EAAQmM,OAAO/I,OACxBD,EAAQnD,EAAQmM,OAAOhJ,MACvBoJ,EAAenE,EAAKoE,OACpBC,EAAatJ,EAAQoJ,EAE3BvM,EAAQ0M,UAAY,UACpB1M,EAAQ2M,SAAS,EAAG,EAAGxJ,EAAO,KAE9BnD,EAAQ4M,UAAY,EACpB5M,EAAQ6M,YAAc,UACtB7M,EAAQ8M,YACR9M,EAAQ+M,OAAOzE,EAAGlF,EAAWgF,EAAK,GAAK,IAAShF,EAAU,GAC1D,IAAK,IAAI4J,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMxE,EAAMJ,EAAK4E,GAAK,IAAS5J,EAAU,EACzCpD,EAAQiN,OAAO3E,EAAGlF,EAASoF,GAC3BF,GAAKmE,EAEPzM,EAAQkN,SAkCJC,CAAmBnN,EAAS8L,EAAUpJ,SAC7B4E,IAAS+E,GAASe,WAhCjC,SAA2BpN,EAAmCoI,GAC5D,IAAIE,EAAI,EACFlF,EAASpD,EAAQmM,OAAO/I,OACxBD,EAAQnD,EAAQmM,OAAOhJ,MACvBoJ,EAAenE,EAAKoE,OACpBa,EAAWlK,EAAQoJ,EAEzBvM,EAAQ0M,UAAY,UACpB1M,EAAQ2M,SAAS,EAAG,EAAGxJ,EAAOC,GAE9BpD,EAAQ0M,UAAY,UACpB,IAAK,IAAIM,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMM,EAAYlK,GAAUgF,EAAK4E,GAAK,KAChCxE,EAAIpF,EAASkK,EACnBtN,EAAQ2M,SAASrE,EAAGE,EAAG6E,EAAUC,GACjChF,GAAK+E,GAkBHE,CAAkBvN,EAAS8L,EAAUpJ,YAEtC,CAAC4E,IAEEkG,EAAU/L,uBAAY,WAC1B,IAAM8K,EAAe3I,EAAKoI,kBACpByB,EAAY,IAAI1B,WAAWQ,GAC7BjF,IAAS+E,GAASC,WACpB1I,EAAK8J,sBAAsBD,GAClBnG,IAAS+E,GAASe,WAC3BxJ,EAAK+J,qBAAqBF,GAE5B3B,EAAUpJ,QAAU+K,IACnB,CAAC7J,EAAM0D,IAWV,OAFA2D,GAPaxJ,uBAAY,WAClBmK,IACH4B,IACAtB,OAED,CAACA,EAAMsB,EAAS5B,KAIZ,oCAAQjI,IAAKsI,EAAWpI,MAAO,CAAE+J,QAAS,UAAe/B,IAGnD3J,WAAMiH,KAAKwC,IC9EXkC,ICXHxB,GDWGwB,GAVf,SAAyBlJ,EAAzB,GAAoE,IAAD,IAA5BmJ,kBAA4B,MAAf,GAAe,EAE3DlK,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQ+N,oBAK5C,OAFA5N,qBAAU,WAAYyD,EAAKoK,QAAUC,KAAKC,IAAI,EAAGJ,KAAc,CAAClK,EAAMkK,IAE/DlK,GCHT,SAASuK,GAAT,GAAsE,IAAlD/F,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KACtC,EAAkFc,EAA1E0F,kBAAR,MAAqB,GAArB,EAAyB5F,EAAyDE,EAAzDF,SAAzB,EAAkFE,EAA/CwD,cAAnC,WAAkFxD,EAA/Bd,YAAnD,MAA0D+E,GAASC,WAAnE,EACM1I,EAAOiK,GAAgBlJ,EAAI,CAAEmJ,eAEnC,OACE,eAAC,GAAD,CAAMnJ,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,WAAYC,QAAS,CAAC,UAAWC,MAAK,oBAAeC,GAAQA,KAAM8G,EAAnG,UACE,qBAAKtF,UAAU,kBAAf,SACE,cAAC,GAAD,CAAYxB,KAAMA,EAAM1D,KAAMA,EAAMgI,OAAQA,EAAQxI,OAAQ,GAAID,MAAO,QAExEwG,GACC,sBAAKb,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACExB,KAAK,QACL0D,IAAI,KACJF,IAAI,IACJ5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE4F,YAAa7H,EAAEZ,OAAOxD,SAChDkJ,KAAM,EACNlJ,MAAOiM,IAERG,KAAKC,IAAI,EAAGJ,MAEf,sBAAKhF,UAAU,kBAAkBjF,MAAO,CAAEwK,eAAgB,iBAA1D,UACE,yBAAQnG,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOyF,EAA/E,UACE,wBAAQzF,MAAOwK,GAASe,UAAxB,SAAoCf,GAASe,YAC7C,wBAAQvL,MAAOwK,GAASC,WAAxB,SAAqCD,GAASC,gBAEhD,kCACE,uBAAOzB,QAASe,EAAQ1D,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE0D,QAASA,KAAWvE,MAAM,QAAQC,KAAK,aAD3F,sB,SAhCA+E,K,sBAAAA,E,0BAAAA,Q,KA2CGnK,WAAMiH,KAAKgF,IC5C1B,SAASG,GAAT,GAA2C,IAAxB3J,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGrB,OAFA8B,GAAoBzE,EAAI,qBAAsB,CAAE4J,eAAgB,IAEzD,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,IAGrFpF,WAAMiH,KAAKmF,ICL1B,SAASE,GAAT,GAAqE,IAAxCpG,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAC/C,EAAkCc,EAA1BqG,YAAR,SAAqBvG,EAAaE,EAAbF,SACfwG,EAAqBlM,mBAIrBoB,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQ2O,gBAEtCC,EAAmBnN,uBACvB,SAACoN,GAAyC,IAAD,EAEvC,UAAAH,EAAmBhM,eAAnB,SAA4B0B,aAC5BsK,EAAmBhM,QAAUmM,EAG7BH,EAAmBhM,QAAQsD,QAAQpC,KAErC,CAACA,IAEGkL,EAAQrN,uBAAY,WACxB,GAAKiN,EAAmBhM,QAAxB,CAIA,IAAMmM,EAAejL,EAAK5D,QAAQ+O,qBAClCF,EAAaG,OAASN,EAAmBhM,QAAQsM,OACjDH,EAAaJ,KAAOA,EAEpBG,EAAiBC,GACjBH,EAAmBhM,QAAQoM,WAC1B,CAAClL,EAAM6K,EAAMG,IACV1K,EAAOzC,uBAAY,WACvB,IAAK,IAAD,EACF,UAAAiN,EAAmBhM,eAAnB,SAA4BwB,OAC5B,aACD,IAEG+K,EAAgBxN,sBAAW,uCAC/B,WAAOyN,GAAP,eAAA7O,EAAA,6DACQwO,EAAejL,EAAK5D,QAAQ+O,qBADpC,KAE8BnL,EAAK5D,QAFnC,SAEiEkP,EAAKC,cAFtE,wCAE2CC,gBAF3C,uBAEEP,EAAaG,OAFf,OAGEH,EAAaJ,KAAOA,EAEpBG,EAAiBC,GALnB,4CAD+B,sDAQ/B,CAACjL,EAAM6K,EAAMG,IAGTS,EAAe5N,uBACnB,SAAAwE,GACEA,EAAE0C,iBACFsG,EAAchJ,EAAEZ,OAAOiK,MAAM,MAE/B,CAACL,IAEGM,EAAiB9N,uBAAY,SAAAwE,GAAUA,EAAE0C,mBAAkB,IAC3D6G,EAAa/N,sBAAW,uCAC5B,WAAMwE,GAAN,eAAA5F,EAAA,sDACE4F,EAAE0C,iBACIuG,EAAa,YAAIjJ,EAAEwJ,aAAaC,OACnC7I,QAAO,SAAC8I,GAAD,MAA0C,SAAdA,EAAKC,QAAiB,GACzDC,YACHZ,EAAcC,GALhB,2CAD4B,sDAQ5B,CAACD,IAGH,OACE,cAAC,GAAD,CACEtK,GAAIA,EACJyC,QAAS,CAAC,UACVC,MAAM,gBACNC,KAAMA,EACNwI,WAAYP,EACZQ,OAAQP,EANV,SAQE,sBAAK1G,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,wBAAQnH,QAASmN,EAAjB,kBACA,wBAAQnN,QAASuC,EAAjB,qBAEDyF,GACC,qCACE,qBAAKb,UAAU,kBAAf,SACE,uBAAOZ,SAAUmH,EAAc/H,KAAK,WAEtC,qBAAKwB,UAAU,kBAAf,SACE,kCACE,uBAAO+B,QAAS4D,EAAMvG,SAAU,kBAAMA,EAAS,CAAEuG,MAAOA,KAASpH,MAAM,OAAOC,KAAK,aADrF,oBAYCpF,WAAMiH,KAAKqF,IC/EXwB,OAdf,SAA6BrL,EAA7B,GAAuH,IAAD,IAA3EsL,cAA2E,MAAlE,EAAkE,MAA/DC,iBAA+D,MAAnD,IAAmD,MAA9CC,YAA8C,MAAvC,EAAuC,MAApCC,SAAoC,MAAhC,EAAgC,MAA7B9I,YAA6B,MAAtB,UAAsB,EAE9G1D,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQqQ,wBAS5C,OANAlQ,qBAAU,WAAYyD,EAAKqM,OAAOpO,MAAQoO,IAAS,CAACrM,EAAMqM,IAC1D9P,qBAAU,WAAYyD,EAAKsM,UAAUrO,MAAQqO,IAAY,CAACtM,EAAMsM,IAChE/P,qBAAU,WAAYyD,EAAKuM,KAAKtO,MAAQsO,IAAO,CAACvM,EAAMuM,IACtDhQ,qBAAU,WAAYyD,EAAKwM,EAAEvO,MAAQuO,IAAI,CAACxM,EAAMwM,IAChDjQ,qBAAU,WAAYyD,EAAK0D,KAAOA,IAAO,CAAC1D,EAAM0D,IAEzC1D,GCjBH0M,GAAwC,CAAC,WAAY,YAAa,WAClEC,GAAqC,CAAC,UAAW,WAAY,WAAY,UAAW,QAAS,WA+BnG,SAASC,GAAT,GAA0E,IAAlDpI,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KAC1C,EAAqFc,EAA7E6H,cAAR,MAAiB,EAAjB,IAAqF7H,EAAjE+H,YAApB,MAA2B,EAA3B,IAAqF/H,EAAvD8H,iBAA9B,MAA0C,IAA1C,IAAqF9H,EAAtCgI,SAA/C,MAAmD,EAAnD,EAAsDlI,EAA+BE,EAA/BF,SAAtD,EAAqFE,EAArBd,YAAhE,MAAuE,UAAvE,EACM2E,EAAYzJ,iBAA0B,MACtCoB,EAAOoM,GAAoBrL,EAAI,CAAEsL,SAAQC,YAAWC,OAAMC,IAAG9I,SAEnEnH,qBAAU,WACR,IAAMgM,EAASF,EAAUvJ,QACnB1C,EAAO,OAAGmM,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MACnC,GAAKD,GAAWnM,EAAhB,CAIA,IAAMyQ,EAAc,IAAIC,aAAa9M,EAAK5D,QAAQ2Q,WAAa,KAAK5H,KAAI,SAAC6H,EAAG5D,GAAJ,OAAc,IAAJA,KAC5E6D,EAAa,IAAIH,aAAaD,EAAYjE,QAC1CsE,EAAS,IAAIJ,aAAaD,EAAYjE,QAI5C5I,EAAKmN,qBAAqBN,EAAaI,EAAYC,GA/CvD,SAA+B9Q,EAAmCoI,EAAoBxE,GACpF,IAAI0E,EAAI,EACFlF,EAASpD,EAAQmM,OAAO/I,OACxBD,EAAQnD,EAAQmM,OAAOhJ,MACvBoJ,EAAenE,EAAKoE,OACpBC,EAAatJ,EAAQoJ,EAE3BvM,EAAQ0M,UAAY,UACpB1M,EAAQ2M,SAAS,EAAG,EAAGxJ,EAAOC,GAE9BpD,EAAQ4M,UAAY,EACpB5M,EAAQ6M,YAAc,YACtB7M,EAAQ8M,YACR9M,EAAQ+M,OAAQnJ,EAAKsM,UAAUrO,OAAS+B,EAAK5D,QAAQ2Q,WAAa,GAAMxN,EAAO,GAC/EnD,EAAQiN,OAAQrJ,EAAKsM,UAAUrO,OAAS+B,EAAK5D,QAAQ2Q,WAAa,GAAMxN,EAAOC,GAC/EpD,EAAQkN,SACRlN,EAAQgR,YAERhR,EAAQ4M,UAAY,EACpB5M,EAAQ6M,YAAc,UACtB7M,EAAQ8M,YACR,IAAK,IAAIE,EAAI,EAAGA,EAAIT,EAAcS,IAAK,CACrC,IAAMxE,EAAKJ,EAAK4E,GAAK5J,EAAU,EAC/BpD,EAAQiN,OAAO3E,EAAGlF,EAASoF,GAC3BF,GAAKmE,EAEPzM,EAAQkN,SAuBN+D,CAAsBjR,EAAS6Q,EAAYjN,MAC1C,CAACA,EAAMqM,EAAQE,EAAMD,EAAWE,EAAGzG,EAAUrC,IAEhD,IAAM4J,EAAaZ,GAAiBa,SAAS7J,GACvC8J,EAAUb,GAAcY,SAAS7J,GAEvC,OACE,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,QAAS,SAAU,YAAa,OAAQ,KACjDC,QAAS,CAAC,UACVC,MAAK,kBAAaC,GAClBA,KAAM8G,EALR,SAOGzE,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEgC,KAAM,IACNE,IAAK,IACL9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+H,QAAShK,EAAEZ,OAAOxD,SAC5CkJ,KAAM,EACN1D,MAAK,kBAAa4I,EAAb,UACL3I,KAAK,QACLzF,MAAOoO,MAGX,qBAAKnH,UAAU,kBAAf,SACE,uBACEgC,IAAK,GACLE,IAAKpH,EAAK5D,QAAQ2Q,WAAa,EAC/BzI,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgI,WAAYjK,EAAEZ,OAAOxD,SAC/CkJ,KAAM,EACN1D,MAAK,qBAAgB6I,EAAhB,OACL5I,KAAK,QACLzF,MAAOqO,MAGX,qBAAKpH,UAAU,kBAAf,SACE,uBACEuI,UAAWH,EACXpG,KAAM,GACNE,IAAK,GACL9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEiI,MAAOlK,EAAEZ,OAAOxD,SAC1CkJ,KAAM,GACN1D,MAAK,gBAAW8I,EAAX,OACL7I,KAAK,QACLzF,MAAOsO,MAGX,qBAAKrH,UAAU,kBAAf,SACE,uBACEuI,UAAWD,EACXtG,IAAK,KACLE,IAAK,CAAC,UAAW,YAAYmG,SAAS7J,GAAQ,GAAK,IACnDY,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEkI,GAAInK,EAAEZ,OAAOxD,SACvCkJ,KAAM,CAAC,UAAW,YAAYoG,SAAS7J,GAAQ,GAAM,GACrDD,MAAK,aAAQ+I,GACb9I,KAAK,QACLzF,MAAOuO,MAGX,qBAAKtH,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SAAUA,MAAOyF,EAAlE,UACE,wBAAQzF,MAAM,UAAd,qBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,WAAd,sBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,UAAd,qBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,UAAd,0BAGJ,qBAAKiH,UAAU,kBAAf,SACE,wBAAQnF,IAAKsI,EAAW7I,OAAQ,GAAID,MAAO,aAQxCjB,WAAMiH,KAAKqH,IClIXc,OALf,SAA8B3M,EAA9B,GAAoE,IAAD,IAAvBwC,cAAuB,MAAd,EAAc,EAEjE,OAAOb,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQuR,oBAAoBpK,KAAS,CAACA,KCRzDqK,GAAgB,CAC3B,EAAG,SACH,EAAG,OACH,EAAG,OCGL,SAASC,GAAT,GAAiE,IAAxCrJ,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAC3C,EAAiCc,EAAzBjB,cAAR,MAAiB,EAAjB,EAAoBe,EAAaE,EAAbF,SACdtE,EAAO0N,GAAqB3M,EAAI,CAAEwC,WAExC,OACE,cAAC,GAAD,CACExC,GAAIA,EACJwC,OAAQuK,MAAM9N,EAAK2K,gBAChBoD,KAAK,GACL5I,KAAI,SAAC6H,EAAGgB,GAAJ,sBAAyBA,MAChCxK,QAAS,CAAC,UACVE,KAAMA,EANR,SAQGqC,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAkBjF,MAAO,CAAEgO,WAAY,aAAcC,cAAe,UAAnF,SACGC,OAAOC,KAAKR,IAAezI,KAAI,SAAAkJ,GAAY,OAC1C,wBAA0B5K,MAAM,wBAAhC,UACE,uBACEwD,QAAS1D,KAAY8K,EACrB/J,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEf,QAASlB,EAAEZ,OAAOxD,SAC5CyF,KAAK,QACLzF,OAAQoQ,IACP,IAEFT,GAAcS,KARLA,YAkBX/P,WAAMiH,KAAKsI,IC9BXS,OALf,SAAgCvN,EAAhC,GAAuE,IAAD,IAAxByC,eAAwB,MAAd,EAAc,EAEpE,OAAOd,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQmS,sBAAsB/K,KAAU,CAACA,KCFzE,SAASgL,GAAT,GAAmE,IAAxChK,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACrCY,EAA0BE,EAA1BF,SAAR,EAAkCE,EAAhBhB,eAAlB,MAA4B,EAA5B,EACMxD,EAAOsO,GAAuBvN,EAAI,CAAEyC,YAE1C,OACE,cAAC,GAAD,CACEzC,GAAIA,EACJwC,OAAQ,CAAC,SACTC,QAASsK,MAAM9N,EAAKyO,iBACjBV,KAAK,GACL5I,KAAI,SAAC6H,EAAGgB,GAAJ,uBAA0BA,MACjCtK,KAAMA,EANR,SAQGqC,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAkBjF,MAAO,CAAEgO,WAAY,aAAcC,cAAe,UAAnF,SACGC,OAAOC,KAAKR,IAAezI,KAAI,SAAAkJ,GAAY,OAC1C,wBAA0B5K,MAAM,wBAAhC,UACE,uBACEwD,QAASzD,KAAa6K,EACtB/J,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEd,SAAUnB,EAAEZ,OAAOxD,SAC7CyF,KAAK,QACLzF,OAAQoQ,IACP,IAEFT,GAAcS,KARLA,YAkBX/P,WAAMiH,KAAKiJ,ICrBXE,OAXf,SAA2B3N,EAA3B,GAAwF,IAAD,IAA9C4N,aAA8C,MAAtC,KAAsC,MAAhCC,kBAAgC,MAAnB,OAAmB,EAE/E5O,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQyS,sBAM5C,OAHAtS,qBAAU,WAAYyD,EAAK2O,MAAQA,IAAQ,CAAC3O,EAAM2O,IAClDpS,qBAAU,WAAYyD,EAAK4O,WAAaA,IAAa,CAAC5O,EAAM4O,IAErD5O,GCZH2O,GAAQ,IAAI7B,aAAa,EAAE,EAAG,IAEpC,SAASgC,GAAT,GAAwD,IAAlC/N,EAAiC,EAAjCA,GAAc2C,GAAmB,EAA7BqC,SAA6B,EAAnBrC,MAIlC,OAFAgL,GAAkB3N,EAAI,CAAE4N,WAEjB,cAAC,GAAD,CAAM5N,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWE,KAAMA,IAGtDpF,WAAMiH,KAAKuJ,ICT1B,SAASC,GAAT,GAA8C,IAAxBhO,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGxB,OAFA8B,GAAoBzE,EAAI,uBAAwB,CAAE4J,eAAgB,IAE3D,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,aAAaC,KAAMA,IAGtFpF,WAAMiH,KAAKwJ,ICUXC,OAdf,SAA+BjO,EAA/B,GAAqE,IAAD,IAAvBkO,cAAuB,MAAd,EAAc,EAE5DjP,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQ8S,0BAS5C,OARA3S,qBAAU,WAER,OADAyD,EAAKkL,QACE,kBAAMlL,EAAKM,UACjB,CAACN,IAGJzD,qBAAU,WAAYyD,EAAKiP,OAAOhR,MAAQgR,IAAS,CAACjP,EAAMiP,IAEnDjP,GCbT,SAASmP,GAAT,GAAkE,IAAxC3K,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAC5C,EAAiCc,EAAzByK,cAAR,MAAiB,EAAjB,EAAoB3K,EAAaE,EAAbF,SAGpB,OAFA0K,GAAsBjO,EAAI,CAAEkO,WAG1B,cAAC,GAAD,CAAMlO,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,oBAAewL,GAAUvL,KAAMA,EAAvE,SACGqC,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE2K,QAAS5M,EAAEZ,OAAOxD,SAC5CgC,MAAO,CAAEV,MAAO,QAChBkE,MAAM,SACNC,KAAK,SACLzF,MAAOgR,UASN3Q,WAAMiH,KAAK4J,ICVXC,OAVf,SAAsBrO,EAAtB,GAAiF,IAAD,IAA5CsO,iBAA4C,MAAhC,EAAgC,MAA7BC,oBAA6B,MAAd,EAAc,EAExEtP,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQmT,YAAYD,KAAe,CAACA,IAKxE,OAFA/S,qBAAU,WAAYyD,EAAKqP,UAAUpR,MAAQoR,IAAY,CAACrP,EAAMqP,IAEzDrP,GCVT,SAASwP,GAAeH,GACtB,OAAOhF,KAAKjD,IAAI,KAAOiD,KAAKnD,IAAI,QAASmI,IAG3C,SAASI,GAAT,GAAyD,IAAxCjL,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACnC,EAAsDc,EAA9C6K,iBAAR,MAAoB,EAApB,IAAsD7K,EAA/B8K,oBAAvB,MAAsC,EAAtC,EAAyChL,EAAaE,EAAbF,SACnCtE,EAAOoP,GAAarO,EAAI,CAAEsO,YAAWC,iBAE3C,OACE,cAAC,GAAD,CAAMvO,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,aAAcC,QAAS,CAAC,UAAWC,MAAK,iBAAY4L,EAAZ,MAA2B3L,KAAMA,EAAzG,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEkC,IAAKpH,EAAKqP,UAAUK,SACpBxI,IAAKlH,EAAKqP,UAAUM,SACpBxI,KAAMqI,GAAeF,GAAgB,GACrChL,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+K,WAAYhN,EAAEZ,OAAOxD,SAC/CwF,MAAK,iBAAY4L,EAAZ,MACL3L,KAAK,QACLzF,MAAOoR,MAGX,qBAAKnK,UAAU,kBAAf,SACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgL,cAAejN,EAAEZ,OAAOxD,SAClDmJ,IAAK,EACLF,IAAK,IACLzD,MAAM,YACNC,KAAK,SACLzF,MAAOuR,GAAeF,YASrBhR,ICnCHsR,GDmCGtR,OAAMiH,KAAKkK,I,yCCnCdG,K,gBAAAA,E,WAAAA,Q,KAsCGC,OAzBf,YAA6D,IAA3CvL,EAA0C,EAA1CA,SAAUZ,EAAgC,EAAhCA,KAAMzF,EAA0B,EAA1BA,MAAU0F,EAAgB,mBAGtDwD,EAAO,KACP2I,EAAa7R,EACbyF,IAASkM,GAAWG,MACtB5I,EAAO,GAAK,EAAcA,GAC1B2I,EAfJ,SAAiB7R,GACf,OAAQoM,KAAKC,IAAI,GAAIrM,GAAS,GAAK,EAcpB+R,CAAQF,IAGvB,IAAMG,EAASpS,uBACb,SAACwE,GACC,IAAI6N,GAAY7N,EAAEZ,OAAOxD,MACrByF,IAASkM,GAAWG,MACtBG,EAlBR,SAAiBjS,GACf,OAAOoM,KAAK8F,MAAM,EAAY,EAARlS,GAiBLmS,CAAQF,IAGrB5L,EAAS4L,KAEX,CAAC5L,EAAUZ,IAGb,OAAO,iDAAWC,GAAX,IAAkBD,KAAK,QAAQ0D,IApB1B,EAoBoCF,IArBpC,EAqB8CC,KAAMA,EAAM7C,SAAU2L,EAAQhS,MAAO6R,MC3BlFO,OAVf,SAAqBtP,EAArB,GAAyD,IAAD,IAArBwL,YAAqB,MAAd,EAAc,EAEhDvM,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQ2O,gBAK5C,OAFAxO,qBAAU,WAAWyD,EAAKuM,KAAK+D,gBAAgB/D,EAAMvM,EAAK5D,QAAQmU,YAAa,QAAQ,CAACvQ,EAAMuM,IAEvFvM,GCVF,SAASwQ,GAAYvS,GAC1B,OAAO,GAAKoM,KAAK8F,MAAM9F,KAAKoG,IAAIxS,ICIlC,SAASyS,GAAT,GAA+D,IAAxClM,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACzC,EAAiEc,EAAzD6K,iBAAR,MAAoB,GAApB,IAAiE7K,EAAxCmM,gBAAzB,MAAoC,GAApC,IAAiEnM,EAAxBoM,WAAzC,MAA+C,GAA/C,EAAoDtM,EAAaE,EAAbF,SAG9CuM,EAAYR,GAAY,GAAD,OAAItP,EAAJ,UAAgB,IACvC+P,EAAaT,GAAY,GAAD,OAAItP,EAAJ,WAAiB,IAEzCgQ,EAAUV,GAAY,GAAD,OAAItP,EAAJ,QAAc,CAAEwL,KAAMlC,KAAK2G,IAAU,GAANJ,EAAYvG,KAAK4G,MACrEC,EAAUb,GAAY,GAAD,OAAItP,EAAJ,QAAc,CAAEwL,KAAMlC,KAAK2G,IAAkB,IAAb,EAAMJ,GAAavG,KAAK4G,MAE7EE,EAAY/B,GAAa,GAAD,OAAIrO,EAAJ,UAAgB,CAAEsO,cAE1C+B,EAAef,GAAY,GAAD,OAAItP,EAAJ,aAAmB,CAAEwL,KAAMoE,IAsB3D,OAnBApU,qBAAU,WACRsU,EAAUzO,QAAQ2O,GAClBA,EAAQ3O,QAAQ0O,KACf,CAACC,EAASF,EAAWC,IAExBvU,qBAAU,WACRsU,EAAUzO,QAAQ+O,GAClBA,EAAU/O,QAAQ8O,GAClBA,EAAQ9O,QAAQ0O,KACf,CAACK,EAAWN,EAAWC,EAAYI,IAEtC3U,qBAAU,WACR2U,EAAQ9O,QAAQgP,GAChBA,EAAahP,QAAQ+O,KACpB,CAACA,EAAWC,EAAcF,IAG7BxO,GAAQ3B,GAAI,iBAAO,CAAEV,MAAOwQ,EAAWtQ,OAAQuQ,KAAe,CAACD,EAAWC,IAGxE,cAAC,GAAD,CAAM/P,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAK,cAAiBC,KAAMA,EAAlF,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEkC,IAAI,IACJF,IAAI,IACJ5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEsM,KAAMvO,EAAEZ,OAAOxD,SACzCkJ,KAAK,OACL1D,MAAK,eAAsB,KAAX,EAAImN,GAAf,mBAA0C,IAANA,EAApC,SACLlN,KAAK,QACLzF,MAAO2S,MAGX,qBAAK1L,UAAU,kBAAf,SACE,uBACEkC,IAAI,IACJF,IAAI,IACJ5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+K,WAAYhN,EAAEZ,OAAOxD,SAC/CkJ,KAAK,OACL1D,MAAK,iBAAY4L,EAAZ,MACL3L,KAAK,QACLzF,MAAOoR,MAGX,qBAAKnK,UAAU,kBAAf,SACE,cAAC,GAAD,CACEZ,SAAU,SAAAqM,GAAQ,OAAIrM,EAAS,CAAEqM,cACjClN,MAAK,oBAAe+M,GAAYG,GAAUU,QAAQ,GAA7C,OACL3N,KAAMkM,GAAWzJ,OACjBlI,MAAO0S,WASNrS,WAAMiH,KAAKmL,IC5EXY,OALf,SAA4BvQ,GAE1B,OAAO2B,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQmV,gBCCxC,SAASC,GAAT,GAA+C,IAAxBzQ,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGzB,OAFA4N,GAAmBvQ,GAEZ,cAAC,GAAD,CAAMA,GAAIA,EAAIwC,OAAQ,CAAC,SAAUG,KAAMA,IAGjCpF,WAAMiH,KAAKiM,ICiBXC,OAjBf,SACE1Q,EADF,GAGG,IAAD,IADE2Q,cACF,MADW,KACX,MADkBC,YAClB,MADyB,GACzB,MAD6BC,aAC7B,MADqC,GACrC,MADyCC,eACzC,MADmD,IACnD,MADyDC,iBACzD,OADsE,GACtE,EAEM9R,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQ2V,8BAS5C,OANAxV,qBAAU,WAAYyD,EAAK8R,UAAU7T,MAAQ6T,IAAY,CAAC9R,EAAM8R,IAChEvV,qBAAU,WAAYyD,EAAK2R,KAAK1T,MAAQ0T,IAAO,CAAC3R,EAAM2R,IACtDpV,qBAAU,WAAYyD,EAAK4R,MAAM3T,MAAQ2T,IAAQ,CAAC5R,EAAM4R,IACxDrV,qBAAU,WAAYyD,EAAK0R,OAAOzT,MAAQyT,IAAS,CAAC1R,EAAM0R,IAC1DnV,qBAAU,WAAYyD,EAAK6R,QAAQ5T,MAAQ4T,IAAU,CAAC7R,EAAM6R,IAErD7R,GCpBT,SAASgS,GAAT,GAAsE,IAAxCxN,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAChD,EAA6Fc,EAArFkN,cAAR,MAAiB,KAAjB,IAA6FlN,EAArEmN,YAAxB,MAA+B,GAA/B,EAAmCrN,EAA0DE,EAA1DF,SAAnC,EAA6FE,EAAhDoN,aAA7C,MAAqD,GAArD,IAA6FpN,EAApCqN,eAAzD,MAAmE,IAAnE,IAA6FrN,EAApBsN,iBAAzE,OAAsF,GAAtF,EAGA,OAFAL,GAA0B1Q,EAAI,CAAE2Q,SAAQC,OAAMC,QAAOC,UAASC,cAG5D,cAAC,GAAD,CACE/Q,GAAIA,EACJwC,OAAQ,CAAC,QAAS,YAAa,OAAQ,QAAS,SAAU,WAC1DC,QAAS,CAAC,UACVE,KAAMA,EAJR,SAMGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEgC,IAAI,OACJE,IAAI,IACJ9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEwN,WAAYzP,EAAEZ,OAAOxD,SAC/CkJ,KAAK,IACL1D,MAAK,qBAAgBqO,EAAhB,OACLpO,KAAK,QACLzF,MAAO6T,MAGX,qBAAK5M,UAAU,kBAAf,SACE,uBACEgC,IAAI,IACJE,IAAI,KACJ9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEqN,MAAOtP,EAAEZ,OAAOxD,SAC1CkJ,KAAK,IACL1D,MAAK,gBAAWkO,EAAX,OACLjO,KAAK,QACLzF,MAAO0T,MAGX,qBAAKzM,UAAU,kBAAf,SACE,uBACEgC,IAAI,IACJE,IAAI,KACJ9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEsN,OAAQvP,EAAEZ,OAAOxD,SAC3CkJ,KAAK,IACL1D,MAAK,iBAAYmO,EAAZ,OACLlO,KAAK,QACLzF,MAAO2T,MAGX,qBAAK1M,UAAU,kBAAf,SACE,uBACEgC,IAAI,IACJE,IAAI,IACJ9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEoN,QAASrP,EAAEZ,OAAOxD,SAC5CkJ,KAAK,QACL1D,MAAK,kBAAaiO,EAAb,MACLhO,KAAK,QACLzF,MAAOyT,MAGX,qBAAKxM,UAAU,kBAAf,SACE,uBACEgC,IAAI,IACJE,IAAI,IACJ9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuN,SAAUxP,EAAEZ,OAAOxD,SAC7CkJ,KAAK,QACL1D,MAAK,mBAAcoO,EAAd,MACLnO,KAAK,QACLzF,MAAO4T,WASNvT,WAAMiH,KAAKyM,ICrEpBC,GAAgB,CAAC,GAAI,GAAI,IAAK,IAAK,IAAK,IAAM,IAAM,IAAM,IAAM,MAChEC,GAAeD,GACfE,GAAerE,MAAMmE,GAAcrJ,QAAQmF,KAAK,GAEtD,SAASqE,GAAmBC,GAC1B,IAAMC,EAAiBjI,KAAKC,IAAI,EAAG+H,GACnC,OAAOhI,KAAKkI,KAAKD,IAAmBA,EAAiB,GASvD,SAASE,GAAT,GAA6D,IAAxChO,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACvC,EAA0Dc,EAAlD6N,iBAAR,MAAoB,EAApB,IAA0D7N,EAAnCiO,aAAvB,MAA+BN,GAA/B,EAA6C7N,EAAaE,EAAbF,SAGvCuM,EAAYR,GAAY,GAAD,OAAItP,EAAJ,UAAgB,IACvC+P,EAAaT,GAAY,GAAD,OAAItP,EAAJ,WAAiB,IAEzC2R,EAAcR,GAAa/M,KAAI,SAACmH,EAAWqG,EAAO9F,GACtD,IAAM+F,EAAuB,IAAVD,EACbE,EAAcF,IAAU9F,EAAYjE,OAAS,EAG7C2D,GAFcqG,IAAeC,EAETJ,EAAME,GAAS,EACnCjP,EAAOkP,EAAa,WAAaC,EAAc,YAAc,UAC7DrG,EAAI4F,GAAmBC,GAI7B,OAAOjG,GAAoB,GAAD,OAAIrL,EAAJ,mBAAiBuL,GAAa,CAAEA,YAAWC,OAAM7I,OAAM8I,SA2BnF,OAxBAjQ,qBACE,WACGmW,EACEI,OAAOhC,GACPiC,QAAO,SAACvR,EAAQ+P,GAAT,OAAyB/P,EAAOY,QAAQmP,KAAcV,KAJ3D,CAONA,EAAWC,GAPL,mBAOoB4B,KAG7BhQ,GAAQ3B,GAAI,iBAAO,CAAEV,MAAOwQ,EAAWtQ,OAAQuQ,KAAe,CAACD,EAAWC,IAG1EvU,qBAAU,WACRmW,EAAYvP,SAAQ,SAACF,EAAQ0P,GAC3B1P,EAAOsJ,KAAK+D,gBAAgBmC,EAAME,GAAQ1P,EAAO7G,QAAQmU,YAAa,WAEvE,CAACmC,EAAaD,IACjBlW,qBAAU,WACRmW,EAAYvP,SAAQ,SAAAF,GAClBA,EAAOuJ,EAAE8D,gBAAgB8B,GAAmBC,GAAYpP,EAAO7G,QAAQmU,YAAa,WAErF,CAACmC,EAAaL,IAGf,cAAC,GAAD,CAAMtR,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,KAAKC,KAAMA,EAAvE,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,YAAf,SACGwN,EAAYvN,KAAI,SAAClC,EAAQ0P,GAAT,OACf,gCACE,uBACEvL,IAAK,GACLF,KAAM,GACN5C,SAAU,SAAAjC,GAAC,OACTiC,EAAS,CAAEmO,MAAOO,YAAQP,GAAO,SAACQ,GAA0BA,EAAMN,IAAUtQ,EAAEZ,OAAOxD,YAEvFkJ,KAAM,GACN1D,MAAK,gBAAWgP,EAAME,GAAjB,OACLjP,KAAK,QACLzF,MAAOwU,EAAME,MArERrG,EAuEUrJ,EAAOqJ,UAAUrO,MAtE9CqO,GAAa,IACT,GAAN,OAAUjC,KAAK6I,MAAM5G,EAAY,KAAjC,KAEI,GAAN,OAAUA,MAuDcqG,GA3D1B,IAAyBrG,SA4Ef,qBAAKpH,UAAU,kBAAf,SACE,uBACEkC,IAAK,EACLF,IAAK,GACLC,KAAM,GACN7C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+N,WAAYhQ,EAAEZ,OAAOxD,SAC/CwF,MAAK,qBAAgB4O,EAAhB,YACL3O,KAAK,QACLzF,MAAOoU,WASN/T,WAAMiH,KAAKiN,ICzGpB1G,GAAQ,CACZ,CACEA,MAAO,CACL,CAAEqH,MAAO,sBAAuBnT,KAAM,qBACtC,CAAEmT,MAAO,OAAQnT,KAAM,QACvB,CAAEmT,MAAO,WAAYnT,KAAM,YAC3B,CAAEmT,MAAO,YAAanT,KAAM,aAC5B,CAAEmT,MAAO,QAASnT,KAAM,SACxB,CAAEmT,MAAO,aAAcnT,KAAM,cAC7B,CAAEmT,MAAO,kBAAmBnT,KAAM,mBAEpCmT,MAAO,WAET,CACErH,MAAO,CAAC,CAAEqH,MAAO,cAAenT,KAAM,gBACtCmT,MAAO,gBAET,CACErH,MAAO,CACL,CAAEqH,MAAO,gBAAiBnT,KAAM,gBAChC,CAAEmT,MAAO,iBAAkBnT,KAAM,iBACjC,CAAEmT,MAAO,mBAAoBnT,KAAM,mBACnC,CAAEmT,MAAO,UAAWnT,KAAM,WAC1B,CAAEmT,MAAO,QAASnT,KAAM,SACxB,CAAEmT,MAAO,eAAgBnT,KAAM,eAC/B,CAAEmT,MAAO,sBAAuBnT,KAAM,sBACtC,CAAEmT,MAAO,YAAanT,KAAM,aAC5B,CAAEmT,MAAO,OAAQnT,KAAM,QACvB,CAAEmT,MAAO,YAAanT,KAAM,aAC5B,CAAEmT,MAAO,YAAanT,KAAM,aAC5B,CAAEmT,MAAO,kBAAmBnT,KAAM,iBAClC,CAAEmT,MAAO,OAAQnT,KAAM,QACvB,CAAEmT,MAAO,gBAAiBnT,KAAM,gBAChC,CAAEmT,MAAO,cAAenT,KAAM,eAC9B,CAAEmT,MAAO,cAAenT,KAAM,eAEhCmT,MAAO,WAET,CACErH,MAAO,CACL,CAAEqH,MAAO,OAAQnT,KAAM,QACvB,CAAEmT,MAAO,kBAAmBnT,KAAM,kBAClC,CAAEmT,MAAO,eAAgBnT,KAAM,eAC/B,CAAEmT,MAAO,gBAAiBnT,KAAM,gBAChC,CAAEmT,MAAO,SAAUnT,KAAM,UAE3BmT,MAAO,eAET,CACErH,MAAO,CACL,CAAEqH,MAAO,WAAYnT,KAAM,WAC3B,CAAEmT,MAAO,aAAcnT,KAAM,cAC7B,CAAEmT,MAAO,WAAYnT,KAAM,WAC3B,CAAEmT,MAAO,UAAWnT,KAAM,UAC1B,CAAEmT,MAAO,WAAYnT,KAAM,YAE7BmT,MAAO,SAET,CACErH,MAAO,CACL,CAAEqH,MAAO,WAAYnT,KAAM,YAC3B,CAAEmT,MAAO,QAASnT,KAAM,UAE1BmT,MAAO,cAIX,SAASC,GAAT,GAA8C,IAAnBtS,EAAkB,EAAlBA,QACzB,OACE,oBAAIoE,UAAU,cAAd,SACG4G,GAAM3G,KAAI,SAAA4G,GAAI,OACb,+BACGA,EAAKoH,MACN,0CACCpH,EAAKD,OACJ,oBAAI5G,UAAU,kBAAd,SACG6G,EAAKD,MAAM3G,KAAI,SAAAkO,GAAO,OACrB,oBAAwBtV,QAAS,kBAAM+C,EAAQuS,EAAQrT,OAAvD,SACGqT,EAAQF,OADFE,EAAQF,cANhBpH,EAAKoH,YAkBP7U,WAAMiH,KAAK6N,ICxF1B,SAASE,GAAT,GAAkE,IAAlD9O,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KAClC,EAAsDc,EAA9C+H,YAAR,MAAe,EAAf,EAAkBjI,EAAoCE,EAApCF,SAAlB,EAAsDE,EAA1Bd,YAA5B,MAAmCkM,GAAWG,IAA9C,EACMtM,EAAK,gBAAY+M,GAAYjE,GAAM8E,QAAQ,GAAtC,OAGX,OAFAhB,GAAYtP,EAAI,CAAEwL,SAGhB,cAAC,GAAD,CAAMxL,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,QAASC,QAAS,CAAC,UAAWC,MAAOA,EAAOC,KAAM8G,EAAlF,SACGzE,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQZ,SAAU,SAAAiI,GAAI,OAAIjI,EAAS,CAAEiI,UAAS9I,MAAOA,EAAOC,KAAMA,EAAMzF,MAAOsO,MAEjF,qBAAKrH,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOyF,EAA/E,UACE,wBAAQzF,MAAO2R,GAAWzJ,OAA1B,SAAmCyJ,GAAWzJ,SAC9C,wBAAQlI,MAAO2R,GAAWG,IAA1B,SAAgCH,GAAWG,gBAS1CzR,WAAMiH,KAAK+N,IC1B1B,SAASC,GAAT,GAA8C,IAA9B/O,EAA6B,EAA7BA,KAAMzD,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KACxB,EAAmCc,EAA3BgP,YAAR,SAAsBlP,EAAaE,EAAbF,SAGhBtE,EAAOgP,GAAsBjO,EAAI,IAGvCxE,qBAAU,WAAWyD,EAAKiP,OAAOqB,gBAAgBkD,EAAO,EAAI,EAAGxT,EAAK5D,QAAQmU,YAAa,QAAQ,CAACvQ,EAAMwT,IAExG,IAAMC,EAAW5V,uBACf,SAACwE,GACK,WAAYA,GAAKA,EAAEqR,QAGvBpP,EAAS,CAAEkP,MAAM,MAEnB,CAAClP,IAEGqP,EAAY9V,uBAAY,kBAAMyG,EAAS,CAAEkP,MAAM,MAAU,CAAClP,IAEhE,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAM,OAAOC,KAAMA,EAAtD,SACE,qBAAKwB,UAAU,kBAAf,SACE,yBAAQ0O,YAAaH,EAAUI,UAAWF,EAAWG,UAAWL,EAAUM,QAASJ,EAAnF,qBACWH,EAAO,MAAQ,YAOnBlV,WAAMiH,KAAKgO,ICjBXS,OAVf,YAAiF,IAA/D/M,EAA8D,EAA9DA,QAA8D,IAArDgN,gBAAqD,MAA1C,MAA0C,MAAnCC,eAAmC,MAAzB,KAAyB,EAAnB5P,EAAmB,EAAnBA,SAC3D,OACE,wBAAOY,UAAU,SAAjB,UACE,uBAAO+B,QAASA,EAAS3C,SAAUA,EAAUZ,KAAK,aAClD,sBAAMwB,UAAU,SAAhB,SAA0BgP,IAC1B,sBAAMhP,UAAU,SAAhB,SAA0B+O,QCPhC,SAASE,GAAT,GAAyE,IAAlD3P,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KACzC,EAAkCc,EAA1BnE,aAAR,MAAgB,IAAhB,EAAqBiE,EAAaE,EAAbF,SAGfwM,EAAaT,GAAY,GAAD,OAAItP,EAAJ,WAAiB,IAEzCqT,EAAa/D,GAAY,GAAD,OAAItP,EAAJ,WAAiB,IACzCsT,EAAahE,GAAY,GAAD,OAAItP,EAAJ,WAAiB,IAG/CxE,qBAAU,WACR6X,EAAWhS,QAAQ0O,GACnBuD,EAAWjS,QAAQ0O,KAClB,CAACsD,EAAYC,EAAYvD,IAE5B,IAAMwD,EAAczW,uBAAY,kBAAMyG,EAAS,CAAEjE,MAAiB,MAAVA,EAAgB,IAAM,QAAQ,CAACiE,EAAUjE,IAuBjG,OAtBA9D,qBAAU,WACM,MAAV8D,GACF+T,EAAW7H,KAAK+D,gBAAgB,EAAG8D,EAAWhY,QAAQmU,YAAa,MACnE8D,EAAW9H,KAAK+D,gBAAgB,EAAG+D,EAAWjY,QAAQmU,YAAa,QAEnE6D,EAAW7H,KAAK+D,gBAAgB,EAAG8D,EAAWhY,QAAQmU,YAAa,MACnE8D,EAAW9H,KAAK+D,gBAAgB,EAAG+D,EAAWjY,QAAQmU,YAAa,SAEpE,CAAClQ,EAAO+T,EAAYC,IAGvB3R,GACE3B,GACA,iBAAO,CACLV,WAAO4B,EACPsS,EAAGH,EACHI,EAAGH,EACH9T,OAAQuQ,KAEV,CAACsD,EAAYC,EAAYvD,IAIzB,cAAC,GAAD,CAAM/P,GAAIA,EAAIwC,OAAQ,CAAC,IAAK,KAAMC,QAAS,CAAC,UAAWC,MAAK,iBAAYpD,GAASqD,KAAM8G,EAAvF,SACGzE,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQ+B,QAAmB,MAAV5G,EAAe4T,SAAS,IAAIC,QAAQ,IAAI5P,SAAUgQ,UAQhEhW,ICxDHmW,GAQAC,GDgDGpW,OAAMiH,KAAK4O,IC1DpBQ,GAAQ,CAAC,IAAK,UAAM,IAAK,UAAM,IAAK,IAAK,UAAM,IAAK,UAAM,IAAK,UAAM,KAwBpE,SAASC,GAAmBC,GACjC,GAAIA,EAAU,GAAKA,EAAU,GAC3B,MAAM,IAAIC,WAAJ,+CAAuDD,IAI1D,SAASE,GAAiBC,EAAgBH,IAZ1C,SAA2BG,GAChC,GAAIA,EAAS,GAAKA,EAAS,GACzB,MAAM,IAAIF,WAAJ,8CAAsDE,IAW9DC,CAAkBD,GAClBJ,GAAmBC,GAGnB,OADW,QACCxK,KAAKC,IAAI,EAAG0K,EAASH,EAAU,IAGtC,SAASK,GAAYL,GAG1B,OAFAD,GAAmBC,GAEZF,GAAME,I,SAvCHJ,O,MACF,U,QADEA,I,KAEH,U,OAFGA,I,QAGA,U,UAHAA,I,UAIE,U,YAJFA,I,MAKF,U,SALEA,Q,cAQAC,O,MACF,G,QADEA,I,KAEH,G,OAFGA,I,QAGA,G,UAHAA,I,MAIF,G,QAJEA,I,UAKE,I,aALFA,Q,KCAZ,IAAMS,GAAsC,CAC1CnL,QAAS,eACToL,UAAW,SACX7V,MAAO,SAEH8V,GAAiC,2BAClCF,IADkC,IAErCG,cAAe,QAEXC,GAAqC,2BACtCJ,IADsC,IAEzCK,UAAW,oBACXF,cAAe,UAGjB,SAASG,GAAT,GAAyE,IAAD,IAAxDC,gBAAwD,aAAtCrJ,cAAsC,MAA7B,EAA6B,EAA1B2I,EAA0B,EAA1BA,OAAQH,EAAkB,EAAlBA,QACpD,EAA2BK,GAAYL,GAASc,MAAM,IAAtD,mBAAO/P,EAAP,KAAagQ,EAAb,KACMtJ,EAAYyI,GAAiBC,EAAQH,GACrCgB,EAAmBvJ,EAAYjC,KAAKC,IAAI,EAAG+B,EAAS,MAE1D,OACE,iCACGzG,EACD,uBAAO3F,MAAOoV,GAAd,SAA6BL,IAC5BY,GAAc,uBAAO3V,MAAOsV,GAAd,SAAiCK,IAC/CF,GACC,4CAEE,sCACIpJ,EAAU+E,QAAQ,GADtB,MAEc,IAAXhF,GAAgB,gDAAWwJ,EAAiBxE,QAAQ,GAApC,SAFnB,aAUK/S,WAAMiH,KAAKkQ,ICvCpBK,I,MAAc,CAAC,GAAI,GAAI,GAAI,GAAI,KAKrC,SAASC,GAAT,GAAkD,IAA9BvR,EAA6B,EAA7BA,KAAMzD,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAC5B,EAA4Cc,EAApC4J,YAAR,MAAe,GAAf,IAA4C5J,EAAzBwQ,cAAnB,MAA4B,EAA5B,EAA+B1Q,EAAaE,EAAbF,SAGzB0R,EAAWhH,GAAsB,GAAD,OAAIjO,EAAJ,SAAe,IAC/CkV,EAAgBjH,GAAsB,GAAD,OAAIjO,EAAJ,cAAoB,IAEzDmV,EAAUrY,uBACd,SAACmX,EAAgBH,GACf,IAAQzY,EAAY6Z,EAAZ7Z,QACF+Z,EAAgBpB,GAAiBC,EAAQH,GAC/CoB,EAAchH,OAAOqB,gBAAgB6F,EAAe/Z,EAAQmU,YAAa,QAE3E,CAAC0F,IAEGG,EAAWvY,uBAAY,WAAYmY,EAAS/G,OAAOhR,MAAQ,IAAI,CAAC+X,IAChEK,EAAWxY,uBAAY,WAAYmY,EAAS/G,OAAOhR,MAAQ,IAAI,CAAC+X,IActE,OAXAtT,GACE3B,GACA,iBAAO,CACLuL,UAAW2J,EACXK,KAAMN,EACN3V,WAAO4B,EACP1B,YAAQ0B,KAEV,CAACgU,EAAeD,IAIhB,cAAC,GAAD,CAAMjV,GAAIA,EAAIyC,QAAS,CAAC,YAAa,QAASC,MAAK,WAAcC,KAAMA,EAAvE,SACE,sBAAKwB,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,qBAAKA,UAAU,WAAW0O,YAAawC,EAAUG,aAAcF,EAAUxC,UAAWwC,EAApF,SACGvI,MAAMM,GACJL,KAAK,MACL5I,KAAI,SAAC6H,EAAGwJ,GACP,IAAMC,IAAgBD,GA1Cb,GA0C4C,GAAM,IAAM,GAC3DE,EAAY1B,EAAS3K,KAAK6I,OAAOsD,GA3C9B,GA2C6D,IAChEG,EAAe,CAAC,EAAG,EAAG,EAAG,EAAG,IAAIpJ,SAASkJ,GA3C9C,gBACA,gBA4CD,OACE,wBACEvR,UAAWyR,EAEXC,aAAc,kBAAMV,EAAQQ,EAAWD,IAHzC,SAKE,cAAC,GAAD,CAAMzB,OAAQ0B,EAAW7B,QAAS4B,KALpC,UAEUC,EAFV,YAEuBD,WASjC,sBAAKvR,UAAU,kBAAf,UACE,uBACEgC,IAAK,EACLE,IAAK,EACL9C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE0Q,QAAS3S,EAAEZ,OAAOxD,SAC5CgC,MAAO,CAAEV,MAAO,OAChBkE,MAAM,SACNC,KAAK,SACLzF,MAAO+W,IAET,wBACE1Q,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE8J,MAAO/L,EAAEZ,OAAOxD,SAC1CgC,MAAO,CAAEV,MAAO,OAChBkE,MAAM,OACNxF,MAAOmQ,EAJT,SAMG0H,GAAY3Q,KAAI,SAAAiJ,GAAI,OACnB,wBAAmBnQ,MAAOmQ,EAA1B,SACGA,GADUA,gBAWZ9P,I,GAAAA,OAAMiH,KAAKwQ,ICxF1B,IAGMc,GAAS,WAAGC,OAAOC,wBAAV,UAA8B,EAK7C,SAASC,GAAU5a,EAAmC6a,GAEpD7a,EAAQ8a,aAAaL,GAAW,EAAG,EAAGA,GAAW,EAAG,GAGpDza,EAAQ0M,UAAY,UACpB1M,EAAQ+a,KAAO,aACf/a,EAAQ6M,YAAc,UACtB7M,EAAQgZ,UAAY,QACpBhZ,EAAQgb,aAAe,SACvBhb,EAAQib,OACRjb,EAAQ8a,aAAa,EAAG,EAAG,EAAG,EAAG,EAAG,GACpC9a,EAAQkb,UAAU,EAAG,EAAGlb,EAAQmM,OAAOhJ,MAAOnD,EAAQmM,OAAO/I,QAC7DpD,EAAQmb,UAGRzJ,MAtBc0J,IAuBXzJ,UAAK9L,GACLkB,SAAQ,SAAC6J,EAAGjB,GACX,IAAM0L,EAAc,CAAC,EAAG,EAAG,GAAI,GAAI,GAAI,GAAI,IAAIlK,SAASxB,GAClD2L,EAAcD,EAAc,EAAI,GAChCE,EAAaF,EAAc,EAAI,EAC/BG,EAAS,UA9BH,EA8BqB7L,GAE3B8L,EA3BG,EA2BM9L,EAAgB,IACzB+L,EAAQC,IAAaN,EAAc,EAAI,GAGvCO,EAAQH,EAEVJ,GACFrb,EAAQ6b,SAASL,EAJLM,GAIuBF,GAGrC5b,EAAQ4M,UAAY0O,EACpBtb,EAAQ2M,SAZO,EAYW+O,EAAOD,EATnB,EASmCF,EAAYD,MAIjET,EAAO9T,SAAQ,SAACgV,EAAOC,GACrBtK,MA9CY0J,IA+CTzJ,UAAK9L,GACLkB,SAAQ,SAAC6J,EAAGjB,GACX,ICnDoBsM,EDmDdC,EAnDI,EAmDmBvM,EACvBwM,EAAMlO,KAAKnD,IAAImD,KAAKjD,IAAI,KCpDViR,EDoD4BhO,KAAKjD,IAAI,GAAIkR,EAAW,ICnDvEjO,KAAK8F,MAAM,EAAQ,EAAJkI,IDmD8D,GAAI,KAAKhH,QAAQ,GACzFmH,EAAYhI,GAAY2H,IAAUG,EAAW,MAAQ,KAE3Dlc,EAAQ0M,UAAR,cAA2ByP,EAA3B,kBAAwCC,EAAxC,KACApc,EAAQ2M,SAAS,IAACqP,EAAa,GApDrB,EACH,EAmD8DrM,EAAgB,EAlD/E,GADC,SA4Df,SAAS0M,GAAT,GAAyC,IAAxB1X,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KACb2E,EAAYzJ,iBAA0B,MACtC8Z,EAAY9Z,iBAAiB,IACnC,EAAgC3C,mBAAS,GAAzC,mBAAO0c,EAAP,KAAiBC,EAAjB,KAGMC,EAAc,IAAuBF,EAAW,GAEhD3Y,EAAOwF,GAAoBzE,EAAI,kBAAmB,CAAE0N,gBAAiB,IAErEqK,EAAgBjb,uBACpB,YAA+D,IAAtDiH,EAAqD,EAA3DN,KACkB,aAAfM,EAAMpB,MACJoB,EAAMiU,QAAQJ,WAAaA,GAC7BC,EAAY9T,EAAMiU,QAAQJ,UAIX,UAAf7T,EAAMpB,OACRgV,EAAU5Z,QAAQgG,EAAMiU,QAAQ/K,SAAWlJ,EAAMiU,QAAQZ,SAG7D,CAACQ,IAkBH,OAhBApc,qBAAU,WACRyD,EAAKU,KAAKsY,UAAYF,IACrB,CAAC9Y,EAAM8Y,IAYVzR,GAVaxJ,uBAAY,WACvB,IAAM0K,EAASF,EAAUvJ,QACnB1C,EAAO,OAAGmM,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MAC9BD,GAAWnM,GAIhB4a,GAAU5a,EAASsc,EAAU5Z,QAAQma,MAAM,EAAGN,MAC7C,CAACA,KAKF,cAAC,GAAD,CAAM5X,GAAIA,EAAIwC,OAAQ,CAAC,SAAUE,MAAM,QAAQC,KAAMA,EAArD,SACE,qBAAKwB,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,wBACEnF,IAAKsI,EACL9I,MAAOsX,GAAYgC,EACnBrZ,OA1CW0Z,IA0CHrC,GACR5W,MAAO,CAAET,OA3CE0Z,IA2CoB3Z,MAAOsZ,WAQnCva,WAAMiH,KAAKkT,I,QE1HpBU,I,MAAiC,CACrCC,WAAY,UACZC,SAAU,GACV7Z,OAAQ,GACR8Z,WAAY,EACZC,QAAS,EACTha,MAAO,KAGT,SAASia,GAAT,GAAuE,IAAlDhV,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KACvC,EAA6Fc,EAArFiV,uBAAR,MAA0B,EAA1B,IAA6FjV,EAAhEkV,sBAA7B,MAA8C,IAA9C,IAA6FlV,EAA1CmV,aAAnD,MAA2D,CAACjF,GAAUkF,SAAtE,EAAgFtV,EAAaE,EAAbF,SAG1EtE,EAAO0C,GACX3B,GACA,SAAA3E,GACE,IADS,EACHyd,EAA+B,GAAKH,EAEpCI,EAA2BD,EAA+BJ,EAE1DrO,EAAShP,EAAQ2d,aAAa,EAAG3d,EAAQ2Q,WAAa+M,EAA0B1d,EAAQ2Q,YACxFiB,EAAU5C,EAAO4O,eAAe,GAN7B,eAOQL,GAPR,IAOT,2BAQE,IARuB,IAAhBM,EAAe,QAChBC,EAAyBL,EAA+BnF,GAAUkF,QAAWK,EAC7EE,EAAwB/d,EAAQ2Q,WAAamN,EAC7C/D,EARqB,IAQmB8D,EAAQvF,GAAUkF,QAC1DQ,EAAmBX,EAAkBQ,EAAQvF,GAAUkF,QAEzDS,EAAQ,EACR9N,EAAO,EACFnD,EAAI,EAAGA,EAAIgR,EAAiBhR,IACnC,IAAK,IAAIkR,EAAI,EAAGA,EAAIH,EAAuBG,IAAK,CAC9C,IACMhO,EADqB,IAANlD,EAC4B,KAAhB+M,EAAuBA,EAClDoE,EAASD,EAAIjQ,KAAK6I,MAAM9J,EAAI+Q,GAC5BK,EAAU,EAAIb,EAAM/Q,OACpB6R,EAAapQ,KAAKnD,IAAIsT,EAASF,GAA0B,KAArBle,EAAQ2Q,aAElDiB,EAAQuM,IAAWlQ,KAAKqQ,IAAIL,GAAS9N,EACrC8N,GAAiB,EAAIhQ,KAAK4G,GAAK3E,EAAalQ,EAAQ2Q,WACpDR,EAAOlC,KAAKjD,IAAIqT,EAAaH,EAAIH,EAAuB,IAzBrD,8BA8BT,IAAM3Y,EAASpF,EAAQ+O,qBAKvB,OAJA3J,EAAO4J,OAASA,EAChB5J,EAAOqJ,MAAO,EACdrJ,EAAOmZ,QAAUb,EAEVtY,IAET,CAACiY,EAAiBE,EAAM/Q,OAAQ8Q,IAGlCnd,qBAAU,WAER,OADAyD,EAAKkL,QACE,kBAAMlL,EAAKM,UACjB,CAACN,IAEJ,IAAM4a,EAAa/c,uBACjB,SAAAoc,GAAI,OAAI3V,EAAS,CAAEqV,MAAOA,EAAMpM,SAAS0M,GAAQN,EAAM1W,QAAO,SAAC4X,GAAD,OAAeA,IAAMZ,KAAQN,EAAM7G,OAAOmH,OACxG,CAACN,EAAOrV,IAGV,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,qBAAgBiW,EAAhB,QAAsChW,KAAM8G,EAApF,SACGzE,GACC,sBAAKb,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEkC,IAAK,IACLF,IAAK,GACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEoV,gBAAiBrX,EAAEZ,OAAOxD,SACpDwF,MAAM,mBACNC,KAAK,SACLzF,MAAOyb,IAET,uBACEtS,IAAK,EACLF,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEmV,iBAAkBpX,EAAEZ,OAAOxD,SACrDwF,MAAM,oBACNC,KAAK,SACLzF,MAAOwb,OAGX,qBAAKvU,UAAU,kBAAf,SACE,sBAAMjF,MAAO,CAAEgO,WAAY,SAAUjE,QAAS,OAAQS,eAAgB,iBAAtE,SACG,CAACiK,GAAUoG,MAAOpG,GAAUqG,KAAMrG,GAAUkF,QAASlF,GAAUsG,MAAOtG,GAAUuG,WAAW9V,KAAI,SAAA8U,GAAI,OAClG,wBAEElc,QAAS,kBAAM6c,EAAWX,IAC1Bha,MAAK,2BAAOkZ,IAAP,IAAkB+B,MAAOvB,EAAMpM,SAAS0M,GAAQ,OAAS,SAC9DxW,MAAK,UAAKiR,GAAUuF,GAAf,SAJP,SAMGxF,GAAWC,GAAUuF,KALjBA,eAgBR3b,IClHH6c,GDkHG7c,OAAMiH,KAAKiU,IE5G1B,SAAS4B,GAAT,GAAmE,IAAlD5W,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KAC3BY,EAAqCE,EAArCF,SAAR,EAA6CE,EAA3Bd,YAAlB,MAAyByX,GAAUE,MAAnC,EAGA,OAFA7V,GAAoBzE,EAAI,kBAAmB,CAAE4J,eAAgB,EAAGnE,iBAAkB,CAAE9C,SAAU,CAACA,IAG7F,cAAC,GAAD,CAAM3C,GAAIA,EAAIyC,QAAS,CAAC,UAAWC,MAAK,iBAAYC,GAAQA,KAAM8G,EAAlE,SACGzE,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOyF,EAA/E,UACE,wBAAQzF,MAAOkd,GAAUE,MAAzB,SAAiCF,GAAUE,QAC3C,wBAAQpd,MAAOkd,GAAUG,KAAzB,SAAgCH,GAAUG,OAC1C,wBAAQrd,MAAOkd,GAAUI,MAAzB,SAAiCJ,GAAUI,kB,SDlB7CJ,K,cAAAA,E,YAAAA,E,eAAAA,Q,KC2BG7c,WAAMiH,KAAK6V,ICtB1B,SAASI,GAAT,GAA2C,IAAxBza,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGrB,OAFA8B,GAAoBzE,EAAI,sBAEjB,cAAC,GAAD,CAAMA,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,IAGxEpF,WAAMiH,KAAKiW,ICN1B,SAASC,GAAT,GAA0C,IAAxB1a,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGpB,OAFA8B,GAAoBzE,EAAI,oBAAqB,CAAE4J,eAAgB,IAExD,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,WAAWC,KAAMA,IAGpFpF,WAAMiH,KAAKkW,ICeXC,OAhBf,SAA2B3a,EAA3B,GAAiG,IAAD,IAAvDsL,cAAuD,MAA9C,EAA8C,MAA3CC,iBAA2C,MAA/B,IAA+B,MAA1B5I,YAA0B,MAAnB,OAAmB,EAExF1D,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQuf,sBAW5C,OAVApf,qBAAU,WAER,OADAyD,EAAKkL,QACE,kBAAMlL,EAAKM,UACjB,CAACN,IAGJzD,qBAAU,WAAYyD,EAAKqM,OAAOpO,MAAQoO,IAAS,CAACrM,EAAMqM,IAC1D9P,qBAAU,WAAYyD,EAAKsM,UAAUrO,MAAQqO,IAAY,CAACtM,EAAMsM,IAChE/P,qBAAU,WAAYyD,EAAK0D,KAAOA,IAAO,CAAC1D,EAAM0D,IAEzC1D,GClBT,SAAS4b,GAAT,GAAwE,IAAlDpX,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KACxC,EAAiEc,EAAzD6H,cAAR,MAAiB,EAAjB,IAAiE7H,EAA7C8H,iBAApB,MAAgC,IAAhC,EAAqChI,EAA4BE,EAA5BF,SAArC,EAAiEE,EAAlBd,YAA/C,MAAsD,OAAtD,EACMmS,EAAmBvJ,EAAYjC,KAAKC,IAAI,EAAG+B,EAAS,MAG1D,OAFAqP,GAAkB3a,EAAI,CAAEsL,SAAQC,YAAW5I,SAGzC,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,SAAU,aACnBC,QAAS,CAAC,UACVC,MAAK,UAAKoS,EAAiBxE,QAAQ,GAA9B,eAAuC3N,GAC5CA,KAAM8G,EALR,SAOGzE,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEkC,IAAK,IACLF,KAAM,IACN5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+H,QAAShK,EAAEZ,OAAOxD,SAC5CkJ,KAAM,EACNlH,MAAO,CAAEV,MAAO,QAChBkE,MAAK,kBAAa4I,EAAb,UACL3I,KAAK,QACLzF,MAAOoO,MAGX,qBAAKnH,UAAU,kBAAf,SACE,uBACEkC,IAAK,IACLF,IAAK,EACL5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEgI,WAAYjK,EAAEZ,OAAOxD,SAC/CwF,MAAM,YACNC,KAAK,SACLzF,MAAOqO,MAGX,qBAAKpH,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOyF,EAA/E,UACE,wBAAQzF,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASCK,WAAMiH,KAAKqW,ICjD1B,SAASC,GAAT,GAA4E,IAAlDrX,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KAC5C,EAAyEc,EAAjE6H,cAAR,MAAiB,EAAjB,IAAyE7H,EAArDwQ,cAApB,MAA6B,EAA7B,EAAgC1Q,EAAyCE,EAAzCF,SAAhC,EAAyEE,EAA/BqQ,eAA1C,MAAoD,EAApD,IAAyErQ,EAAlBd,YAAvD,MAA8D,OAA9D,EACM4I,EAAYyI,GAAiBC,EAAQH,GAG3C,OAFA6G,GAAkB3a,EAAI,CAAEsL,SAAQC,YAAW5I,SAGzC,cAAC,GAAD,CACE3C,GAAIA,EACJwC,OAAQ,CAAC,UACTC,QAAS,CAAC,UACVC,MAAO,cAAC,GAAD,CAAMiS,UAAQ,EAACrJ,OAAQA,EAAQ2I,OAAQA,EAAQH,QAASA,IAC/DnR,KAAM8G,EALR,SAOGzE,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,uBACEkC,IAAK,IACLF,KAAM,IACN5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE+H,QAAShK,EAAEZ,OAAOxD,SAC5CkJ,KAAM,EACNlH,MAAO,CAAEV,MAAO,QAChBkE,MAAK,kBAAa4I,EAAb,UACL3I,KAAK,QACLzF,MAAOoO,MAGX,sBAAKnH,UAAU,kBAAf,UACE,wBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEuQ,SAAUxS,EAAEZ,OAAOxD,SAC7CgC,MAAO,CAAEV,MAAO,OAChBkE,MAAM,OACNxF,MAAO4W,EAJT,SAMG/G,MAAM,IACJC,KAAK,GACL5I,KAAI,SAAC6H,EAAG6H,GAAJ,OACH,wBAAsB5W,MAAO4W,EAA7B,SACGK,GAAYL,IADFA,QAKnB,wBACEvQ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE0Q,QAAS3S,EAAEZ,OAAOxD,SAC5CgC,MAAO,CAAEV,MAAO,OAChBkE,MAAM,SACNxF,MAAO+W,EAJT,SAMGlH,MAAM,IACJC,KAAK,GACL5I,KAAI,SAAC6H,EAAGgI,GAAJ,OACH,wBAAqB/W,MAAO+W,EAA5B,SACGA,GADUA,WAMrB,qBAAK9P,UAAU,kBAAf,SACE,yBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEZ,KAAMrB,EAAEZ,OAAOxD,SACzCgC,MAAO,CAAEV,MAAO,QAChBkE,MAAM,OACNxF,MAAOyF,EAJT,UAME,wBAAQzF,MAAM,WAAd,sBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,WAAd,gCASCK,WAAMiH,KAAKsW,IC5E1B,SAASC,GAAT,GAA0E,IAAlDtX,EAAiD,EAAjDA,KAAMzD,EAA2C,EAA3CA,GAAIgF,EAAuC,EAAvCA,SAAgByE,EAAuB,EAA7B9G,KAClCY,EAA2BE,EAA3BF,SAAR,EAAmCE,EAAjBjE,cAAlB,MAA2B,IAA3B,EAGMsQ,EAAYR,GAAY,GAAD,OAAItP,EAAJ,UAAgB,IAEvCgb,EAAc1L,GAAY,GAAD,OAAItP,EAAJ,YAAkB,IAC3Cib,EAAc3L,GAAY,GAAD,OAAItP,EAAJ,YAAkB,IAGjDxE,qBAAU,WACRsU,EAAUzO,QAAQ2Z,GAClBlL,EAAUzO,QAAQ4Z,KACjB,CAACnL,EAAWkL,EAAaC,IAE5B,IAAMC,EAAepe,uBAAY,kBAAMyG,EAAS,CAAE/D,OAAmB,MAAXA,EAAiB,IAAM,QAAQ,CAAC+D,EAAU/D,IAuBpG,OAtBAhE,qBAAU,WACO,MAAXgE,GACFwb,EAAYxP,KAAK+D,gBAAgB,EAAGyL,EAAY3f,QAAQmU,YAAa,MACrEyL,EAAYzP,KAAK+D,gBAAgB,EAAG0L,EAAY5f,QAAQmU,YAAa,QAErEwL,EAAYxP,KAAK+D,gBAAgB,EAAGyL,EAAY3f,QAAQmU,YAAa,MACrEyL,EAAYzP,KAAK+D,gBAAgB,EAAG0L,EAAY5f,QAAQmU,YAAa,SAEtE,CAAChQ,EAAQwb,EAAaC,IAGzBtZ,GACE3B,GACA,iBAAO,CACLV,MAAOwQ,EACP0D,EAAGwH,EACHvH,EAAGwH,EACHzb,YAAQ0B,KAEV,CAAC4O,EAAWkL,EAAaC,IAIzB,cAAC,GAAD,CAAMjb,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,IAAK,KAAMC,MAAK,kBAAalD,GAAUmD,KAAM8G,EAAxF,SACGzE,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,GAAD,CAAQ+B,QAAoB,MAAX1G,EAAgB0T,SAAS,IAAIC,QAAQ,IAAI5P,SAAU2X,UAQjE3d,WAAMiH,KAAKuW,ICrD1B,SAASI,GAAT,GAA6D,IAAxC1X,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACvC,EAAsDc,EAA9CyS,cAAR,MAAiB,IAAjB,IAAsDzS,EAAhC4C,WAAtB,MAA4B,EAA5B,IAAsD5C,EAAvB0C,WAA/B,OAAsC,EAAtC,EAAyC5C,EAAaE,EAAbF,SAGzC,OAFAkB,GAAoBzE,EAAI,sBAAuB,CAAEyF,iBAAkB,CAAEyQ,SAAQ7P,MAAKF,QAAS,CAAC+P,EAAQ7P,EAAKF,IAGvG,cAAC,GAAD,CAAMnG,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,EAA9E,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,qBAAKA,UAAU,kBAAkBjF,MAAO,CAAEV,MAAO,KAAjD,SACE,uBACE+E,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE2S,QAAS5U,EAAEZ,OAAOxD,SAC5CkJ,KAAM,EACN1D,MAAM,SACNC,KAAK,SACLzF,MAAOgZ,MAGX,sBAAK/R,UAAU,kBAAkBjF,MAAO,CAAEV,MAAO,KAAjD,UACE,uBACE+E,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE4C,KAAM7E,EAAEZ,OAAOxD,SACzCkJ,KAAM,EACNlH,MAAO,CAAEV,MAAO,OAChBkE,MAAM,MACNC,KAAK,SACLzF,MAAOiJ,IAET,uBACE5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE8C,KAAM/E,EAAEZ,OAAOxD,SACzCgC,MAAO,CAAEV,MAAO,OAChB4H,KAAM,EACN1D,MAAM,OACNC,KAAK,SACLzF,MAAOmJ,YASN9I,IC9CHmH,GD8CGnH,OAAMiH,KAAK2W,IExC1B,SAASA,GAAT,GAA6D,IAAxC1X,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACvC,EAA2Cc,EAAnC0B,YAAR,MAAeT,GAAK0W,SAApB,EAA8B7X,EAAaE,EAAbF,SAG9B,OAFAkB,GAAoBzE,EAAI,sBAAuB,CAAEyF,iBAAkB,CAAEN,SAAU,CAACA,IAG9E,cAAC,GAAD,CAAMnF,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,EAA9E,SACGqC,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE4B,KAAM7D,EAAEZ,OAAOxD,SAAUwF,MAAM,OAAOxF,MAAOiI,EAA/E,UACE,wBAAQjI,MAAOwH,GAAK2W,SAApB,SAA+B3W,GAAK2W,WACpC,wBAAQne,MAAOwH,GAAK0W,SAApB,SAA+B1W,GAAK0W,qB,SDjBtC1W,K,qBAAAA,E,sBAAAA,Q,KC0BGnH,IC1BHoH,GD0BGpH,OAAMiH,KAAK2W,IEnB1B,SAASG,GAAT,GAAiD,IAAxBtb,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KACrB6C,EAAcf,GAAoB,GAAD,OAAIzE,EAAJ,YAAkB,6BAYzD,OAVA2B,GACE3B,GACA,2CACG2E,GAAW4W,SAAW/V,EAAYG,WAAWC,IAAIjB,GAAW4W,WAD/D,sBAES/V,GAFT,uBAGUA,GAHV,IAKA,CAACA,IAGI,cAAC,GAAD,CAAMxF,GAAIA,EAAIwC,OAAQ,CAAC,QAASmC,GAAW4W,UAAW9Y,QAAS,CAAC,UAAWC,MAAM,cAAcC,KAAMA,ICf9G,SAAS6Y,GAAT,GAAwC,IAAxBxb,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGlB,OAFA8B,GAAoBzE,EAAI,kBAEjB,cAAC,GAAD,CAAMA,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,OAAOC,KAAMA,K,SFRtEgC,K,qBAAAA,Q,KGiBG8W,OAVf,SAA6Bzb,EAA7B,GAAgE,IAAD,IAApB0b,WAAoB,MAAd,EAAc,EAEvDzc,EAAO0C,GAAQ3B,GAAI,SAAA3E,GAAO,OAAIA,EAAQsgB,wBAK5C,OAFAngB,qBAAU,WAAYyD,EAAKyc,IAAIxe,MAAQwe,IAAM,CAACzc,EAAMyc,IAE7Czc,GCTT,SAAS2c,GAAT,GAAgE,IAAxCnY,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAC1C,EAA8Bc,EAAtBiY,WAAR,MAAc,EAAd,EAAiBnY,EAAaE,EAAbF,SACXb,EAAK,kBAAc4G,KAAKoG,IAAU,IAANgM,GAAWpL,QAAQ,GAA1C,aAAiDoL,EAAM,EAAI,QAAUA,EAAM,EAAI,OAAS,IAGnG,OAFAD,GAAoBzb,EAAI,CAAE0b,QAGxB,cAAC,GAAD,CAAM1b,GAAIA,EAAIwC,OAAQ,CAAC,QAAS,OAAQC,QAAS,CAAC,UAAWC,MAAOA,EAAOC,KAAMA,EAAjF,SACGqC,GACC,qBAAKb,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,uBACEkC,IAAI,IACJF,IAAI,KACJ5C,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEmY,KAAMpa,EAAEZ,OAAOxD,SACzCkJ,KAAK,OACL1D,MAAOA,EACPC,KAAK,QACLzF,MAAOwe,UASNne,IC1BTse,GAAa,CACjBrd,MAAO,IAGT,SAASsd,GAAT,GAA+D,IAAxCrY,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KACzC,EAAgFc,EAAxEsY,gBAAR,MAAmB,EAAnB,IAAgFtY,EAA1DuY,gBAAtB,OAAkC,EAAlC,EAAqCzY,EAA2CE,EAA3CF,SAArC,EAAgFE,EAAjCwY,iBAA/C,MAA2D,EAA3D,IAAgFxY,EAAlByY,iBAA9D,MAA0E,EAA1E,EAeA,OAdAzX,GACEzE,EACA,wBACA,CACEyF,iBAAkB,CAChBuW,WACAD,WACAG,YACAD,cAGJ,CAACD,EAAUD,EAAUG,EAAWD,IAIhC,cAAC,GAAD,CAAMjc,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWC,MAAM,cAAcC,KAAMA,EAAhF,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAf,UACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEyY,UAAW1a,EAAEZ,OAAOxD,SAC9CgC,MAAO2c,GACPnZ,MAAK,YACLC,KAAK,SACLzF,MAAO8e,IAET,0CACA,uBACEzY,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE2Y,WAAY5a,EAAEZ,OAAOxD,SAC/CgC,MAAO2c,GACPnZ,MAAK,aACLC,KAAK,SACLzF,MAAOgf,OAGX,sBAAK/X,UAAU,kBAAf,UACE,uBACEZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEwY,UAAWza,EAAEZ,OAAOxD,SAC9CgC,MAAO2c,GACPnZ,MAAK,YACLC,KAAK,SACLzF,MAAO6e,IAET,0CACA,uBACExY,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAE0Y,WAAY3a,EAAEZ,OAAOxD,SAC/CgC,MAAO2c,GACPnZ,MAAK,aACLC,KAAK,SACLzF,MAAO+e,YC5CrB,SAASlO,GAAT,GAA8D,IAAD,EAAvCtK,EAAuC,EAAvCA,KAAMzD,EAAiC,EAAjCA,GAAIgF,EAA6B,EAA7BA,SAAUrC,EAAmB,EAAnBA,KAChCY,EAAyBE,EAAzBF,SAAUsK,EAAepK,EAAfoK,WAClB,EAA8B3S,mBAAQ,UAACuI,EAAK0Y,eAAN,QAXxB,6OAWd,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAgDlhB,mBAASihB,GAAzD,mBAAOE,EAAP,KAAyBC,EAAzB,KAEMjhB,EAAUgC,qBAAWvC,GACrB8S,EAAQtS,mBAAQ,WACpB,IAAMsS,EAAQ,IAAI7B,aAAa1Q,EAAQ2Q,YAEvC,OAAO,IAAIuQ,SAAS,QAASF,EAAtB,CAAwCzO,KAC9C,CAACvS,EAAQ2Q,WAAYqQ,IAGxB1O,GAAkB3N,EAAI,CAAE4N,QAAOC,eAE/B,IAAM2O,EAAc1f,uBAAY,WAC9B,IAEE,IAAIyf,SAAS,QAASJ,EAAtB,CAA+B,IAAIpQ,aAAa1Q,EAAQ2Q,aAExDsQ,EAAoBH,GACpB5Y,EAAS,CAAE4Y,YACX,MAAO7a,GACPC,QAAQC,MAAMF,MAEf,CAACjG,EAAQ2Q,WAAYmQ,EAAS5Y,IAEjC,OACE,cAAC,GAAD,CAAMvD,GAAIA,EAAIwC,OAAQ,CAAC,SAAUC,QAAS,CAAC,UAAWE,KAAMA,EAA5D,SACGqC,GACC,sBAAKb,UAAU,2BAAf,UACE,sBAAKA,UAAU,kBAAkBjF,MAAO,CAAEud,SAAU,QAApD,UACE,0BACElZ,SAAU,SAAAjC,GAAC,OAAI8a,EAAW9a,EAAEZ,OAAOxD,QACnCwf,KAAM,EACNxd,MAAO,CAAEV,MAAO,QAChBkE,MAAM,iBACNxF,MAAOif,IAET,wBAAQnf,QAASwf,EAAjB,qBAEF,qBAAKrY,UAAU,kBAAf,SACE,yBAAQZ,SAAU,SAAAjC,GAAC,OAAIiC,EAAS,CAAEsK,WAAYvM,EAAEZ,OAAOxD,SAAUwF,MAAM,aAAaxF,MAAO2Q,EAA3F,UACE,wBAAQ3Q,MAAM,OAAd,kBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,0BCxDd,SAASyf,GAAT,GAA2C,IAAxB3c,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KAGrB,OAFA8B,GAAoBzE,EAAI,qBAAsB,CAAE4J,eAAgB,IAEzD,cAAC,GAAD,CAAM5J,GAAIA,EAAIwC,OAAQ,CAAC,UAAW,WAAYC,QAAS,CAAC,UAAWC,MAAM,YAAYC,KAAMA,ICqCpG,SAASia,GAAT,GAAyC,IAAxB5c,EAAuB,EAAvBA,GAAI2C,EAAmB,EAAnBA,KACb2E,EAAYzJ,iBAA0B,MAC5CrC,qBAAU,WACR,IAAMgM,EAASF,EAAUvJ,QACnB1C,EAAO,OAAGmM,QAAH,IAAGA,OAAH,EAAGA,EAAQC,WAAW,MAC9BD,GAAWnM,GA5CpB,SAAkBA,GAChB,IAAMoD,EAASpD,EAAQmM,OAAO/I,OACxBD,EAAQnD,EAAQmM,OAAOhJ,MAE7BnD,EAAQkb,UAAU,EAAG,EAAG/X,EAAOC,GAC/BpD,EAAQwhB,YAAY,CAAC,EAAG,IACxBxhB,EAAQ0M,UAAY,UACpB1M,EAAQ+a,KAAO,iBACf/a,EAAQ4M,UAAY,EACpB5M,EAAQ6M,YAAc,UACtB7M,EAAQgZ,UAAY,SACpBhZ,EAAQgb,aAAe,SAEvBhb,EAAQ8M,YACR9M,EAAQ+M,OAAO,GAAI3J,EAAS,GAC5BpD,EAAQiN,OAAO9J,EAAQ,GAAIC,EAAS,GACpCpD,EAAQkN,SACRlN,EAAQgR,YACRhR,EAAQ6b,SAAS,IAAK1Y,EAAQ,EAAG,IACjCnD,EAAQ6b,SAAS,KAAM1Y,EAAQ,EAAGC,EAAS,IAE3CpD,EAAQ8M,YACR9M,EAAQ+M,OAAO5J,EAAQ,EAAG,IAC1BnD,EAAQiN,OAAO9J,EAAQ,EAAGC,EAAS,IACnCpD,EAAQkN,SACRlN,EAAQgR,YACRhR,EAAQ6b,SAAS,IAAK1Y,EAAQ,GAAIC,EAAS,GAC3CpD,EAAQ6b,SAAS,KAAM,GAAIzY,EAAS,GAqBlCqe,CAASzhB,KACR,IAGH,IAAM4Z,EAAWhH,GAAsB,GAAD,OAAIjO,EAAJ,SAAe,IAC/C+c,EAAQ9O,GAAsB,GAAD,OAAIjO,EAAJ,MAAY,IACzCgd,EAAQ/O,GAAsB,GAAD,OAAIjO,EAAJ,MAAY,IAEzCid,EAAQngB,uBACZ,YAAyC,IAAtC6G,EAAqC,EAArCA,EAAGE,EAAkC,EAAlCA,EACJkZ,EAAM7O,OAAOqB,gBAAgB5L,EAAGoZ,EAAM1hB,QAAQmU,YAAa,MAC3DwN,EAAM9O,OAAOqB,gBAAgB1L,EAAGmZ,EAAM3hB,QAAQmU,YAAa,QAE7D,CAACuN,EAAOC,IAEJE,EAASpgB,uBAAY,WAAYmY,EAAS/G,OAAOhR,MAAQ,IAAI,CAAC+X,IAC9DkI,EAAUrgB,uBAAY,WAAYmY,EAAS/G,OAAOhR,MAAQ,IAAI,CAAC+X,IAerE,OAZAtT,GACE3B,GACA,iBAAO,CACLuV,KAAMN,EACN3V,WAAO4B,EACP1B,YAAQ0B,EACRyC,EAAGoZ,EACHlZ,EAAGmZ,KAEL,CAAC/H,EAAU8H,EAAOC,IAIlB,cAAC,GAAD,CAAMhd,GAAIA,EAAIyC,QAAS,CAAC,IAAK,IAAK,QAASC,MAAK,SAAYC,KAAMA,EAAlE,SACE,qBAAKwB,UAAU,2BAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,wBACEnF,IAAKsI,EACL7I,OAAQ,IACR2e,YAAa,SAAArZ,GAAK,OAAIkZ,EAxDlC,SAAelZ,GACb,IACMsZ,EADStZ,EAAMrD,OACDhC,wBAIpB,MAAO,CAAEiF,GAHEI,EAAMG,QAAUmZ,EAAKhf,KAAOgf,EAAK7e,MAAQ,IAAM6e,EAAK7e,MAAQ,GAG3DqF,IAFAE,EAAME,QAAUoZ,EAAKjf,IAAMif,EAAK5e,OAAS,IAAM4e,EAAK5e,OAAS,IAoDnC6e,CAAMvZ,KAClC7E,MAAO,CAAEiE,WAAY,QAASoa,OAAQ,YAAa9e,OAAQ,IAAKD,MAAO,KACvEA,MAAO,IACPqU,YAAaqK,EACbpK,UAAWqK,UAQR5f,IC7CTigB,GAAY,CAChBzY,KAAMA,GACNyE,SAAUA,GACVG,QAASA,GACTE,kBAAmBA,GACnBgC,aAAcA,GACdiB,cAAeA,GACfW,gBAAiBA,GACjBgQ,QAASA,GACTzP,WAAYA,GACZI,eAAgBA,GAChBM,MAAOA,GACPiB,YAAaA,GACbc,YAAaA,GACbQ,mBAAoBA,GACpBQ,UAAWA,GACXc,KAAMA,GACNC,KAAMA,GACNY,YAAaA,GACb4B,SAAUA,GACV0C,MAAOA,GACPe,UAAWA,GACX4B,MAAOA,GACPI,QAASA,GACTC,OAAQA,GACRG,WAAYA,GACZC,eAAgBA,GAChBC,aAAcA,GACd2C,UAAWA,GACXvC,UAAWA,GACXG,cRlEa/d,IAAMiH,KAAK8W,IQmExBE,KP/Eaje,IAAMiH,KAAKgX,IOgFxBI,aL5Dare,IAAMiH,KAAKoX,IK6DxBE,YJvBave,IAAMiH,KAAKsX,IIwBxB/N,WHvBaxQ,IAAMiH,KAAKuJ,IGwBxB4O,QFnFapf,IAAMiH,KAAKmY,IEoFxBC,MDSarf,IAAMiH,KAAKoY,KCN1B,SAASe,GAAiBC,GACxB,OAAKA,EAAOnd,OAIL2M,OAAOyQ,OAAO,GAAID,EAAQ,CAC/B1e,MAAO,CACLqJ,OAAO,IAAD,OAAMqV,EAAOnd,OAAO2C,QAAQ,OAL7Bwa,E,SAUIE,G,mFAAf,WAAmCC,EAA2BC,GAA9D,eAAAtiB,EAAA,sDACQuiB,EAAuBF,EAAgB7b,OAAOgc,KAAQlM,QAAgC,SAACmM,EAAShc,GAGpG,OAFAgc,EAAQhc,EAAK1B,SAAU,EACvB0d,EAAQhc,EAAKzB,SAAU,EAChByd,IACN,IALL,WAMS/Q,OAAOC,KAAK4Q,GAAsBpW,OAN3C,uBAOIuF,OAAOC,KAAK2Q,GAAY5b,SAAQ,SAAAgc,UACvBH,EAAqBG,MARlC,SAUU,IAAIxiB,SAAQ,SAAAyiB,GAAO,OAAIC,WAAWD,EAAS,MAVrD,kE,sBAcO,IAAMza,GAAY,GAEzB,SAAS2a,GAAW7a,GAClB,OAAO4F,KAAK6I,MAAMzO,EAAWE,IAAaA,GAG5C,SAAS4a,KACP,MAAmFlc,KAA3EO,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,uBAAwBC,EAA1C,EAA0CA,YAAaoT,EAAvD,EAAuDA,aAAc1B,EAArE,EAAqEA,UAC/DzR,EAAc5F,IACL4gB,EAAetc,KAAtB5B,MACR,EAA8C5E,mBAAsC,MAApF,mBAAOujB,EAAP,KAAwBC,EAAxB,KAEMC,EnE1CD,WACL,IAAQ1e,EAAYyB,KAAZzB,QAER,OAAOnD,uBAAY,SAAC0D,GAAD,OAAmCY,GAAaZ,EAAYP,KAAU,CAACA,ImEuChE2e,GACpBC,EnEpCD,WACL,IAAQ5e,EAAYyB,KAAZzB,QAER,OAAOnD,uBAAY,SAACqF,GAAD,OAAgBV,GAAgBU,EAAMlC,KAAU,CAACA,ImEiC/C6e,GACfC,EnE9BD,WACL,IAAQ9e,EAAYyB,KAAZzB,QAER,OAAOnD,uBAAY,SAACshB,GAAD,OAAoBhf,EAAYa,EAAQme,MAAU,CAACne,ImE2BjD+e,GAEfC,EAASniB,sBAAW,uCACxB,WAAOoiB,GAAP,SAAAxjB,EAAA,6DACEwjB,EAAkB/I,aAAa1B,GAG/B1R,EACEkP,aAAQ,SAACC,GACPA,EAAMhQ,OAAOid,KAAQ/c,SAAQ,SAAAnD,GAC3BA,EAAKwE,KAAKF,SAAWT,EAAuB7D,EAAKe,WAPzD,SAcQ8d,GAAoBjb,EAAUmb,GAdtC,OAegBnb,EAASX,OAAOgc,KACxB9b,SAAQ,SAAAD,GAAI,OAAIwc,EAAkBxc,MAhB1C,2CADwB,sDAoBxB,IAGIid,EAAYtiB,uBAChB,SAAA2X,GACE0B,EAAa1B,KAEf,CAAC0B,IAGGkJ,EAAiBviB,uBAAY,SAACwE,EAAqBsc,GACvDc,EAAmBd,KAClB,IACG0B,EAAgBxiB,uBAAY,SAACwE,GAAD,OAAmBod,EAAmB,QAAO,IACzEa,EAAYziB,uBAChB,SAAC8gB,GACC7a,GAAY,SAACF,GAAD,OAAwB2c,YAAQ7B,GAAiBC,GAAS/a,MACtE8b,EAAkBf,KAEpB,CAACe,EAAmB5b,IAEhB0c,EAAmB3iB,uBACvB,SAAC4iB,GACCA,EAAiBxd,OAAOgc,KAAQ9b,SAAQ,SAAAD,GAAI,OAAI0c,EAAa1c,MAC7Dud,EAAiBxd,OAAOid,KAAQ/c,SAAQ,SAAAnD,GAAI,OAAI8f,EAAa9f,EAAKe,OAElE+C,GAAY,SAACF,GAAD,OAAwB8c,YAAeD,EAAkB7c,QAEvE,CAACgc,EAAcE,EAAchc,IAEzB6c,EAAe9iB,uBACnB,SAAC+iB,EAAeC,GACdjB,EAAagB,GACb9c,GAAY,SAACF,GAAD,OAAwB8c,YAAe,CAACE,GAAUhd,MAC9DE,GAAY,SAACF,GAAD,OAAwB2c,YAAQ7B,GAAiBmC,GAAgBjd,MAC7E8b,EAAkBmB,KAEpB,CAACjB,EAAcF,EAAmB5b,IAG9Bgd,EAAiBjjB,uBACrB,SAACiH,EAA8Cic,GAC7Cjd,EACEkP,aAAQ,SAACC,GACP,IAAMjT,EAAOiT,EAAMhQ,OAAOid,KAAQlc,MAAK,SAAAgd,GAAO,OAAIA,EAAQjgB,KAAOggB,EAAYhgB,MACxEf,IAGLA,EAAKyE,SAAW,CACdC,EAAG4a,GAAWyB,EAAYtc,SAASC,GACnCE,EAAG0a,GAAWyB,EAAYtc,SAASG,WAK3C,CAACd,IAGGhD,EAAUjD,uBACd,SAAC6F,GACC,IAAM3C,EAAE,UAAM2C,EAAN,YAAcW,eAMhBrE,EAAO,CACXe,KACAyD,KAAM,CAAEF,SAPOT,EAAuB9C,IAQtC2C,OACAe,SARe,CACfC,EAAG4a,IAAYvb,EAAY7E,UAAUE,KAAOoW,EAAU9Q,GAAK8Q,EAAUyL,MACrErc,EAAG0a,IAAYvb,EAAY7E,UAAUC,IAAMqW,EAAU5Q,GAAK4Q,EAAUyL,QAQtEnd,GAAY,SAACF,GAAD,4BAA4BA,GAA5B,CAAsC5D,OAClD+D,EAAYrE,SAEd,CAACqE,EAAaF,EAAwBC,EAAa0R,IAG/C0L,EAAcrjB,uBAAY,WAC9BkG,EAAYrE,SACX,CAACqE,IAEEod,EAAoBtjB,uBACxB,SAACiH,GACCA,EAAMC,iBACNhB,EAAYlE,QAAQ,CAAEN,MAAO,EAAGC,OAAQ,EAAGL,IAAK2F,EAAME,QAAS3F,MAAO,EAAGC,OAAQ,EAAGF,KAAM0F,EAAMG,UAChGlB,EAAYpE,KAAK,cAAC,GAAD,CAAiBmB,QAASA,OAE7C,CAACA,EAASiD,IAGZ,OACE,mCACE,eAAC,IAAD,CACE,6BAA4Byb,EAAkBA,EAAgB4B,gBAAanf,EAC3Eof,gBAAiB,CAAC7L,EAAU9Q,EAAG8Q,EAAU5Q,GACzC0c,YAAa9L,EAAUyL,KACvBrd,SAAUA,EACV2a,UAAWA,GACX+B,UAAWA,EACXF,eAAgBA,EAChBC,cAAeA,EACfM,aAAcA,EACdH,iBAAkBA,EAClBR,OAAQA,EACRG,UAAWA,EACXW,eAAgBA,EAChBI,YAAaA,EACbC,kBAAmBA,EACnBI,2BAA2B,EAC3BC,mBAAmB,EACnBlC,YAAU,EACVmC,SAAU,CAAC9c,GAAWA,IAEtB1E,MAAO,CAAEyhB,OAAQ,GArBnB,UAuBE,cAAC,IAAD,CAAYC,IAAKhd,KACjB,cAAC,IAAD,SAMOrG,WAAMiH,KAAKga,IC5QpBqC,GAAsC,CAC1CvI,SAAU,GACV7Z,OAAQ,OACRqiB,OAAQ,OACRtiB,MAAO,QAGHuiB,GAAsC,CAC1C9X,QAAS,OACTvF,SAAU,WACVpF,MAAO,OACPF,KAAM,GACNqW,UAAW,iBACXuM,gBAAiB,gBAcNC,GAAoB,iBAAO,CACtCjhB,GAAIsD,cACJT,SAAU,GACV4R,UAAW,CACT9Q,EAAG,EACHE,EAAG,EACHqc,KAAM,KAgFKgB,OA5Ef,WACE,MAAsE5e,KAA9DO,EAAR,EAAQA,SAAU7C,EAAlB,EAAkBA,GAAI+C,EAAtB,EAAsBA,YAAaoe,EAAnC,EAAmCA,MAAOhL,EAA1C,EAA0CA,aAAc1B,EAAxD,EAAwDA,UACxD,EAA8BvZ,oBAAS,GAAvC,mBAAOkmB,EAAP,KAAgBC,EAAhB,KACMC,EAAehmB,mBAAQ,kBAxBP,SAAC8lB,GAAD,MAA4C,CAClE3iB,OAAQ,OACR+Z,QAAS,GACT9U,SAAU,WACVpF,MAAO,EACPF,IAAK,EACLqW,UAAW2M,EAAU,gBAAkB,mBACvCG,WAAY,sBACZ/iB,MAAO,KAgB4BgjB,CAAgBJ,KAAU,CAACA,IAG9D5lB,qBAAU,WACR,IAAMimB,EAAUC,KAAK3L,OAAO4L,SAASC,KAAKxe,OAAO,IACjD,IACE,MAAoCye,KAAKC,MAAML,GAAvC5e,EAAR,EAAQA,SAAU7C,EAAlB,EAAkBA,GAAIyU,EAAtB,EAAsBA,UACtB1R,EAAYF,GACZse,EAAK,OAACnhB,QAAD,IAACA,IAAMsD,eACZ6S,EAAa1B,GACb,MAAOnT,GACPC,QAAQC,MAAMF,MAEf,CAACyB,EAAaoe,EAAOhL,IAGxB3a,qBAAU,WACRua,OAAO4L,SAASC,KAAOG,KACrBF,KAAKG,UAAU,CACbnf,SAAUA,EAASuB,KAAI,SAAA6b,GAAO,kCAAUA,GAAV,IAAmBgC,UAAM/gB,OACvDlB,KACAyU,iBAGH,CAAC5R,EAAU7C,EAAIyU,IAElB,IAAMlR,EAAWzG,uBACf,SAACwE,GACC,IACE,MAAoCugB,KAAKC,MAAMxgB,EAAEZ,OAAOxD,OAAhD2F,EAAR,EAAQA,SAAU7C,EAAlB,EAAkBA,GAAIyU,EAAtB,EAAsBA,UACtB1R,EAAYF,GACZse,EAAK,OAACnhB,QAAD,IAACA,IAAMsD,eACZ6S,EAAa1B,GACb,MAAOnT,GACPC,QAAQC,MAAMF,MAGlB,CAACyB,EAAaoe,EAAOhL,IAGjB+L,EAAeplB,uBAAY,WAC/B,IAAMqlB,EAAiBlB,KACvBle,EAAYof,EAAetf,UAC3Bse,EAAMgB,EAAeniB,IACrBmW,EAAagM,EAAe1N,aAC3B,CAAC1R,EAAaoe,EAAOhL,IAClBiM,EAAsBtlB,uBAAY,kBAAMukB,GAAW,SAAAD,GAAO,OAAKA,OAAU,IAE/E,OACE,sBAAKliB,MAAOoiB,EAAZ,UACE,0BACE/d,SAAUA,EACVrE,MAAO2hB,GACP3jB,MAAO2kB,KAAKG,UACV,CACEnf,SAAUA,EAASuB,KAAI,SAAA6b,GAAO,kCAAUA,GAAV,IAAmBgC,UAAM/gB,OACvDlB,KACAyU,aAEF,KACA,KAGJ,sBAAKvV,MAAO6hB,GAAZ,UACE,wBAAQ/jB,QAASklB,EAAchjB,MAAO,CAAEmjB,YAAa,IAArD,mBAGA,wBAAQrlB,QAASolB,EAAjB,SAAuChB,EAAU,OAAS,gBCnEnDkB,OA7Cf,WACE,IAAMH,EAAiB7mB,kBAAQ2lB,GAAmB,IAClD,EAAoB/lB,mBAA6BinB,EAAeniB,IAAhE,mBAAOA,EAAP,KAAWmhB,EAAX,KACA,EAAgCjmB,mBAAmCinB,EAAetf,UAAlF,mBAAOA,EAAP,KAAiBE,EAAjB,KACA,EAAkC7H,mBAAoCinB,EAAe1N,WAArF,mBAAOA,EAAP,KAAkB0B,EAAlB,KAeMsL,EAAU,CAAE5e,WAAU7C,KAAI8C,uBAdDhG,uBAC7B,SAACkD,GAAD,OAAgB,SAACyD,GACfV,EACEkP,aAAQ,SAACC,GACP,IAAMjT,EAAOiT,EAAMhQ,OAAOid,KAAQlc,MAAK,SAAAgd,GAAO,OAAIA,EAAQjgB,KAAOA,KAC5Df,GAGLmO,OAAOC,KAAK5J,GAAMrB,SAAQ,SAAAmgB,GAAQ,OAAKtjB,EAAKwE,KAAK8e,GAAY9e,EAAK8e,aAIxE,CAACxf,IAEqDA,cAAaoe,QAAOhL,eAAc1B,aAE1F,OACE,cAACpS,GAAepF,SAAhB,CAAyBC,MAAOukB,EAAhC,SACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,cAAC,GAAD,UACE,cAAC,EAAD,UACE,sBACEviB,MAAO,CACLgO,WAAY,UACZjE,QAAS,OACTxK,OAAQ,SAJZ,UAOE,cAAC,GAAD,GAAWgjB,EAAQzhB,IACnB,cAAC,GAAD,kBC/BDwiB,GAZS,SAACC,GACnBA,GAAeA,aAAuBlG,UACxC,6BAAqBmG,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCHdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1BZ,O","file":"static/js/main.efe74a9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"b2f8f9461dd98a86c202.worklet.js\";","module.exports = __webpack_public_path__ + \"033c4db7bd27d90ab317.worklet.js\";","module.exports = __webpack_public_path__ + \"b784ff0021e5e202517c.worklet.js\";","module.exports = __webpack_public_path__ + \"918e57ec0567d33859b7.worklet.js\";","module.exports = __webpack_public_path__ + \"de66c2cb04884b9b0526.worklet.js\";","module.exports = __webpack_public_path__ + \"f0f4942514cf46847e54.worklet.js\";","module.exports = __webpack_public_path__ + \"447fe5123856ac45aba7.worklet.js\";","module.exports = __webpack_public_path__ + \"00b6c820b1763bdf0005.worklet.js\";","module.exports = __webpack_public_path__ + \"fd17817901b509fafbf0.worklet.js\";","module.exports = __webpack_public_path__ + \"c18bef9f06b582c16df1.worklet.js\";","module.exports = __webpack_public_path__ + \"af69e443d4d4337eb472.worklet.js\";","module.exports = __webpack_public_path__ + \"146d720165c48e98eb97.worklet.js\";","module.exports = __webpack_public_path__ + \"4d921785635a8b23ce11.worklet.js\";","module.exports = __webpack_public_path__ + \"b1c4e4f585a475b600d5.worklet.js\";","import { createContext, useContext } from \"react\";\nimport * as sac from \"standardized-audio-context\";\n\nexport const AudioContextContext = createContext<sac.AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContextContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\nimport { AudioContext } from \"utils/audioContext\";\n\nimport ADSRWorkletProcessor from \"worklet-loader!worklets/adsr-processor.worklet.ts\";\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport ComparatorWorkletProcessor from \"worklet-loader!worklets/comparator-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport MeterWorkletProcessor from \"worklet-loader!worklets/meter-processor.worklet.ts\";\nimport NoiseWorkletProcessor from \"worklet-loader!worklets/noise-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport QuantizerWorkletProcessor from \"worklet-loader!worklets/quantizer-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport SampleAndHoldWorkletProcessor from \"worklet-loader!worklets/sample-and-hold-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      return new AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      if (!context.audioWorklet) {\n        return;\n      }\n\n      await Promise.all([\n        context.audioWorklet.addModule(ADSRWorkletProcessor),\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(ComparatorWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(MeterWorkletProcessor),\n        context.audioWorklet.addModule(NoiseWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(QuantizerWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SampleAndHoldWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContextContext.Provider value={context}>{children}</AudioContextContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\nimport { AudioWorkletNode } from \"utils/audioContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n\n    if (node instanceof AudioWorkletNode!) {\n      node.port.postMessage(\"stop\");\n    }\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { AudioContext, AudioNode } from \"utils/audioContext\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContextContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu} {...props}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","import { DependencyList } from \"react\";\nimport { useNode } from \"context/NodeContext\";\nimport { AudioWorkletNode, IAudioWorkletNodeOptions } from \"utils/audioContext\";\n\nfunction useAudioWorkletNode(\n  id: string,\n  name: string,\n  options?: Partial<IAudioWorkletNodeOptions>,\n  dependencies?: DependencyList\n) {\n  return useNode(id, context => new AudioWorkletNode!(context, name, options), dependencies);\n}\n\nexport default useAudioWorkletNode;\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { AudioContext, AudioWorkletNode } from \"utils/audioContext\";\nimport { Mode, Parameters } from \"worklets/adsr-processor.types\";\n\ninterface ADSRNode extends Required<ComplexAudioNode<undefined, undefined>> {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.DecayTime]: AudioParam;\n  gain: AudioWorkletNode<AudioContext>;\n  gate: AudioWorkletNode<AudioContext>;\n  [Parameters.ReleaseTime]: AudioParam;\n  [Parameters.SustainLevel]: AudioParam;\n}\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const {\n    attackTime = 0.2,\n    decayTime = 0.1,\n    mode = Mode.Linear,\n    onChange,\n    releaseTime = 0.6,\n    sustainLevel = 0.7,\n    sustainOn = true,\n  } = data;\n\n  const workletNode = useAudioWorkletNode(\n    id,\n    \"adsr-processor\",\n    {\n      processorOptions: { sustainOn, mode },\n    },\n    [mode, sustainOn]\n  );\n\n  // AudioNode\n  const node = (useNode(\n    id,\n    () => ({\n      [Parameters.AttackTime]: workletNode.parameters.get(Parameters.AttackTime),\n      [Parameters.DecayTime]: workletNode.parameters.get(Parameters.DecayTime),\n      gain: workletNode,\n      gate: workletNode,\n      input: undefined,\n      output: undefined,\n      [Parameters.ReleaseTime]: workletNode.parameters.get(Parameters.ReleaseTime),\n      [Parameters.SustainLevel]: workletNode.parameters.get(Parameters.SustainLevel),\n    }),\n    [mode, sustainOn]\n  ) as unknown) as ADSRNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attackTime), [node, attackTime]);\n  useEffect(() => void (node[Parameters.DecayTime].value = decayTime), [node, decayTime]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = releaseTime), [node, releaseTime]);\n  useEffect(() => void (node[Parameters.SustainLevel].value = sustainLevel), [node, sustainLevel]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"50%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport { AnalyserNode } from \"utils/audioContext\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  fftSizeExp?: number;\n}\n\nfunction useAnalyserNode(id: string, { fftSizeExp = 11 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return node;\n}\n\nexport default useAnalyserNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\nimport useAnalyserNode from \"hooks/nodes/useAnalyserNode\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n  const node = useAnalyserNode(id, { fftSizeExp });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"and-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { AudioBufferSourceNode } from \"utils/audioContext\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>Play</button>\n          <button onClick={stop}>Stop</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input checked={loop} onChange={() => onChange({ loop: !loop })} title=\"Loop\" type=\"checkbox\" />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\nimport { TBiquadFilterType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  gain?: number;\n  Q?: number;\n  type?: TBiquadFilterType;\n}\n\nfunction useBiquadFilterNode(id: string, { detune = 0, frequency = 350, gain = 0, Q = 1, type = \"lowpass\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useBiquadFilterNode;\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport { BiquadFilterNode, TBiquadFilterType } from \"utils/audioContext\";\n\nconst filtersUsingGain: TBiquadFilterType[] = [\"lowshelf\", \"highshelf\", \"peaking\"];\nconst filtersUsingQ: TBiquadFilterType[] = [\"lowpass\", \"highpass\", \"bandpass\", \"peaking\", \"notch\", \"allpass\"];\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = \"lowpass\" } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const node = useBiquadFilterNode(id, { detune, frequency, gain, Q, type });\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = filtersUsingGain.includes(type);\n  const canUseQ = filtersUsingQ.includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[\"lowpass\", \"highpass\"].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[\"lowpass\", \"highpass\"].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              <option value=\"lowpass\">lowpass</option>\n              <option value=\"highpass\">highpass</option>\n              <option value=\"bandpass\">bandpass</option>\n              <option value=\"lowshelf\">lowshelf</option>\n              <option value=\"highshelf\">highshelf</option>\n              <option value=\"peaking\">peaking</option>\n              <option value=\"notch\">notch</option>\n              <option value=\"allpass\">allpass</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","import { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  inputs?: number;\n}\n\nfunction useChannelMergerNode(id: string, { inputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n}\n\nexport default useChannelMergerNode;\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelMergerNode from \"hooks/nodes/useChannelMergerNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n  const node = useChannelMergerNode(id, { inputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  outputs?: number;\n}\n\nfunction useChannelSplitterNode(id: string, { outputs = 2 }: Options) {\n  // AudioNode\n  return useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n}\n\nexport default useChannelSplitterNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useChannelSplitterNode from \"hooks/nodes/useChannelSplitterNode\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n  const node = useChannelSplitterNode(id, { outputs });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\nimport { TOverSampleType } from \"utils/audioContext\";\n\ninterface Options {\n  curve?: Float32Array | null;\n  oversample?: TOverSampleType;\n}\n\nfunction useWaveShaperNode(id: string, { curve = null, oversample = \"none\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createWaveShaper());\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  return node;\n}\n\nexport default useWaveShaperNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\nconst curve = new Float32Array([-1, 1]);\n\nfunction WaveShaper({ id, selected, type }: NodeProps) {\n  // AudioNode\n  useWaveShaperNode(id, { curve });\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type} />;\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Comparator({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"comparator-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Comparator\" type={type} />;\n}\n\nexport default React.memo(Comparator);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  offset?: number;\n}\n\nfunction useConstantSourceNode(id: string, { offset = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.offset.value = offset), [node, offset]);\n\n  return node;\n}\n\nexport default useConstantSourceNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n  useConstantSourceNode(id, { offset });\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  delayTime?: number;\n  maxDelayTime?: number;\n}\n\nfunction useDelayNode(id: string, { delayTime = 1, maxDelayTime = 1 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(maxDelayTime), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return node;\n}\n\nexport default useDelayNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n  const node = useDelayNode(id, { delayTime, maxDelayTime });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  gain?: number;\n}\n\nfunction useGainNode(id: string, { gain = 1 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => void node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015), [node, gain]);\n\n  return node;\n}\n\nexport default useGainNode;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useDelayNode from \"hooks/nodes/useDelayNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Mixing\n  const dryNode = useGainNode(`${id}_dry`, { gain: Math.cos(mix * 0.5 * Math.PI) });\n  const wetNode = useGainNode(`${id}_wet`, { gain: Math.cos((1.0 - mix) * 0.5 * Math.PI) });\n  // Delay\n  const delayNode = useDelayNode(`${id}_delay`, { delayTime });\n  // Feedback\n  const feedbackNode = useGainNode(`${id}_feedback`, { gain: feedback });\n\n  // Dry chain\n  useEffect(() => {\n    inputNode.connect(dryNode);\n    dryNode.connect(outputNode);\n  }, [dryNode, inputNode, outputNode]);\n  // Wet chain\n  useEffect(() => {\n    inputNode.connect(delayNode);\n    delayNode.connect(wetNode);\n    wetNode.connect(outputNode);\n  }, [delayNode, inputNode, outputNode, wetNode]);\n  // Feedback chain\n  useEffect(() => {\n    wetNode.connect(feedbackNode);\n    feedbackNode.connect(delayNode);\n  }, [delayNode, feedbackNode, wetNode]);\n\n  // AudioNode\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import { useNode } from \"context/NodeContext\";\n\nfunction useDestinationNode(id: string) {\n  // AudioNode\n  return useNode(id, context => context.destination);\n}\n\nexport default useDestinationNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDestinationNode from \"hooks/nodes/useDestinationNode\";\n\nfunction Destination({ id, type }: NodeProps) {\n  useDestinationNode(id);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  attack?: number;\n  knee?: number;\n  ratio?: number;\n  release?: number;\n  threshold?: number;\n}\n\nfunction useDynamicsCompressorNode(\n  id: string,\n  { attack = 0.003, knee = 30, ratio = 12, release = 0.25, threshold = -24 }: Options\n) {\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return node;\n}\n\nexport default useDynamicsCompressorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useDynamicsCompressorNode from \"hooks/nodes/useDynamicsCompressorNode\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n  useDynamicsCompressorNode(id, { attack, knee, ratio, release, threshold });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useBiquadFilterNode from \"hooks/nodes/useBiquadFilterNode\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { AudioNode } from \"utils/audioContext\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\nconst FILTER_BANDS = BANDS_OCTAVES;\nconst FILTER_GAINS = Array(BANDS_OCTAVES.length).fill(0);\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n  return `${frequency}`;\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = FILTER_GAINS, onChange } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  const outputNode = useGainNode(`${id}_output`, {});\n\n  const filterNodes = FILTER_BANDS.map((frequency, index, frequencies) => {\n    const isLowShelf = index === 0;\n    const isHighShelf = index === frequencies.length - 1;\n    const isBandPass = !isLowShelf && !isHighShelf;\n\n    const gain = isBandPass ? gains[index] : 0;\n    const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n    const Q = octaveBandwidthToQ(bandwidth);\n\n    // While illegal by rules of hooks, the bands array is never changed in runtime so hook call order is preserved\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    return useBiquadFilterNode(`${id}_filter_${frequency}`, { frequency, gain, type, Q });\n  });\n\n  useEffect(\n    () => {\n      (filterNodes as AudioNode[])\n        .concat(outputNode)\n        .reduce((source, destination) => source.connect(destination), inputNode);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [inputNode, outputNode, ...filterNodes]\n  );\n\n  useNode(id, () => ({ input: inputNode, output: outputNode }), [inputNode, outputNode]);\n\n  // AudioParam;\n  useEffect(() => {\n    filterNodes.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, gains]);\n  useEffect(() => {\n    filterNodes.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [filterNodes, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {filterNodes.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nconst items = [\n  {\n    items: [\n      { label: \"Audio Buffer Source\", node: \"AudioBufferSource\" },\n      { label: \"Gate\", node: \"Gate\" },\n      { label: \"Keyboard\", node: \"Keyboard\" },\n      { label: \"Metronome\", node: \"Metronome\" },\n      { label: \"Noise\", node: \"Noise\" },\n      { label: \"Oscillator\", node: \"Oscillator\" },\n      { label: \"Oscillator Note\", node: \"OscillatorNote\" },\n    ],\n    label: \"Sources\",\n  },\n  {\n    items: [{ label: \"Destination\", node: \"Destination\" }],\n    label: \"Destinations\",\n  },\n  {\n    items: [\n      { label: \"Biquad Filter\", node: \"BiquadFilter\" },\n      { label: \"Channel Merger\", node: \"ChannelMerger\" },\n      { label: \"Channel Splitter\", node: \"ChannelSplitter\" },\n      { label: \"Clipper\", node: \"Clipper\" },\n      { label: \"Delay\", node: \"Delay\" },\n      { label: \"Delay Effect\", node: \"DelayEffect\" },\n      { label: \"Dynamics Compressor\", node: \"DynamicsCompressor\" },\n      { label: \"Equalizer\", node: \"Equalizer\" },\n      { label: \"Gain\", node: \"Gain\" },\n      { label: \"Quantizer\", node: \"Quantizer\" },\n      { label: \"Rectifier\", node: \"Rectifier\" },\n      { label: \"Sample and Hold\", node: \"SampleAndHold\" },\n      { label: \"Sign\", node: \"Sign\" },\n      { label: \"Stereo Panner\", node: \"StereoPanner\" },\n      { label: \"Transformer\", node: \"Transformer\" },\n      { label: \"Wave Shaper\", node: \"WaveShaper\" },\n    ],\n    label: \"Effects\",\n  },\n  {\n    items: [\n      { label: \"ADSR\", node: \"ADSR\" },\n      { label: \"Constant Source\", node: \"ConstantSource\" },\n      { label: \"Input Switch\", node: \"InputSwitch\" },\n      { label: \"Output Switch\", node: \"OutputSwitch\" },\n      { label: \"XY Pad\", node: \"XYPad\" },\n    ],\n    label: \"Controllers\",\n  },\n  {\n    items: [\n      { label: \"AND Gate\", node: \"AndGate\" },\n      { label: \"Comparator\", node: \"Comparator\" },\n      { label: \"NOT Gate\", node: \"NotGate\" },\n      { label: \"OR Gate\", node: \"OrGate\" },\n      { label: \"XOR Gate\", node: \"XorGate\" },\n    ],\n    label: \"Logic\",\n  },\n  {\n    items: [\n      { label: \"Analyser\", node: \"Analyser\" },\n      { label: \"Meter\", node: \"Meter\" },\n    ],\n    label: \"Analysers\",\n  },\n];\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      {items.map(item => (\n        <li key={item.label}>\n          {item.label}\n          <span>&#x276F;</span>\n          {item.items && (\n            <ul className=\"contextMenu sub\">\n              {item.items.map(subitem => (\n                <li key={subitem.label} onClick={() => addNode(subitem.node)}>\n                  {subitem.label}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2)} dB`;\n  useGainNode(id, { gain });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useConstantSourceNode(id, {});\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // Interface\n  const outputNode = useGainNode(`${id}_output`, {});\n  // Inputs\n  const inputANode = useGainNode(`${id}_inputA`, {});\n  const inputBNode = useGainNode(`${id}_inputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputANode.connect(outputNode);\n    inputBNode.connect(outputNode);\n  }, [inputANode, inputBNode, outputNode]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n  useEffect(() => {\n    if (input === \"A\") {\n      inputANode.gain.setTargetAtTime(1, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(0, inputBNode.context.currentTime, 0.015);\n    } else {\n      inputANode.gain.setTargetAtTime(0, inputANode.context.currentTime, 0.015);\n      inputBNode.gain.setTargetAtTime(1, inputBNode.context.currentTime, 0.015);\n    }\n  }, [input, inputANode, inputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: undefined,\n      A: inputANode,\n      B: inputBNode,\n      output: outputNode,\n    }),\n    [inputANode, inputBNode, outputNode]\n  );\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Twelfth must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detailed?: boolean;\n  detune?: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: \"0.7em\",\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detailed = false, detune = 0, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      {detailed && (\n        <>\n          &nbsp;\n          <small>\n            ({frequency.toFixed(2)} Hz\n            {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n          </small>\n        </>\n      )}\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useCallback } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Note from \"components/Note\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keysOptions = [16, 28, 40, 64, 88];\nconst keyTwelfthOffset = -3;\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { keys = 16, octave = 2, onChange } = data;\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const frequencyNode = useConstantSourceNode(`${id}_frequency`, {});\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = frequencyNode;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      frequencyNode.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [frequencyNode]\n  );\n  const playNote = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const stopNote = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      frequency: frequencyNode,\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n    }),\n    [frequencyNode, gateNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            {Array(keys)\n              .fill(null)\n              .map((_, keyIndex) => {\n                const keyTwelfth = (((keyIndex + keyTwelfthOffset) % 12) + 12) % 12;\n                const keyOctave = octave + Math.floor((keyIndex + keyTwelfthOffset) / 12);\n                const keyClassName = [1, 3, 6, 8, 10].includes(keyTwelfth) ? keyBlack : keyWhite;\n\n                return (\n                  <button\n                    className={keyClassName}\n                    key={`${keyOctave}_${keyTwelfth}`}\n                    onMouseEnter={() => setNote(keyOctave, keyTwelfth)}\n                  >\n                    <Note octave={keyOctave} twelfth={keyTwelfth} />\n                  </button>\n                );\n              })}\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n          <select\n            onChange={e => onChange({ keys: +e.target.value })}\n            style={{ width: \"50%\" }}\n            title=\"Keys\"\n            value={keys}\n          >\n            {keysOptions.map(keys => (\n              <option key={keys} value={keys}>\n                {keys}\n              </option>\n            ))}\n          </select>\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { logarithmic } from \"utils/scale\";\nimport { float32toDb } from \"utils/units\";\n\nconst MAX_LEVEL = 6;\nconst MIN_LEVEL = -48;\nconst BUCKETS = MAX_LEVEL - MIN_LEVEL + 1;\nconst DPI_RATIO = window.devicePixelRatio ?? 1;\nconst LEVEL_GAP = 2;\nconst HEIGHT = 2;\nconst WIDTH = 25;\n\nfunction drawMeter(context: CanvasRenderingContext2D, levels: number[]) {\n  // high dpi\n  context.setTransform(DPI_RATIO, 0, 0, DPI_RATIO, 0, 0);\n\n  // reset\n  context.fillStyle = \"#000000\";\n  context.font = \"10px Arial\";\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  context.restore();\n\n  // rulers\n  Array(BUCKETS)\n    .fill(undefined)\n    .forEach((_, item) => {\n      const significant = [0, 6, 12, 18, 30, 42, 54].includes(item);\n      const rulerHeight = significant ? 1 : 0.5;\n      const rulerWidth = significant ? 6 : 3;\n      const levelText = `${MAX_LEVEL - item}`;\n      const groupX = 0;\n      const groupY = item * HEIGHT + 5.5;\n      const lineX = WIDTH - 8 + (significant ? 0 : 3);\n      const lineY = 0;\n      const textX = groupX + 15;\n      const textY = groupY;\n\n      if (significant) {\n        context.fillText(levelText, textX, textY);\n      }\n\n      context.lineWidth = rulerHeight;\n      context.fillRect(groupX + lineX, groupY + lineY, rulerWidth, rulerHeight);\n    });\n\n  // levels\n  levels.forEach((level, levelIndex) => {\n    Array(BUCKETS)\n      .fill(undefined)\n      .forEach((_, item) => {\n        const decibels = MAX_LEVEL - item;\n        const hue = Math.min(Math.max(120 * logarithmic(Math.max(0, -decibels / 10)), 0), 120).toFixed(0);\n        const lightness = float32toDb(level) >= decibels ? \"50%\" : \"0%\";\n\n        context.fillStyle = `hsl(${hue}, 50%, ${lightness})`;\n        context.fillRect((levelIndex + 1) * (WIDTH + LEVEL_GAP) - LEVEL_GAP, item * HEIGHT + 5, WIDTH, HEIGHT);\n      });\n  });\n}\n\ntype ChannelMessageEvent = MessageEvent<{ payload: { channels: number; id: string }; type: \"channels\" }>;\ntype LevelMessageEvent = MessageEvent<{ payload: { channel: number; id: string; level: number }; type: \"level\" }>;\n\n// TODO add peak hold\nfunction Meter({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const levelsRef = useRef<number[]>([]);\n  const [channels, setChannels] = useState(1);\n\n  const canvasHeight = BUCKETS * HEIGHT + 10;\n  const canvasWidth = (WIDTH + LEVEL_GAP) * (channels + 1);\n\n  const node = useAudioWorkletNode(id, \"meter-processor\", { numberOfOutputs: 0 });\n\n  const handleMessage = useCallback(\n    ({ data: event }: ChannelMessageEvent | LevelMessageEvent) => {\n      if (event.type === \"channels\") {\n        if (event.payload.channels !== channels) {\n          setChannels(event.payload.channels);\n        }\n      }\n\n      if (event.type === \"level\") {\n        levelsRef.current[event.payload.channel] = event.payload.level;\n      }\n    },\n    [channels]\n  );\n  useEffect(() => {\n    node.port.onmessage = handleMessage;\n  }, [node, handleMessage]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawMeter(context, levelsRef.current.slice(0, channels));\n  }, [channels]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} title=\"Meter\" type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            width={DPI_RATIO * canvasWidth}\n            height={DPI_RATIO * canvasHeight}\n            style={{ height: canvasHeight, width: canvasWidth }}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Meter);\n","export function exponential(t: number): number {\n  return (Math.pow(10, t) - 1) / 9;\n}\n\nexport function linear(t: number): number {\n  return t;\n}\n\nexport function logarithmic(t: number): number {\n  return Math.log10(1 + t * 9);\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","export enum NoiseType {\n  Brown = \"Brown\",\n  Pink = \"Pink\",\n  White = \"White\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { NoiseType } from \"worklets/noise-processor.types\";\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n  useAudioWorkletNode(id, \"noise-processor\", { numberOfInputs: 0, processorOptions: { type } }, [type]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType.White}</option>\n              <option value={NoiseType.Pink}>{NoiseType.Pink}</option>\n              <option value={NoiseType.Brown}>{NoiseType.Brown}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"not-gate-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"or-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\nimport { TOscillatorType } from \"utils/audioContext\";\n\ninterface Options {\n  detune?: number;\n  frequency?: number;\n  type?: TOscillatorType;\n}\n\nfunction useOscillatorNode(id: string, { detune = 0, frequency = 440, type = \"sine\" }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  return node;\n}\n\nexport default useOscillatorNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\nimport useOscillatorNode from \"hooks/nodes/useOscillatorNode\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n  useOscillatorNode(id, { detune, frequency, type });\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detailed detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\nimport useGainNode from \"hooks/nodes/useGainNode\";\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // Interface\n  const inputNode = useGainNode(`${id}_input`, {});\n  // Outputs\n  const outputANode = useGainNode(`${id}_outputA`, {});\n  const outputBNode = useGainNode(`${id}_outputB`, {});\n\n  // Connections\n  useEffect(() => {\n    inputNode.connect(outputANode);\n    inputNode.connect(outputBNode);\n  }, [inputNode, outputANode, outputBNode]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n  useEffect(() => {\n    if (output === \"A\") {\n      outputANode.gain.setTargetAtTime(1, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(0, outputBNode.context.currentTime, 0.015);\n    } else {\n      outputANode.gain.setTargetAtTime(0, outputANode.context.currentTime, 0.015);\n      outputBNode.gain.setTargetAtTime(1, outputBNode.context.currentTime, 0.015);\n    }\n  }, [output, outputANode, outputBNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      input: inputNode,\n      A: outputANode,\n      B: outputBNode,\n      output: undefined,\n    }),\n    [inputNode, outputANode, outputBNode]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange } = data;\n  useAudioWorkletNode(id, \"quantizer-processor\", { processorOptions: { levels, max, min } }, [levels, max, min]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Quantizer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n  useAudioWorkletNode(id, \"rectifier-processor\", { processorOptions: { mode } }, [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Parameters {\n  HoldTime = \"holdTime\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\nimport { Parameters } from \"worklets/sample-and-hold-processor.types\";\n\nfunction SampleAndHold({ id, type }: NodeProps) {\n  const workletNode = useAudioWorkletNode(`${id}_worklet`, \"sample-and-hold-processor\");\n\n  useNode(\n    id,\n    () => ({\n      [Parameters.HoldTime]: workletNode.parameters.get(Parameters.HoldTime),\n      input: workletNode,\n      output: workletNode,\n    }),\n    [workletNode]\n  );\n\n  return <Node id={id} inputs={[\"input\", Parameters.HoldTime]} outputs={[\"output\"]} title=\"Sample/Hold\" type={type} />;\n}\n\nexport default React.memo(SampleAndHold);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction Sign({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"sign-processor\");\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import { useEffect } from \"react\";\nimport { useNode } from \"context/NodeContext\";\n\ninterface Options {\n  pan?: number;\n}\n\nfunction useStereoPannerNode(id: string, { pan = 0 }: Options) {\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return node;\n}\n\nexport default useStereoPannerNode;\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useStereoPannerNode from \"hooks/nodes/useStereoPannerNode\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n  useStereoPannerNode(id, { pan });\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n  useAudioWorkletNode(\n    id,\n    \"transformer-processor\",\n    {\n      processorOptions: {\n        inputMin,\n        inputMax,\n        outputMin,\n        outputMax,\n      },\n    },\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","import React, { useCallback, useContext, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContextContext } from \"context/AudioContextContext\";\nimport Node from \"components/Node\";\nimport useWaveShaperNode from \"hooks/nodes/useWaveShaperNode\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  const context = useContext(AudioContextContext);\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line no-new-func\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioNode\n  useWaveShaperNode(id, { curve, oversample });\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line no-new-func\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Node from \"components/Node\";\nimport useAudioWorkletNode from \"hooks/nodes/useAudioWorkletNode\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  useAudioWorkletNode(id, \"xor-gate-processor\", { numberOfInputs: 2 });\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback, useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport useConstantSourceNode from \"hooks/nodes/useConstantSourceNode\";\n\nfunction drawAxes(context: CanvasRenderingContext2D) {\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n\n  context.clearRect(0, 0, width, height);\n  context.setLineDash([4, 4]);\n  context.fillStyle = \"#000000\";\n  context.font = \"20px monospace\";\n  context.lineWidth = 1;\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"center\";\n  context.textBaseline = \"middle\";\n\n  context.beginPath();\n  context.moveTo(30, height / 2);\n  context.lineTo(width - 30, height / 2);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width / 2, 15);\n  context.fillText(\"-1\", width / 2, height - 15);\n\n  context.beginPath();\n  context.moveTo(width / 2, 30);\n  context.lineTo(width / 2, height - 30);\n  context.stroke();\n  context.closePath();\n  context.fillText(\"1\", width - 15, height / 2);\n  context.fillText(\"-1\", 15, height / 2);\n}\n\nfunction getXY(event: any) {\n  const canvas = event.target;\n  const rect = canvas.getBoundingClientRect();\n  const x = (event.clientX - rect.left - rect.width / 2) / (rect.width / 2);\n  const y = -(event.clientY - rect.top - rect.height / 2) / (rect.height / 2);\n\n  return { x, y };\n}\n\nfunction XYPad({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawAxes(context);\n  }, []);\n\n  // Interface\n  const gateNode = useConstantSourceNode(`${id}_gate`, {});\n  const xNode = useConstantSourceNode(`${id}_x`, {});\n  const yNode = useConstantSourceNode(`${id}_y`, {});\n\n  const setXY = useCallback(\n    ({ x, y }: { x: number; y: number }) => {\n      xNode.offset.setTargetAtTime(x, xNode.context.currentTime, 0.015);\n      yNode.offset.setTargetAtTime(y, yNode.context.currentTime, 0.015);\n    },\n    [xNode, yNode]\n  );\n  const gateOn = useCallback(() => void (gateNode.offset.value = 1), [gateNode]);\n  const gateOff = useCallback(() => void (gateNode.offset.value = 0), [gateNode]);\n\n  // AudioNode\n  useNode(\n    id,\n    () => ({\n      gate: gateNode,\n      input: undefined,\n      output: undefined,\n      x: xNode,\n      y: yNode,\n    }),\n    [gateNode, xNode, yNode]\n  );\n\n  return (\n    <Node id={id} outputs={[\"x\", \"y\", \"gate\"]} title={`XY Pad`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            height={400}\n            onMouseMove={event => setXY(getXY(event))}\n            style={{ background: \"white\", cursor: \"crosshair\", height: 200, width: 200 }}\n            width={400}\n            onMouseDown={gateOn}\n            onMouseUp={gateOff}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(XYPad);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnConnectStartParams,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport Clipper from \"components/nodes/Clipper\";\nimport Comparator from \"components/nodes/Comparator\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Meter from \"components/nodes/Meter\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Quantizer from \"components/nodes/Quantizer\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport SampleAndHold from \"components/nodes/SampleAndHold\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport XorGate from \"components/nodes/XorGate\";\nimport XYPad from \"components/nodes/XYPad\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  AudioBufferSource: AudioBufferSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  Clipper: Clipper,\n  Comparator: Comparator,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Meter: Meter,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Quantizer: Quantizer,\n  Rectifier: Rectifier,\n  SampleAndHold: SampleAndHold,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  XorGate: XorGate,\n  XYPad: XYPad,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n  const [tryingToConnect, setTryingToConnect] = useState<OnConnectStartParams | null>(null);\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnectStart = useCallback((e: React.MouseEvent, params: OnConnectStartParams) => {\n    setTryingToConnect(params);\n  }, []);\n  const onConnectStop = useCallback((e: MouseEvent) => setTryingToConnect(null), []);\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        data-connecting-handletype={tryingToConnect ? tryingToConnect.handleType : undefined}\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onConnectStart={onConnectStart}\n        onConnectStop={onConnectStop}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        selectNodesOnDrag={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}