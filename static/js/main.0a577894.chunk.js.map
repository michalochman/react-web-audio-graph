{"version":3,"sources":["worklets/adsr-processor.worklet.ts","worklets/and-gate-processor.worklet.ts","worklets/comparator-processor.worklet.ts","worklets/gate-processor.worklet.ts","worklets/meter-processor.worklet.ts","worklets/noise-processor.worklet.ts","worklets/not-gate-processor.worklet.ts","worklets/or-gate-processor.worklet.ts","worklets/quantizer-processor.worklet.ts","worklets/rectifier-processor.worklet.ts","worklets/sample-and-hold-processor.worklet.ts","worklets/sign-processor.worklet.ts","worklets/transformer-processor.worklet.ts","worklets/xor-gate-processor.worklet.ts","context/AudioContext.tsx","components/Audio.tsx","context/ContextMenuContext.tsx","components/ContextMenu.tsx","components/Nodes.tsx","utils/handles.ts","context/NodeContext.tsx","context/ProjectContext.tsx","components/Node.tsx","worklets/adsr-processor.types.ts","components/nodes/ADSR.tsx","hooks/useAnimationFrame.ts","components/nodes/Analyser/Visualiser.tsx","components/nodes/Analyser/index.tsx","components/nodes/AndGate.tsx","components/nodes/AudioBufferSource.tsx","components/nodes/BiquadFilter.tsx","utils/channels.ts","components/nodes/ChannelMerger.tsx","components/nodes/ChannelSplitter.tsx","components/nodes/Comparator.tsx","components/nodes/ConstantSource.tsx","components/nodes/Delay.tsx","components/controls/Slider.tsx","utils/units.ts","components/nodes/DelayEffect.tsx","components/nodes/Destination.tsx","components/nodes/DynamicsCompressor.tsx","components/nodes/Equalizer.tsx","components/FlowContextMenu.tsx","components/nodes/Gain.tsx","components/nodes/Gate.tsx","components/controls/Toggle.tsx","components/nodes/InputSwitch.tsx","utils/notes.ts","components/nodes/Keyboard.tsx","components/nodes/Meter.tsx","utils/scale.ts","components/nodes/Metronome.tsx","worklets/noise-processor.types.ts","components/nodes/Noise.tsx","components/nodes/NotGate.tsx","components/nodes/OrGate.tsx","components/nodes/Oscillator.tsx","components/Note.tsx","components/nodes/OscillatorNote.tsx","components/nodes/OutputSwitch.tsx","components/nodes/Quantizer.tsx","worklets/rectifier-processor.types.ts","components/nodes/Rectifier.tsx","worklets/sample-and-hold-processor.types.ts","components/nodes/SampleAndHold.tsx","components/nodes/Sign.tsx","components/nodes/StereoPanner.tsx","components/nodes/Transformer.tsx","components/nodes/WaveShaper.tsx","components/nodes/XorGate.tsx","components/Flow.tsx","components/Project.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","AudioContext","createContext","Audio","children","useState","ready","setReady","context","useMemo","window","webkitAudioContext","useEffect","awaitAudioWorkletProcessors","a","Promise","all","audioWorklet","addModule","ADSRWorkletProcessor","AndGateWorkletProcessor","ComparatorWorkletProcessor","GateWorkletProcessor","MeterWorkletProcessor","NoiseWorkletProcessor","NotGateWorkletProcessor","OrGateWorkletProcessor","QuantizerWorkletProcessor","RectifierWorkletProcessor","SampleAndHoldWorkletProcessor","SignWorkletProcessor","TransformerWorkletProcessor","XorGateWorkletProcessor","resume","useCallback","state","onClick","Provider","value","ContextMenuContext","useContextMenu","useContext","ContextMenu","React","showPopper","setShowPopper","popperElement","setPopperElement","virtualReference","useRef","usePopper","current","placement","styles","attributes","getRect","top","left","right","bottom","width","height","getBoundingClientRect","hide","show","foo","setRect","bbox","ref","node","style","popper","nodeCleanup","isComplexAudioNode","input","stop","output","disconnect","AudioWorkletNode","port","postMessage","Nodes","nodes","addNode","id","getNode","removeNode","NodeContext","getChannelIndex","handle","match","resolveConnection","connection","source","target","sourceHandle","targetHandle","Error","connectToTargetNode","startsWith","connectToSourceNode","inputIndex","undefined","outputIndex","connectNodes","connect","e","console","error","disconnectNodes","useNodeContext","useNode","nodeFactory","dependencies","edges","useStoreState","store","edgesToConnect","filter","edge","forEach","ProjectContext","useProject","Node","inputs","outputs","title","type","props","elements","onChangeElementFactory","setElements","contextMenu","find","handleStyle","background","substr","cloneNode","uuidv4","onChange","newNode","data","position","x","GRID_SIZE","y","onContextMenu","event","preventDefault","clientY","clientX","className","map","Position","Left","Right","Mode","Parameters","Stage","memo","ADSR","selected","attackTime","decayTime","mode","Linear","releaseTime","sustainLevel","sustainOn","envelope","processorOptions","AttackTime","parameters","get","DecayTime","ReleaseTime","SustainLevel","Exponential","Logarithmic","checked","min","step","max","useAnimationFrame","callback","options","previousTimeRef","requestRef","maxFPS","animate","time","deltaTime","requestAnimationFrame","cancelAnimationFrame","Visualiser","paused","canvasProps","audioData","Uint8Array","frequencyBinCount","canvasRef","draw","canvas","getContext","DataType","TimeDomain","bufferLength","length","sliceWidth","fillStyle","fillRect","lineWidth","strokeStyle","beginPath","moveTo","i","lineTo","stroke","drawTimeDomainData","Frequency","barWidth","barHeight","drawFrequencyData","getData","dataArray","getByteTimeDomainData","getByteFrequencyData","display","Analyser","nodeType","fftSizeExp","createAnalyser","fftSize","Math","pow","justifyContent","AndGate","numberOfInputs","AudioBufferSource","loop","activeBufferSource","createGain","linkBufferSource","bufferSource","start","createBufferSource","buffer","handleNewFile","file","arrayBuffer","decodeAudioData","handleChange","files","handleDragOver","handleDrop","dataTransfer","items","item","kind","getAsFile","onDragOver","onDrop","BiquadFilterType","BiquadFilter","detune","gain","frequency","Q","lowpass","createBiquadFilter","frequencies","Float32Array","sampleRate","_","magnitudes","phases","getFrequencyResponse","closePath","drawFrequencyResponse","canUseGain","lowshelf","highshelf","peaking","includes","canUseQ","highpass","bandpass","notch","allpass","disabled","Object","values","filterType","channelCounts","2","4","6","ChannelMerger","createChannelMerger","Array","fill","channel","alignItems","flexDirection","keys","channelCount","ChannelSplitter","createChannelSplitter","numberOfOutputs","Comparator","ConstantSource","offset","createConstantSource","clampDelayTime","delayTime","Delay","maxDelayTime","createDelay","maxValue","minValue","SliderType","Slider","valueShown","Log","lin2log","change","newValue","log10","log2lin","float32toDb","abs","DelayEffect","feedback","mix","dry","wet","delayNode","feedbackNode","setTargetAtTime","currentTime","cos","PI","toFixed","Destination","destination","DynamicsCompressor","attack","knee","ratio","release","threshold","createDynamicsCompressor","BANDS_OCTAVES","octaveBandwidthToQ","bandwidth","frequencyRatio","sqrt","Equalizer","gains","filters","index","isLowShelf","isHighShelf","concat","reduce","produce","draft","floor","label","FlowContextMenu","subitem","Gain","Gate","isOn","toggleOn","repeat","toggleOff","onMouseDown","onMouseUp","onKeyDown","onKeyUp","Toggle","labelOff","labelOn","InputSwitch","A","B","toggleInput","NoteSymbol","NoteValue","NOTES","assertTwelfthValid","twelfth","RangeError","getNoteFrequency","octave","assertOctaveValid","getNoteName","keyBlack","keyWhite","Keyboard","gate","setNote","noteFrequency","playNote","stopNote","onMouseLeave","onMouseEnter","DPI_RATIO","devicePixelRatio","drawMeter","levels","setTransform","font","textAlign","textBaseline","save","clearRect","restore","MAX_LEVEL","significant","rulerHeight","rulerWidth","levelText","groupY","lineX","WIDTH","textY","fillText","groupX","level","levelIndex","t","decibels","hue","lightness","Meter","levelsRef","channels","setChannels","canvasWidth","handleMessage","payload","onmessage","slice","BUCKETS","noteStyle","fontFamily","fontSize","lineHeight","padding","Metronome","beatsPerMeasure","beatsPerMinute","notes","Quarter","quarterNoteDurationInSeconds","measureDurationInSeconds","createBuffer","getChannelData","note","noteDurationInSeconds","noteDurationInSamples","notesPerMeasure","phase","j","sample","maxGain","gainAttack","sin","loopEnd","toggleNote","n","Whole","Half","Eight","Sixteenth","color","NoiseType","Noise","White","Pink","Brown","NotGate","OrGate","Oscillator","frequencyDetuned","createOscillator","modifierStyles","octaveStyles","verticalAlign","accidentalStyles","transform","Note","split","name","accidental","OscillatorNote","OutputSwitch","toggleOutput","Rectifier","HalfWave","FullWave","SampleAndHold","sampleAndHold","HoldTime","Sign","StereoPanner","pan","createStereoPanner","inputStyle","Transformer","inputMax","inputMin","outputMax","outputMin","WaveShaper","oversample","curveFn","setCurveFn","lastValidCurveFn","setLastValidCurveFn","createWaveShaper","curve","Function","updateCurve","flexWrap","rows","XorGate","nodeTypes","Quantizer","getEdgeWithColor","params","assign","waitForInitialNodes","initialElements","audioNodes","nodesWithConnections","isEdge","nodeIds","nodeId","resolve","setTimeout","snapToGrid","Flow","tryingToConnect","setTryingToConnect","onElementsConnect","useOnConnect","onEdgeRemove","useOnEdgeRemove","onNodeRemove","useOnNodeRemove","onLoad","reactFlowInstance","isNode","onMoveEnd","onConnectStart","onConnectStop","onConnect","addEdge","onElementsRemove","elementsToRemove","removeElements","onEdgeUpdate","oldEdge","newConnection","onNodeDragStop","draggedNode","element","zoom","onPaneClick","onPaneContextMenu","data-connecting-handletype","handleType","defaultPosition","defaultZoom","onlyRenderVisibleElements","selectNodesOnDrag","snapGrid","zIndex","gap","textareaStyles","resize","controlsStyles","transformOrigin","getDefaultProject","Project","setId","visible","setVisible","drawerStyles","transition","getDrawerStyles","project","atob","location","hash","JSON","parse","btoa","stringify","__rf","clearProject","defaultProject","toggleProjectDrawer","marginRight","App","property","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0a577894.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"6fe4cbeb7216dd5f91c3.worklet.js\";","module.exports = __webpack_public_path__ + \"3c60d6738f1135879fc6.worklet.js\";","module.exports = __webpack_public_path__ + \"d7691c746ba495f49384.worklet.js\";","module.exports = __webpack_public_path__ + \"ee2ccda5b07e710428d9.worklet.js\";","module.exports = __webpack_public_path__ + \"7609024a0dfa6519ee36.worklet.js\";","module.exports = __webpack_public_path__ + \"bb20777439c70ae891d8.worklet.js\";","module.exports = __webpack_public_path__ + \"f6855cba3f25275ae3e9.worklet.js\";","module.exports = __webpack_public_path__ + \"64d1892a3999c7d09079.worklet.js\";","module.exports = __webpack_public_path__ + \"3e046540000f010da2f7.worklet.js\";","module.exports = __webpack_public_path__ + \"2fd20acac10a566f9a75.worklet.js\";","module.exports = __webpack_public_path__ + \"0d5b39bea6f7ad721ba4.worklet.js\";","module.exports = __webpack_public_path__ + \"b90471baecaa5b3e21eb.worklet.js\";","module.exports = __webpack_public_path__ + \"5fec77c4657f1a14234a.worklet.js\";","module.exports = __webpack_public_path__ + \"47be22378c03e68e41b9.worklet.js\";","import { createContext, useContext } from \"react\";\n\nexport const AudioContext = createContext<AudioContext>(null!);\n\nexport function useAudioContext() {\n  return useContext(AudioContext);\n}\n","/* eslint-disable import/no-webpack-loader-syntax */\nimport React, { useCallback, useEffect, useMemo, useState } from \"react\";\nimport { AudioContext } from \"context/AudioContext\";\n\nimport ADSRWorkletProcessor from \"worklet-loader!worklets/adsr-processor.worklet.ts\";\nimport AndGateWorkletProcessor from \"worklet-loader!worklets/and-gate-processor.worklet.ts\";\nimport ComparatorWorkletProcessor from \"worklet-loader!worklets/comparator-processor.worklet.ts\";\nimport GateWorkletProcessor from \"worklet-loader!worklets/gate-processor.worklet.ts\";\nimport MeterWorkletProcessor from \"worklet-loader!worklets/meter-processor.worklet.ts\";\nimport NoiseWorkletProcessor from \"worklet-loader!worklets/noise-processor.worklet.ts\";\nimport NotGateWorkletProcessor from \"worklet-loader!worklets/not-gate-processor.worklet.ts\";\nimport OrGateWorkletProcessor from \"worklet-loader!worklets/or-gate-processor.worklet.ts\";\nimport QuantizerWorkletProcessor from \"worklet-loader!worklets/quantizer-processor.worklet.ts\";\nimport RectifierWorkletProcessor from \"worklet-loader!worklets/rectifier-processor.worklet.ts\";\nimport SampleAndHoldWorkletProcessor from \"worklet-loader!worklets/sample-and-hold-processor.worklet.ts\";\nimport SignWorkletProcessor from \"worklet-loader!worklets/sign-processor.worklet.ts\";\nimport TransformerWorkletProcessor from \"worklet-loader!worklets/transformer-processor.worklet.ts\";\nimport XorGateWorkletProcessor from \"worklet-loader!worklets/xor-gate-processor.worklet.ts\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nfunction Audio({ children }: Props) {\n  const [ready, setReady] = useState(false);\n\n  const context = useMemo(() => {\n    try {\n      if (!window.AudioContext) {\n        // @ts-ignore\n        window.AudioContext = window.webkitAudioContext;\n      }\n\n      return new window.AudioContext();\n    } catch {}\n  }, []);\n\n  useEffect(() => {\n    const awaitAudioWorkletProcessors = async (context: AudioContext) => {\n      await Promise.all([\n        context.audioWorklet.addModule(ADSRWorkletProcessor),\n        context.audioWorklet.addModule(AndGateWorkletProcessor),\n        context.audioWorklet.addModule(ComparatorWorkletProcessor),\n        context.audioWorklet.addModule(GateWorkletProcessor),\n        context.audioWorklet.addModule(MeterWorkletProcessor),\n        context.audioWorklet.addModule(NoiseWorkletProcessor),\n        context.audioWorklet.addModule(NotGateWorkletProcessor),\n        context.audioWorklet.addModule(OrGateWorkletProcessor),\n        context.audioWorklet.addModule(QuantizerWorkletProcessor),\n        context.audioWorklet.addModule(RectifierWorkletProcessor),\n        context.audioWorklet.addModule(SampleAndHoldWorkletProcessor),\n        context.audioWorklet.addModule(SignWorkletProcessor),\n        context.audioWorklet.addModule(TransformerWorkletProcessor),\n        context.audioWorklet.addModule(XorGateWorkletProcessor),\n      ]);\n      setReady(true);\n    };\n\n    if (context) {\n      awaitAudioWorkletProcessors(context);\n    }\n  }, [context]);\n\n  const resume = useCallback(() => {\n    if (context?.state === \"suspended\") {\n      context.resume();\n    }\n  }, [context]);\n\n  if (!context) {\n    return <div>Sorry, but the Web Audio API is not supported by your browser.</div>;\n  }\n\n  if (!ready) {\n    // TODO add loader\n    return null;\n  }\n\n  return (\n    <div onClick={resume}>\n      <AudioContext.Provider value={context}>{children}</AudioContext.Provider>\n    </div>\n  );\n}\n\nexport default Audio;\n","import { createContext, useContext } from \"react\";\n\ninterface ContextMenuContextType {\n  getRect: () => ClientRect | DOMRect;\n  hide: () => void;\n  show: (foo: any) => void;\n  setRect: (bbox: ClientRect | DOMRect) => void;\n}\n\nexport const ContextMenuContext = createContext<ContextMenuContextType>(null!);\n\nexport function useContextMenu() {\n  return useContext(ContextMenuContext);\n}\n","import React, { useMemo, useRef } from \"react\";\nimport { ContextMenuContext } from \"context/ContextMenuContext\";\nimport { usePopper } from \"react-popper\";\nimport { VirtualElement } from \"@popperjs/core\";\n\ninterface Props {\n  children?: React.ReactNode;\n}\n\nfunction ContextMenu({ children }: Props) {\n  const [showPopper, setShowPopper] = React.useState(null);\n  const [popperElement, setPopperElement] = React.useState<HTMLDivElement>();\n  const virtualReference = useRef<VirtualElement>();\n  const { styles, attributes } = usePopper(virtualReference.current, popperElement, { placement: \"bottom-start\" });\n\n  const context = useMemo(\n    () => ({\n      getRect: () => {\n        if (virtualReference.current == null) {\n          return { top: 0, left: 0, right: 0, bottom: 0, width: 0, height: 0 };\n        }\n\n        return virtualReference.current.getBoundingClientRect();\n      },\n      hide: () => {\n        setShowPopper(null);\n      },\n      show: (foo: any) => {\n        setShowPopper(foo);\n      },\n      setRect: (bbox: any) => {\n        virtualReference.current = {\n          getBoundingClientRect: () => bbox,\n        };\n      },\n      setPopperElement,\n    }),\n    []\n  );\n\n  return (\n    <ContextMenuContext.Provider value={context}>\n      {children}\n      <div ref={node => node && setPopperElement(node)} style={styles.popper} {...attributes.popper}>\n        {showPopper}\n      </div>\n    </ContextMenuContext.Provider>\n  );\n}\n\nexport default ContextMenu;\n","import React, { useMemo, useRef } from \"react\";\nimport { AnyAudioNode, NodeContext, NodeContextType, isComplexAudioNode } from \"context/NodeContext\";\n\ninterface Props {\n  children: React.ReactNode;\n}\n\nexport function nodeCleanup(node: AnyAudioNode) {\n  if (isComplexAudioNode(node)) {\n    (node.input as any)?.stop?.();\n    (node.output as any)?.stop?.();\n    node.input?.disconnect();\n    node.output?.disconnect();\n  } else {\n    (node as any).stop?.();\n    node.disconnect();\n\n    if (node instanceof AudioWorkletNode) {\n      node.port.postMessage(\"stop\");\n    }\n  }\n}\n\nfunction Nodes({ children }: Props) {\n  const nodes = useRef<NodeContextType[\"nodes\"]>({});\n  const context: NodeContextType = useMemo(\n    () => ({\n      addNode: (id, node) => {\n        nodes.current[id] = node;\n      },\n      getNode: id => nodes.current[id],\n      nodes: nodes.current,\n      removeNode: id => {\n        nodeCleanup(nodes.current[id]);\n        delete nodes.current[id];\n      },\n    }),\n    []\n  );\n\n  return (\n    <div>\n      <NodeContext.Provider value={context}>{children}</NodeContext.Provider>\n    </div>\n  );\n}\n\nexport default Nodes;\n","import { useCallback } from \"react\";\nimport { Connection, Edge } from \"react-flow-renderer\";\nimport { AnyAudioNode, isComplexAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { nodeCleanup } from \"components/Nodes\";\n\nfunction getChannelIndex(handle: string): number {\n  return +(handle.match(/-(\\d+)$/)?.[1] ?? 0);\n}\n\ninterface ResolvedConnection {\n  inputIndex?: number;\n  outputIndex?: number;\n  source: AudioNode;\n  target: AudioNode | AudioParam;\n}\n\nfunction resolveConnection(\n  connection: Edge | Connection,\n  getNode: (id: string) => AnyAudioNode\n): ResolvedConnection | never {\n  if (!connection.source || !connection.target || !connection.sourceHandle || !connection.targetHandle) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  const connectToTargetNode = connection.targetHandle.startsWith(\"input\");\n  const connectToSourceNode = connection.sourceHandle.startsWith(\"output\");\n  let source = getNode(connection.source);\n  let target = getNode(connection.target);\n\n  if (isComplexAudioNode(source) && connectToSourceNode) {\n    if (!source.output) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    source = source.output;\n  }\n\n  if (isComplexAudioNode(target) && connectToTargetNode) {\n    if (!target.input) {\n      throw new Error(\"Invalid connection\");\n    }\n\n    target = target.input;\n  }\n\n  if (!source || !target) {\n    throw new Error(\"Invalid connection\");\n  }\n\n  return {\n    inputIndex: connectToTargetNode ? getChannelIndex(connection.targetHandle) : undefined,\n    outputIndex: getChannelIndex(connection.sourceHandle),\n    source: connectToSourceNode\n      ? source\n      : // @ts-ignore\n        source[connection.sourceHandle],\n    target: connectToTargetNode\n      ? target\n      : // @ts-ignore\n        target[connection.targetHandle],\n  };\n}\n\nexport function connectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.connect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.connect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\nexport function disconnectNodes(connection: Edge | Connection, getNode: (id: string) => AnyAudioNode) {\n  try {\n    const { inputIndex, outputIndex, source, target } = resolveConnection(connection, getNode);\n    if (inputIndex != null) {\n      // @ts-ignore\n      source.disconnect(target, outputIndex, inputIndex);\n    } else {\n      // @ts-ignore\n      source.disconnect(target, outputIndex);\n    }\n  } catch (e) {\n    console.error(e);\n  }\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnConnect() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((connection: Edge | Connection) => connectNodes(connection, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnEdgeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((edge: Edge) => disconnectNodes(edge, getNode), [getNode]);\n}\n\n// FIXME This should be handled on changes to ReactFlowRenderer state instead.\nexport function useOnNodeRemove() {\n  const { getNode } = useNodeContext();\n\n  return useCallback((nodeId: string) => nodeCleanup(getNode(nodeId)), [getNode]);\n}\n","import { createContext, DependencyList, useContext, useEffect, useMemo } from \"react\";\nimport { useStoreState } from \"react-flow-renderer\";\nimport { connectNodes, disconnectNodes } from \"utils/handles\";\nimport { AudioContext } from \"context/AudioContext\";\n\nexport type ComplexAudioNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined> = {\n  input?: Input;\n  output?: Output;\n};\n\nexport type AnyAudioNode = AudioNode | ComplexAudioNode<AudioNode, AudioNode>;\n\nexport type NodeContextType = {\n  addNode: (id: string, node: AnyAudioNode) => void;\n  getNode: (id: string) => AnyAudioNode;\n  nodes: Record<string, AnyAudioNode>;\n  removeNode: (id: string) => void;\n};\n\ninterface NodeFactory<T> {\n  (context: AudioContext): T;\n}\n\ninterface ComplexNodeFactory<Input extends AudioNode | undefined, Output extends AudioNode | undefined> {\n  (context: AudioContext): ComplexAudioNode<Input, Output>;\n}\n\nexport function isComplexAudioNode(node: AnyAudioNode): node is ComplexAudioNode<AudioNode, AudioNode> {\n  return node && \"input\" in node && \"output\" in node;\n}\n\nexport const NodeContext = createContext<NodeContextType>(null!);\n\nexport function useNodeContext() {\n  return useContext(NodeContext);\n}\n\nexport function useNode<T extends AudioNode>(id: string, nodeFactory: NodeFactory<T>, dependencies?: DependencyList): T;\nexport function useNode<Input extends AudioNode | undefined, Output extends AudioNode | undefined>(\n  id: string,\n  nodeFactory: ComplexNodeFactory<Input, Output>,\n  dependencies?: DependencyList\n): ComplexAudioNode<Input, Output>;\nexport function useNode(\n  id: string,\n  nodeFactory: ComplexNodeFactory<AudioNode, AudioNode>,\n  dependencies: DependencyList = []\n) {\n  const context = useContext(AudioContext);\n  const { addNode, getNode, removeNode } = useNodeContext();\n  const edges = useStoreState(store => store.edges);\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const node = useMemo(() => nodeFactory(context), dependencies);\n\n  useEffect(() => {\n    addNode(id, node);\n\n    // try reconnecting\n    const edgesToConnect = edges.filter(edge => edge.source === id || edge.target === id);\n    edgesToConnect.forEach(edge => connectNodes(edge, getNode));\n\n    return () => {\n      edgesToConnect.forEach(edge => disconnectNodes(edge, getNode));\n      removeNode(id);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [addNode, getNode, node, id, removeNode]);\n\n  return node;\n}\n","import { createContext, useContext } from \"react\";\nimport { ProjectState } from \"components/Project\";\n\nexport const ProjectContext = createContext<ProjectState>(null!);\n\nexport function useProject() {\n  return useContext(ProjectContext);\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport { Elements, Handle, Node as FlowNode, NodeProps, Position } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { GRID_SIZE } from \"components/Flow\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { useProject } from \"context/ProjectContext\";\n\ninterface Props extends Omit<React.HTMLProps<HTMLDivElement>, \"id\" | \"title\"> {\n  children?: React.ReactNode;\n  id: NodeProps[\"id\"];\n  inputs?: string[];\n  outputs?: string[];\n  title?: React.ReactNode;\n  type: NodeProps[\"type\"];\n}\n\nfunction Node({ children, id, inputs, outputs, title, type, ...props }: Props) {\n  const { elements, onChangeElementFactory, setElements } = useProject();\n  const contextMenu = useContextMenu();\n  const node = elements.find(node => node.id === id) as FlowNode;\n  const handleStyle = useMemo(\n    () => ({\n      background: `#${id.substr(-6)}`,\n    }),\n    [id]\n  );\n\n  const cloneNode = useCallback(() => {\n    if (!node) {\n      throw new Error(\"Node does not exist - this should never happen\");\n    }\n\n    const id = `${type}-${uuidv4()}`;\n    const onChange = onChangeElementFactory(id);\n    const newNode = {\n      id,\n      data: { ...node.data, onChange },\n      type: node.type,\n      position: {\n        x: node.position.x + GRID_SIZE,\n        y: node.position.y + GRID_SIZE,\n      },\n    };\n    setElements((elements: Elements) => [...elements, newNode]);\n    contextMenu.hide();\n  }, [contextMenu, onChangeElementFactory, node, setElements, type]);\n\n  const onClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(\n        <ul className=\"contextMenu\">\n          <li onClick={cloneNode}>Clone</li>\n        </ul>\n      );\n    },\n    [cloneNode, contextMenu]\n  );\n\n  return (\n    <div className=\"customNode\" title={id} onClick={onClick} onContextMenu={onContextMenu} {...props}>\n      <div className=\"customNode_header\">{title ?? type}</div>\n      <div className=\"customNode_body\">\n        {inputs && (\n          <div className=\"customNode_inputs\">\n            {inputs.map(input => (\n              <div key={input} className=\"customNode_item\">\n                <Handle id={input} position={Position.Left} style={handleStyle} type=\"target\" />\n                {input}\n              </div>\n            ))}\n          </div>\n        )}\n        {outputs && (\n          <div className=\"customNode_outputs\">\n            {outputs.map(output => (\n              <div key={output} className=\"customNode_item\">\n                <Handle id={output} position={Position.Right} style={handleStyle} type=\"source\" />\n                {output}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      {children}\n    </div>\n  );\n}\n\nexport default React.memo(Node);\n","export enum Mode {\n  Exponential = \"Exponential\",\n  Linear = \"Linear\",\n  Logarithmic = \"Logarithmic\",\n}\n\nexport enum Parameters {\n  AttackTime = \"attack\",\n  DecayTime = \"decay\",\n  ReleaseTime = \"release\",\n  SustainLevel = \"sustain\",\n}\n\nexport enum Stage {\n  Attack = \"Attack\",\n  Decay = \"Decay\",\n  Release = \"Release\",\n  Sustain = \"Sustain\",\n}\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode, Parameters } from \"worklets/adsr-processor.types\";\n\ninterface ADSRNode extends Required<ComplexAudioNode<undefined, undefined>> {\n  [Parameters.AttackTime]: AudioParam;\n  [Parameters.DecayTime]: AudioParam;\n  gain: AudioWorkletNode;\n  gate: AudioWorkletNode;\n  [Parameters.ReleaseTime]: AudioParam;\n  [Parameters.SustainLevel]: AudioParam;\n}\n\nfunction ADSR({ data, id, selected, type }: NodeProps) {\n  const {\n    attackTime = 0.2,\n    decayTime = 0.1,\n    mode = Mode.Linear,\n    onChange,\n    releaseTime = 0.6,\n    sustainLevel = 0.7,\n    sustainOn = true,\n  } = data;\n\n  // AudioNode\n  const node = (useNode(\n    id,\n    context => {\n      const envelope = new AudioWorkletNode(context, \"adsr-processor\", {\n        processorOptions: { sustainOn, mode },\n      });\n\n      return {\n        [Parameters.AttackTime]: envelope.parameters.get(Parameters.AttackTime),\n        [Parameters.DecayTime]: envelope.parameters.get(Parameters.DecayTime),\n        gain: envelope,\n        gate: envelope,\n        input: undefined,\n        output: undefined,\n        [Parameters.ReleaseTime]: envelope.parameters.get(Parameters.ReleaseTime),\n        [Parameters.SustainLevel]: envelope.parameters.get(Parameters.SustainLevel),\n      };\n    },\n    [mode, sustainOn]\n  ) as unknown) as ADSRNode;\n\n  // AudioParam\n  useEffect(() => void (node[Parameters.AttackTime].value = attackTime), [node, attackTime]);\n  useEffect(() => void (node[Parameters.DecayTime].value = decayTime), [node, decayTime]);\n  useEffect(() => void (node[Parameters.ReleaseTime].value = releaseTime), [node, releaseTime]);\n  useEffect(() => void (node[Parameters.SustainLevel].value = sustainLevel), [node, sustainLevel]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"gate\", Parameters.AttackTime, Parameters.DecayTime, Parameters.ReleaseTime, Parameters.SustainLevel]}\n      outputs={[\"gain\"]}\n      title=\"ADSR\"\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.Exponential}>{Mode.Exponential}</option>\n              <option value={Mode.Linear}>{Mode.Linear}</option>\n              <option value={Mode.Logarithmic}>{Mode.Logarithmic}</option>\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <label>\n              <input\n                checked={sustainOn}\n                onChange={() => onChange({ sustainOn: !sustainOn })}\n                title=\"Sustain\"\n                type=\"checkbox\"\n              />\n              sustain on\n            </label>\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ attackTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Attack time\"\n              type=\"number\"\n              value={attackTime}\n            />\n            <input\n              min={0}\n              onChange={e => onChange({ decayTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Decay time\"\n              type=\"number\"\n              value={decayTime}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              min={0}\n              onChange={e => onChange({ releaseTime: +e.target.value })}\n              step={0.05}\n              style={{ width: \"50%\" }}\n              title=\"Release time\"\n              type=\"number\"\n              value={releaseTime}\n            />\n            <input\n              max={1}\n              min={0}\n              onChange={e => onChange({ sustainLevel: +e.target.value })}\n              step={0.01}\n              style={{ width: \"50%\" }}\n              title=\"Sustain level\"\n              type=\"number\"\n              value={sustainLevel}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ADSR);\n","import { useCallback, useEffect, useRef } from \"react\";\n\ninterface Options {\n  maxFPS?: number;\n}\n\nexport default function useAnimationFrame(callback: FrameRequestCallback, options?: Options): void {\n  const previousTimeRef = useRef<DOMHighResTimeStamp>();\n  const requestRef = useRef<number>();\n  const maxFPS = options?.maxFPS;\n\n  const animate = useCallback(\n    (time: DOMHighResTimeStamp): void => {\n      if (previousTimeRef.current != null) {\n        const deltaTime = time - previousTimeRef.current;\n        if (!maxFPS || deltaTime > 1000 / maxFPS) {\n          callback(deltaTime);\n          previousTimeRef.current = time;\n        }\n      } else {\n        callback(0);\n        previousTimeRef.current = time;\n      }\n\n      requestRef.current = requestAnimationFrame(animate);\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    [callback]\n  );\n\n  useEffect(() => {\n    requestRef.current = requestAnimationFrame(animate);\n\n    return (): void => {\n      if (requestRef.current != null) {\n        cancelAnimationFrame(requestRef.current);\n      }\n    };\n  }, [animate]);\n}\n","import React, { useCallback, useRef } from \"react\";\nimport { DataType } from \"components/nodes/Analyser/index\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\n\ninterface OwnProps {\n  node: AnalyserNode;\n  paused: boolean;\n  type: DataType;\n}\n\ntype Props = OwnProps & React.ComponentProps<\"canvas\">;\n\nfunction drawTimeDomainData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, 256);\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  context.moveTo(x, height - ((data[0] / 128.0) * height) / 2);\n  for (let i = 1; i < bufferLength; i++) {\n    const y = ((data[i] / 128.0) * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction drawFrequencyData(context: CanvasRenderingContext2D, data: Uint8Array) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const barWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.fillStyle = \"#00c800\";\n  for (let i = 0; i < bufferLength; i++) {\n    const barHeight = height * (data[i] / 255.0);\n    const y = height - barHeight;\n    context.fillRect(x, y, barWidth, barHeight);\n    x += barWidth;\n  }\n}\n\nfunction Visualiser({ node, paused, type, ...canvasProps }: Props) {\n  const audioData = useRef(new Uint8Array(node.frequencyBinCount));\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  const draw = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    if (type === DataType.TimeDomain) {\n      drawTimeDomainData(context, audioData.current);\n    } else if (type === DataType.Frequency) {\n      drawFrequencyData(context, audioData.current);\n    }\n  }, [type]);\n\n  const getData = useCallback(() => {\n    const bufferLength = node.frequencyBinCount;\n    const dataArray = new Uint8Array(bufferLength);\n    if (type === DataType.TimeDomain) {\n      node.getByteTimeDomainData(dataArray);\n    } else if (type === DataType.Frequency) {\n      node.getByteFrequencyData(dataArray);\n    }\n    audioData.current = dataArray;\n  }, [node, type]);\n\n  const tick = useCallback(() => {\n    if (!paused) {\n      getData();\n      draw();\n    }\n  }, [draw, getData, paused]);\n\n  useAnimationFrame(tick);\n\n  return <canvas ref={canvasRef} style={{ display: \"block\" }} {...canvasProps} />;\n}\n\nexport default React.memo(Visualiser);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Visualiser from \"./Visualiser\";\nimport Node from \"components/Node\";\n\nexport enum DataType {\n  Frequency = \"Frequency\",\n  TimeDomain = \"Time Domain\",\n}\n\nfunction Analyser({ data, id, selected, type: nodeType }: NodeProps) {\n  const { fftSizeExp = 11, onChange, paused = false, type = DataType.TimeDomain } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createAnalyser());\n\n  // AudioParam\n  useEffect(() => void (node.fftSize = Math.pow(2, fftSizeExp)), [node, fftSizeExp]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"fftSize\"]} outputs={[\"output\"]} title={`Analyser: ${type}`} type={nodeType}>\n      <div className=\"customNode_item\">\n        <Visualiser type={type} node={node} paused={paused} height={64} width={256} />\n      </div>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              type=\"range\"\n              max=\"15\"\n              min=\"5\"\n              onChange={e => onChange({ fftSizeExp: +e.target.value })}\n              step={1}\n              value={fftSizeExp}\n            />\n            {Math.pow(2, fftSizeExp)}\n          </div>\n          <div className=\"customNode_item\" style={{ justifyContent: \"space-between\" }}>\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={DataType.Frequency}>{DataType.Frequency}</option>\n              <option value={DataType.TimeDomain}>{DataType.TimeDomain}</option>\n            </select>\n            <label>\n              <input checked={paused} onChange={e => onChange({ paused: !paused })} title=\"Pause\" type=\"checkbox\" />\n              Paused\n            </label>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Analyser);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AndGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"and-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: AND\" type={type} />;\n}\n\nexport default React.memo(AndGate);\n","import React, { useCallback, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction AudioBufferSource({ data, id, selected, type }: NodeProps) {\n  const { loop = true, onChange } = data;\n  const activeBufferSource = useRef<AudioBufferSourceNode>();\n\n  // TODO buffer source -> gain and swap buffer\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  const linkBufferSource = useCallback(\n    (bufferSource: AudioBufferSourceNode) => {\n      // cleanup previous\n      activeBufferSource.current?.disconnect();\n      activeBufferSource.current = bufferSource;\n\n      // start new\n      activeBufferSource.current.connect(node);\n    },\n    [node]\n  );\n  const start = useCallback(() => {\n    if (!activeBufferSource.current) {\n      return;\n    }\n\n    const bufferSource = node.context.createBufferSource();\n    bufferSource.buffer = activeBufferSource.current.buffer;\n    bufferSource.loop = loop;\n\n    linkBufferSource(bufferSource);\n    activeBufferSource.current.start();\n  }, [node, loop, linkBufferSource]);\n  const stop = useCallback(() => {\n    try {\n      activeBufferSource.current?.stop();\n    } catch {}\n  }, []);\n\n  const handleNewFile = useCallback(\n    async (file: File) => {\n      const bufferSource = node.context.createBufferSource();\n      bufferSource.buffer = await node.context.decodeAudioData(await file.arrayBuffer());\n      bufferSource.loop = loop;\n\n      linkBufferSource(bufferSource);\n    },\n    [node, loop, linkBufferSource]\n  );\n\n  const handleChange = useCallback(\n    e => {\n      e.preventDefault();\n      handleNewFile(e.target.files[0]);\n    },\n    [handleNewFile]\n  );\n  const handleDragOver = useCallback(e => void e.preventDefault(), []);\n  const handleDrop = useCallback(\n    async e => {\n      e.preventDefault();\n      const file: File = [...e.dataTransfer.items]\n        .filter((item: DataTransferItem) => item.kind === \"file\")[0]\n        .getAsFile();\n      handleNewFile(file);\n    },\n    [handleNewFile]\n  );\n\n  return (\n    <Node\n      id={id}\n      outputs={[\"output\"]}\n      title=\"Buffer Source\"\n      type={type}\n      onDragOver={handleDragOver}\n      onDrop={handleDrop}\n    >\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <button onClick={start}>Play</button>\n          <button onClick={stop}>Stop</button>\n        </div>\n        {selected && (\n          <>\n            <div className=\"customNode_item\">\n              <input onChange={handleChange} type=\"file\" />\n            </div>\n            <div className=\"customNode_item\">\n              <label>\n                <input checked={loop} onChange={() => onChange({ loop: !loop })} title=\"Loop\" type=\"checkbox\" />\n                Loop\n              </label>\n            </div>\n          </>\n        )}\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(AudioBufferSource);\n","import React, { useEffect, useRef } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nenum BiquadFilterType {\n  lowpass = \"lowpass\",\n  highpass = \"highpass\",\n  bandpass = \"bandpass\",\n  lowshelf = \"lowshelf\",\n  highshelf = \"highshelf\",\n  peaking = \"peaking\",\n  notch = \"notch\",\n  allpass = \"allpass\",\n}\n\nfunction drawFrequencyResponse(context: CanvasRenderingContext2D, data: Float32Array, node: BiquadFilterNode) {\n  let x = 0;\n  const height = context.canvas.height;\n  const width = context.canvas.width;\n  const bufferLength = data.length;\n  const sliceWidth = width / bufferLength;\n\n  context.fillStyle = \"#001400\";\n  context.fillRect(0, 0, width, height);\n\n  context.lineWidth = 1;\n  context.strokeStyle = \"#ffffff77\";\n  context.beginPath();\n  context.moveTo((node.frequency.value / (node.context.sampleRate / 2)) * width, 0);\n  context.lineTo((node.frequency.value / (node.context.sampleRate / 2)) * width, height);\n  context.stroke();\n  context.closePath();\n\n  context.lineWidth = 2;\n  context.strokeStyle = \"#00c800\";\n  context.beginPath();\n  for (let i = 0; i < bufferLength; i++) {\n    const y = (data[i] * height) / 2;\n    context.lineTo(x, height - y);\n    x += sliceWidth;\n  }\n  context.stroke();\n}\n\nfunction BiquadFilter({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, gain = 0, frequency = 350, Q = 1, onChange, type = BiquadFilterType.lowpass } = data;\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n\n  // AudioNode\n  const node = useNode(id, context => context.createBiquadFilter());\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.gain.value = gain), [node, gain]);\n  useEffect(() => void (node.Q.value = Q), [node, Q]);\n  useEffect(() => void (node.type = type), [node, type]);\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    const frequencies = new Float32Array(node.context.sampleRate / 200).map((_, i) => i * 100);\n    const magnitudes = new Float32Array(frequencies.length);\n    const phases = new Float32Array(frequencies.length);\n\n    // This only gets frequency response based on the filter's own AudioParams\n    // TODO figure out a way to get frequency response for connected AudioParams\n    node.getFrequencyResponse(frequencies, magnitudes, phases);\n\n    drawFrequencyResponse(context, magnitudes, node);\n  }, [node, detune, gain, frequency, Q, selected, type]);\n\n  const canUseGain = [BiquadFilterType.lowshelf, BiquadFilterType.highshelf, BiquadFilterType.peaking].includes(type);\n  const canUseQ = [\n    BiquadFilterType.lowpass,\n    BiquadFilterType.highpass,\n    BiquadFilterType.bandpass,\n    BiquadFilterType.peaking,\n    BiquadFilterType.notch,\n    BiquadFilterType.allpass,\n  ].includes(type);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"detune\", \"frequency\", \"gain\", \"Q\"]}\n      outputs={[\"output\"]}\n      title={`Filter: ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min={-100}\n              max={100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min={10}\n              max={node.context.sampleRate / 2}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              step={1}\n              title={`Frequency: ${frequency} Hz`}\n              type=\"range\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseGain}\n              min={-40}\n              max={40}\n              onChange={e => onChange({ gain: +e.target.value })}\n              step={0.1}\n              title={`Gain: ${gain} dB`}\n              type=\"range\"\n              value={gain}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              disabled={!canUseQ}\n              min={0.0001}\n              max={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 10 : 1000}\n              onChange={e => onChange({ Q: +e.target.value })}\n              step={[BiquadFilterType.lowpass, BiquadFilterType.highpass].includes(type) ? 0.1 : 10}\n              title={`Q: ${Q}`}\n              type=\"range\"\n              value={Q}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} value={type}>\n              {Object.values(BiquadFilterType).map(filterType => (\n                <option key={filterType} value={filterType}>\n                  {filterType}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <canvas ref={canvasRef} height={64} width={256} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(BiquadFilter);\n","export const channelCounts = {\n  2: \"Stereo\",\n  4: \"Quad\",\n  6: \"5.1\",\n};\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelMerger({ data, id, selected, type }: NodeProps) {\n  const { inputs = 2, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelMerger(inputs), [inputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={Array(node.numberOfInputs)\n        .fill(0)\n        .map((_, channel) => `input-${channel}`)}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={inputs === +channelCount}\n                  onChange={e => onChange({ inputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelMerger);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { channelCounts } from \"utils/channels\";\n\nfunction ChannelSplitter({ data, id, selected, type }: NodeProps) {\n  const { onChange, outputs = 2 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createChannelSplitter(outputs), [outputs]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\"]}\n      outputs={Array(node.numberOfOutputs)\n        .fill(0)\n        .map((_, channel) => `output-${channel}`)}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ alignItems: \"flex-start\", flexDirection: \"column\" }}>\n            {Object.keys(channelCounts).map(channelCount => (\n              <label key={channelCount} title=\"Channel configuration\">\n                <input\n                  checked={outputs === +channelCount}\n                  onChange={e => onChange({ outputs: +e.target.value })}\n                  type=\"radio\"\n                  value={+channelCount}\n                />{\" \"}\n                {/* @ts-ignore */}\n                {channelCounts[channelCount]}\n              </label>\n            ))}\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ChannelSplitter);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Comparator({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"comparator-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Comparator\" type={type} />;\n}\n\nexport default React.memo(Comparator);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction ConstantSource({ data, id, selected, type }: NodeProps) {\n  const { offset = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => (node.offset.value = offset), [node, offset]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Constant: ${offset}`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ offset: +e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Offset\"\n              type=\"number\"\n              value={offset}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(ConstantSource);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction clampDelayTime(delayTime: number) {\n  return Math.max(0.001, Math.min(179.999, delayTime));\n}\n\nfunction Delay({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 1, maxDelayTime = 1, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDelay(clampDelayTime(maxDelayTime)), [maxDelayTime]);\n\n  // AudioParam\n  useEffect(() => void (node.delayTime.value = delayTime), [node, delayTime]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"delayTime\"]} outputs={[\"output\"]} title={`Delay: ${delayTime} s`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={node.delayTime.maxValue}\n              min={node.delayTime.minValue}\n              step={clampDelayTime(maxDelayTime) / 10}\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ maxDelayTime: +e.target.value })}\n              max={0}\n              min={180}\n              title=\"Max delay\"\n              type=\"number\"\n              value={clampDelayTime(maxDelayTime)}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Delay);\n","import React, { useCallback } from \"react\";\n\ninterface Props\n  extends Omit<React.HTMLProps<HTMLInputElement>, \"max\" | \"min\" | \"onChange\" | \"step\" | \"type\" | \"value\"> {\n  onChange: (value: number) => void;\n  type: SliderType;\n  value: number;\n}\n\nexport enum SliderType {\n  Linear = \"Linear\",\n  Log = \"Log\",\n}\n\nfunction lin2log(value: number): number {\n  return (Math.pow(10, value) - 1) / 9;\n}\n\nfunction log2lin(value: number): number {\n  return Math.log10(1 + value * 9);\n}\n\nfunction Slider({ onChange, type, value, ...props }: Props) {\n  const min = 0;\n  const max = 1;\n  let step = 0.001;\n  let valueShown = value;\n  if (type === SliderType.Log) {\n    step = 9 / ((max - min) / step);\n    valueShown = lin2log(valueShown);\n  }\n\n  const change = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      let newValue = +e.target.value;\n      if (type === SliderType.Log) {\n        newValue = log2lin(newValue);\n      }\n\n      onChange(newValue);\n    },\n    [onChange, type]\n  );\n\n  return <input {...props} type=\"range\" max={max} min={min} step={step} onChange={change} value={valueShown} />;\n}\n\nexport default Slider;\n","export function dbToFloat32(value: number): number {\n  return Math.pow(10, value / 20);\n}\n\nexport function float32toDb(value: number): number {\n  return 20 * Math.log10(Math.abs(value));\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction DelayEffect({ data, id, selected, type }: NodeProps) {\n  const { delayTime = 0.2, feedback = 0.7, mix = 0.5, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => {\n      // Interface\n      const input = context.createGain();\n      const output = context.createGain();\n      // Mixing\n      const dry = context.createGain();\n      const wet = context.createGain();\n      // Delay\n      const delayNode = context.createDelay(1);\n      delayNode.delayTime.value = delayTime;\n      // Feedback\n      const feedbackNode = context.createGain();\n      feedbackNode.gain.setTargetAtTime(feedback, feedbackNode.context.currentTime, 0.015);\n\n      // Mix using equal power crossfade\n      dry.gain.setTargetAtTime(Math.cos(mix * 0.5 * Math.PI), dry.context.currentTime, 0.015);\n      wet.gain.setTargetAtTime(Math.cos((1.0 - mix) * 0.5 * Math.PI), wet.context.currentTime, 0.015);\n\n      // Dry\n      input.connect(dry);\n      dry.connect(output);\n      // Wet\n      input.connect(delayNode);\n      delayNode.connect(wet);\n      wet.connect(output);\n      // Feedback\n      wet.connect(feedbackNode);\n      feedbackNode.connect(delayNode);\n\n      return {\n        input,\n        output,\n      };\n    },\n    [delayTime, feedback, mix]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title={`DelayEffect`} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ mix: +e.target.value })}\n              step=\"0.01\"\n              title={`Mix: ${(1 - mix) * 100}% dry / ${mix * 100}% wet`}\n              type=\"range\"\n              value={mix}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"0\"\n              onChange={e => onChange({ delayTime: +e.target.value })}\n              step=\"0.01\"\n              title={`Delay: ${delayTime} s`}\n              type=\"range\"\n              value={delayTime}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <Slider\n              onChange={feedback => onChange({ feedback })}\n              title={`Feedback: ${float32toDb(feedback).toFixed(2)} dB`}\n              type={SliderType.Linear}\n              value={feedback}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DelayEffect);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Destination({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => context.destination);\n\n  return <Node id={id} inputs={[\"input\"]} type={type} />;\n}\n\nexport default React.memo(Destination);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction DynamicsCompressor({ data, id, selected, type }: NodeProps) {\n  const { attack = 0.003, knee = 30, onChange, ratio = 12, release = 0.25, threshold = -24 } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createDynamicsCompressor());\n\n  // AudioParam\n  useEffect(() => void (node.threshold.value = threshold), [node, threshold]);\n  useEffect(() => void (node.knee.value = knee), [node, knee]);\n  useEffect(() => void (node.ratio.value = ratio), [node, ratio]);\n  useEffect(() => void (node.attack.value = attack), [node, attack]);\n  useEffect(() => void (node.release.value = release), [node, release]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"input\", \"threshold\", \"knee\", \"ratio\", \"attack\", \"release\"]}\n      outputs={[\"output\"]}\n      type={type}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              min=\"-100\"\n              max=\"0\"\n              onChange={e => onChange({ threshold: +e.target.value })}\n              step=\"1\"\n              title={`Threshold: ${threshold} dB`}\n              type=\"range\"\n              value={threshold}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"40\"\n              onChange={e => onChange({ knee: +e.target.value })}\n              step=\"1\"\n              title={`Knee: ${knee} dB`}\n              type=\"range\"\n              value={knee}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"1\"\n              max=\"20\"\n              onChange={e => onChange({ ratio: +e.target.value })}\n              step=\"1\"\n              title={`Ratio: ${ratio} dB`}\n              type=\"range\"\n              value={ratio}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ attack: +e.target.value })}\n              step=\"0.001\"\n              title={`Attack: ${attack} s`}\n              type=\"range\"\n              value={attack}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              min=\"0\"\n              max=\"1\"\n              onChange={e => onChange({ release: +e.target.value })}\n              step=\"0.001\"\n              title={`Release: ${release} s`}\n              type=\"range\"\n              value={release}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(DynamicsCompressor);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport produce from \"immer\";\n\n// const BANDS_WINAMP = [60, 170, 310, 600, 1000, 3000, 6000, 12000, 14000, 16000];\nconst BANDS_OCTAVES = [32, 64, 125, 250, 500, 1000, 2000, 4000, 8000, 16000];\n\nfunction octaveBandwidthToQ(bandwidth: number): number {\n  const frequencyRatio = Math.pow(2, bandwidth);\n  return Math.sqrt(frequencyRatio) / (frequencyRatio - 1);\n}\n\nfunction formatFrequency(frequency: number): string {\n  if (frequency >= 1000) {\n    return `${Math.floor(frequency / 1000)}k`;\n  }\n\n  return `${frequency}`;\n}\n\ninterface EqualizerNode extends ComplexAudioNode<GainNode, GainNode> {\n  filters: BiquadFilterNode[];\n}\n\nfunction Equalizer({ data, id, selected, type }: NodeProps) {\n  const { bandwidth = 1, gains = Array(BANDS_OCTAVES.length).fill(0), onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const output = context.createGain();\n\n    const filters = BANDS_OCTAVES.map((frequency, index, frequencies) => {\n      const isLowShelf = index === 0;\n      const isHighShelf = index === frequencies.length - 1;\n      const isBandPass = !isLowShelf && !isHighShelf;\n\n      const gain = isBandPass ? gains[index] : 0;\n      const type = isLowShelf ? \"lowshelf\" : isHighShelf ? \"highshelf\" : \"peaking\";\n      const Q = octaveBandwidthToQ(bandwidth);\n\n      const filter = context.createBiquadFilter();\n      filter.frequency.value = frequency;\n      filter.gain.value = gain;\n      filter.type = type;\n      filter.Q.value = Q;\n\n      return filter;\n    });\n\n    (filters as AudioNode[]).concat(output).reduce((source, destination) => source.connect(destination), input);\n\n    return {\n      filters,\n      input,\n      output,\n    };\n  }) as unknown) as EqualizerNode;\n\n  // AudioParam;\n  useEffect(() => {\n    node.filters.forEach((filter, index) => {\n      filter.gain.setTargetAtTime(gains[index], filter.context.currentTime, 0.015);\n    });\n  }, [node, gains]);\n  useEffect(() => {\n    node.filters.forEach(filter => {\n      filter.Q.setTargetAtTime(octaveBandwidthToQ(bandwidth), filter.context.currentTime, 0.015);\n    });\n  }, [node, bandwidth]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"EQ\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <div className=\"equalizer\">\n              {node.filters.map((filter, index) => (\n                <div key={index}>\n                  <input\n                    max={12}\n                    min={-12}\n                    onChange={e =>\n                      onChange({ gains: produce(gains, (draft: number[]) => void (draft[index] = +e.target.value)) })\n                    }\n                    step={0.1}\n                    title={`Gain: ${gains[index]} dB`}\n                    type=\"range\"\n                    value={gains[index]}\n                  />\n                  {formatFrequency(filter.frequency.value)}\n                </div>\n              ))}\n            </div>\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={4}\n              min={0.5}\n              step={0.5}\n              onChange={e => onChange({ bandwidth: +e.target.value })}\n              title={`Bandwidth: ${bandwidth} octaves`}\n              type=\"range\"\n              value={bandwidth}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Equalizer);\n","import React from \"react\";\n\ninterface Props {\n  addNode: (node: string) => void;\n}\n\nconst items = [\n  {\n    items: [\n      { label: \"Audio Buffer Source\", node: \"AudioBufferSource\" },\n      { label: \"Gate\", node: \"Gate\" },\n      { label: \"Keyboard\", node: \"Keyboard\" },\n      { label: \"Metronome\", node: \"Metronome\" },\n      { label: \"Noise\", node: \"Noise\" },\n      { label: \"Oscillator\", node: \"Oscillator\" },\n      { label: \"Oscillator Note\", node: \"OscillatorNote\" },\n    ],\n    label: \"Sources\",\n  },\n  {\n    items: [{ label: \"Destination\", node: \"Destination\" }],\n    label: \"Destinations\",\n  },\n  {\n    items: [\n      { label: \"Biquad Filter\", node: \"BiquadFilter\" },\n      { label: \"Channel Merger\", node: \"ChannelMerger\" },\n      { label: \"Channel Splitter\", node: \"ChannelSplitter\" },\n      { label: \"Delay\", node: \"Delay\" },\n      { label: \"Delay Effect\", node: \"DelayEffect\" },\n      { label: \"Dynamics Compressor\", node: \"DynamicsCompressor\" },\n      { label: \"Equalizer\", node: \"Equalizer\" },\n      { label: \"Gain\", node: \"Gain\" },\n      { label: \"Quantizer\", node: \"Quantizer\" },\n      { label: \"Rectifier\", node: \"Rectifier\" },\n      { label: \"Sample and Hold\", node: \"SampleAndHold\" },\n      { label: \"Sign\", node: \"Sign\" },\n      { label: \"Stereo Panner\", node: \"StereoPanner\" },\n      { label: \"Transformer\", node: \"Transformer\" },\n      { label: \"Wave Shaper\", node: \"WaveShaper\" },\n    ],\n    label: \"Effects\",\n  },\n  {\n    items: [\n      { label: \"ADSR\", node: \"ADSR\" },\n      { label: \"Constant Source\", node: \"ConstantSource\" },\n      { label: \"Input Switch\", node: \"InputSwitch\" },\n      { label: \"Output Switch\", node: \"OutputSwitch\" },\n    ],\n    label: \"Controllers\",\n  },\n  {\n    items: [\n      { label: \"AND Gate\", node: \"AndGate\" },\n      { label: \"Comparator\", node: \"Comparator\" },\n      { label: \"NOT Gate\", node: \"NotGate\" },\n      { label: \"OR Gate\", node: \"OrGate\" },\n      { label: \"XOR Gate\", node: \"XorGate\" },\n    ],\n    label: \"Logic\",\n  },\n  {\n    items: [\n      { label: \"Analyser\", node: \"Analyser\" },\n      { label: \"Meter\", node: \"Meter\" },\n    ],\n    label: \"Analysers\",\n  },\n];\n\nfunction FlowContextMenu({ addNode }: Props) {\n  return (\n    <ul className=\"contextMenu\">\n      {items.map(item => (\n        <li key={item.label}>\n          {item.label}\n          <span>&#x276F;</span>\n          {item.items && (\n            <ul className=\"contextMenu sub\">\n              {item.items.map(subitem => (\n                <li key={subitem.label} onClick={() => addNode(subitem.node)}>\n                  {subitem.label}\n                </li>\n              ))}\n            </ul>\n          )}\n        </li>\n      ))}\n    </ul>\n  );\n}\n\nexport default React.memo(FlowContextMenu);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Slider, { SliderType } from \"components/controls/Slider\";\nimport { float32toDb } from \"utils/units\";\n\nfunction Gain({ data, id, selected, type: nodeType }: NodeProps) {\n  const { gain = 1, onChange, type = SliderType.Log } = data;\n  const title = `Gain: ${float32toDb(gain).toFixed(2)} dB`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createGain());\n\n  // AudioParam\n  useEffect(() => {\n    node.gain.setTargetAtTime(gain, node.context.currentTime, 0.015);\n  }, [node, gain]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"gain\"]} outputs={[\"output\"]} title={title} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Slider onChange={gain => onChange({ gain })} title={title} type={type} value={gain} />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={SliderType.Linear}>{SliderType.Linear}</option>\n              <option value={SliderType.Log}>{SliderType.Log}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Gain);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Gate({ data, id, type }: NodeProps) {\n  const { isOn = false, onChange } = data;\n\n  // AudioNode\n  const node = useNode(id, context => context.createConstantSource());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void node.offset.setTargetAtTime(isOn ? 1 : 0, node.context.currentTime, 0.015), [node, isOn]);\n\n  const toggleOn = useCallback(\n    (e: React.MouseEvent | React.KeyboardEvent) => {\n      if (\"repeat\" in e && e.repeat) {\n        return;\n      }\n      onChange({ isOn: true });\n    },\n    [onChange]\n  );\n  const toggleOff = useCallback(() => onChange({ isOn: false }), [onChange]);\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title=\"Gate\" type={type}>\n      <div className=\"customNode_item\">\n        <button onMouseDown={toggleOn} onMouseUp={toggleOff} onKeyDown={toggleOn} onKeyUp={toggleOff}>\n          trigger {isOn ? \"off\" : \"on\"}\n        </button>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Gate);\n","import React from \"react\";\n\ninterface Props {\n  checked: boolean;\n  labelOff?: string;\n  labelOn?: string;\n  onChange: () => void;\n}\n\nfunction Toggle({ checked, labelOff = \"off\", labelOn = \"on\", onChange }: Props) {\n  return (\n    <label className=\"toggle\">\n      <input checked={checked} onChange={onChange} type=\"checkbox\" />\n      <span className=\"option\">{labelOn}</span>\n      <span className=\"option\">{labelOff}</span>\n    </label>\n  );\n}\n\nexport default Toggle;\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface InputSwitchNode extends ComplexAudioNode<undefined, GainNode> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction InputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { input = \"A\", onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const output = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    A.connect(output);\n    B.connect(output);\n\n    return {\n      A,\n      B,\n      input: undefined,\n      output,\n    };\n  }) as unknown) as InputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (input === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, input]);\n\n  const toggleInput = useCallback(() => onChange({ input: input === \"A\" ? \"B\" : \"A\" }), [onChange, input]);\n\n  return (\n    <Node id={id} inputs={[\"A\", \"B\"]} outputs={[\"output\"]} title={`Input: ${input}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={input === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleInput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(InputSwitch);\n","const NOTES = [\"C\", \"C♯\", \"D\", \"D♯\", \"E\", \"F\", \"F♯\", \"G\", \"G♯\", \"A\", \"A♯\", \"B\"];\n\nexport enum NoteSymbol {\n  Whole = \"\" as any,\n  Half = \"\" as any,\n  Quarter = \"\" as any,\n  Sixteenth = \"\" as any,\n  Eight = \"\" as any,\n}\n\nexport enum NoteValue {\n  Whole = 1 as any,\n  Half = 2 as any,\n  Quarter = 4 as any,\n  Eight = 8 as any,\n  Sixteenth = 16 as any,\n}\n\nexport function assertOctaveValid(octave: number) {\n  if (octave < 0 || octave > 10) {\n    throw new RangeError(`Octave must be between 0 and 10, is ${octave}`);\n  }\n}\n\nexport function assertTwelfthValid(twelfth: number) {\n  if (twelfth < 0 || twelfth > 11) {\n    throw new RangeError(`Octave must be between 0 and 11, is ${twelfth}`);\n  }\n}\n\nexport function getNoteFrequency(octave: number, twelfth: number) {\n  assertOctaveValid(octave);\n  assertTwelfthValid(twelfth);\n\n  const C0 = 16.3516;\n  return C0 * Math.pow(2, octave + twelfth / 12);\n}\n\nexport function getNoteName(twelfth: number) {\n  assertTwelfthValid(twelfth);\n\n  return NOTES[twelfth];\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { getNoteFrequency } from \"utils/notes\";\nimport \"./Keyboard.css\";\n\nconst keyBlack = \"key key-black\";\nconst keyWhite = \"key key-white\";\n\ninterface KeyboardNode extends ComplexAudioNode<undefined, undefined> {\n  gate: ConstantSourceNode;\n  frequency: ConstantSourceNode;\n}\n\nfunction Keyboard({ data, id, type }: NodeProps) {\n  const { octave = 2, onChange } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    // Interface\n    const gate = context.createConstantSource();\n    const frequency = context.createConstantSource();\n\n    return {\n      frequency,\n      gate,\n      input: undefined,\n      output: undefined,\n    };\n  }) as unknown) as KeyboardNode;\n  useEffect(() => {\n    node.frequency.offset.value = 0;\n    node.frequency.start();\n    node.gate.offset.value = 0;\n    node.gate.start();\n\n    return () => {\n      node.gate.disconnect();\n      node.gate.stop();\n      node.frequency.disconnect();\n      node.frequency.stop();\n    };\n  }, [node]);\n\n  const setNote = useCallback(\n    (octave: number, twelfth: number) => {\n      const { context } = node.frequency;\n      const noteFrequency = getNoteFrequency(octave, twelfth);\n      node.frequency.offset.setTargetAtTime(noteFrequency, context.currentTime, 0.015);\n    },\n    [node]\n  );\n  const playNote = useCallback(() => void (node.gate.offset.value = 1), [node]);\n  const stopNote = useCallback(() => void (node.gate.offset.value = 0), [node]);\n\n  return (\n    <Node id={id} outputs={[\"frequency\", \"gate\"]} title={`Keyboard`} type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <div className=\"keyboard\" onMouseDown={playNote} onMouseLeave={stopNote} onMouseUp={stopNote}>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 9)}>\n              1\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave - 1, 10)}>\n              2\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave - 1, 11)}>\n              3\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 0)}>\n              4\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 1)}>\n              5\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 2)}>\n              6\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 3)}>\n              7\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 4)}>\n              8\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 5)}>\n              9\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 6)}>\n              10\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 7)}>\n              11\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 8)}>\n              12\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 9)}>\n              13\n            </button>\n            <button className={keyBlack} onMouseEnter={() => setNote(octave, 10)}>\n              14\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave, 11)}>\n              15\n            </button>\n            <button className={keyWhite} onMouseEnter={() => setNote(octave + 1, 0)}>\n              16\n            </button>\n          </div>\n        </div>\n        <div className=\"customNode_item\">\n          <input\n            min={1}\n            max={6}\n            onChange={e => onChange({ octave: +e.target.value })}\n            title=\"Octave\"\n            type=\"number\"\n            value={octave}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Keyboard);\n","import React, { useCallback, useEffect, useRef, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { float32toDb } from \"utils/units\";\nimport useAnimationFrame from \"hooks/useAnimationFrame\";\nimport { logarithmic } from \"utils/scale\";\n\nconst MAX_LEVEL = 6;\nconst MIN_LEVEL = -48;\nconst BUCKETS = MAX_LEVEL - MIN_LEVEL + 1;\nconst DPI_RATIO = window.devicePixelRatio ?? 1;\nconst LEVEL_GAP = 2;\nconst HEIGHT = 2;\nconst WIDTH = 25;\n\nfunction drawMeter(context: CanvasRenderingContext2D, levels: number[]) {\n  // high dpi\n  context.setTransform(DPI_RATIO, 0, 0, DPI_RATIO, 0, 0);\n\n  // reset\n  context.fillStyle = \"#000000\";\n  context.font = \"10px Arial\";\n  context.strokeStyle = \"#000000\";\n  context.textAlign = \"right\";\n  context.textBaseline = \"middle\";\n  context.save();\n  context.setTransform(1, 0, 0, 1, 0, 0);\n  context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  context.restore();\n\n  // rulers\n  Array(BUCKETS)\n    .fill(undefined)\n    .forEach((_, item) => {\n      const significant = [0, 6, 12, 18, 30, 42, 54].includes(item);\n      const rulerHeight = significant ? 1 : 0.5;\n      const rulerWidth = significant ? 6 : 3;\n      const levelText = `${MAX_LEVEL - item}`;\n      const groupX = 0;\n      const groupY = item * HEIGHT + 5.5;\n      const lineX = WIDTH - 8 + (significant ? 0 : 3);\n      const lineY = 0;\n      const textX = groupX + 15;\n      const textY = groupY;\n\n      if (significant) {\n        context.fillText(levelText, textX, textY);\n      }\n\n      context.lineWidth = rulerHeight;\n      context.fillRect(groupX + lineX, groupY + lineY, rulerWidth, rulerHeight);\n    });\n\n  // levels\n  levels.forEach((level, levelIndex) => {\n    Array(BUCKETS)\n      .fill(undefined)\n      .forEach((_, item) => {\n        const decibels = MAX_LEVEL - item;\n        const hue = Math.min(Math.max(120 * logarithmic(Math.max(0, -decibels / 10)), 0), 120).toFixed(0);\n        const lightness = float32toDb(level) >= decibels ? \"50%\" : \"0%\";\n\n        context.fillStyle = `hsl(${hue}, 50%, ${lightness})`;\n        context.fillRect((levelIndex + 1) * (WIDTH + LEVEL_GAP) - LEVEL_GAP, item * HEIGHT + 5, WIDTH, HEIGHT);\n      });\n  });\n}\n\ntype ChannelMessageEvent = MessageEvent<{ payload: { channels: number; id: string }; type: \"channels\" }>;\ntype LevelMessageEvent = MessageEvent<{ payload: { channel: number; id: string; level: number }; type: \"level\" }>;\n\n// TODO add peak hold\nfunction Meter({ id, type }: NodeProps) {\n  const canvasRef = useRef<HTMLCanvasElement>(null);\n  const levelsRef = useRef<number[]>([]);\n  const [channels, setChannels] = useState(1);\n\n  const canvasHeight = BUCKETS * HEIGHT + 10;\n  const canvasWidth = (WIDTH + LEVEL_GAP) * (channels + 1);\n\n  // AudioNode\n  const node = useNode(id, context => new AudioWorkletNode(context, \"meter-processor\", { numberOfOutputs: 0 }));\n\n  const handleMessage = useCallback(\n    ({ data: event }: ChannelMessageEvent | LevelMessageEvent) => {\n      if (event.type === \"channels\") {\n        if (event.payload.channels !== channels) {\n          setChannels(event.payload.channels);\n        }\n      }\n\n      if (event.type === \"level\") {\n        levelsRef.current[event.payload.channel] = event.payload.level;\n      }\n    },\n    [channels]\n  );\n  useEffect(() => {\n    node.port.onmessage = handleMessage;\n  }, [node, handleMessage]);\n\n  const tick = useCallback(() => {\n    const canvas = canvasRef.current;\n    const context = canvas?.getContext(\"2d\");\n    if (!canvas || !context) {\n      return;\n    }\n\n    drawMeter(context, levelsRef.current.slice(0, channels));\n  }, [channels]);\n\n  useAnimationFrame(tick);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} title=\"Meter\" type={type}>\n      <div className=\"customNode_editor nodrag\">\n        <div className=\"customNode_item\">\n          <canvas\n            ref={canvasRef}\n            width={DPI_RATIO * canvasWidth}\n            height={DPI_RATIO * canvasHeight}\n            style={{ height: canvasHeight, width: canvasWidth }}\n          />\n        </div>\n      </div>\n    </Node>\n  );\n}\n\nexport default React.memo(Meter);\n","export function exponential(t: number): number {\n  return (Math.pow(10, t) - 1) / 9;\n}\n\nexport function linear(t: number): number {\n  return t;\n}\n\nexport function logarithmic(t: number): number {\n  return Math.log10(1 + t * 9);\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoteSymbol, NoteValue } from \"utils/notes\";\nimport \"fonts/bravura/bravura.css\";\n\nconst noteStyle: React.CSSProperties = {\n  fontFamily: \"Bravura\",\n  fontSize: 20,\n  height: 32,\n  lineHeight: 2,\n  padding: 0,\n  width: 32,\n};\n\nfunction Metronome({ data, id, selected, type: nodeType }: NodeProps) {\n  const { beatsPerMeasure = 4, beatsPerMinute = 120, notes = [NoteValue.Quarter], onChange } = data;\n\n  // AudioNode\n  const node = useNode(\n    id,\n    context => {\n      const quarterNoteDurationInSeconds = 60 / beatsPerMinute;\n      const quarterNoteFrequency = 880;\n      const measureDurationInSeconds = quarterNoteDurationInSeconds * beatsPerMeasure;\n\n      const buffer = context.createBuffer(1, context.sampleRate * measureDurationInSeconds, context.sampleRate);\n      const channel = buffer.getChannelData(0);\n      for (let note of notes) {\n        const noteDurationInSeconds = (quarterNoteDurationInSeconds * NoteValue.Quarter) / note;\n        const noteDurationInSamples = context.sampleRate * noteDurationInSeconds;\n        const noteFrequency = (quarterNoteFrequency * note) / NoteValue.Quarter;\n        const notesPerMeasure = (beatsPerMeasure * note) / NoteValue.Quarter;\n\n        let phase = 0;\n        let gain = 1;\n        for (let i = 0; i < notesPerMeasure; i++) {\n          for (let j = 0; j < noteDurationInSamples; j++) {\n            const shouldAccent = i === 0;\n            const frequency = shouldAccent ? noteFrequency * 1.33 : noteFrequency;\n            const sample = j + Math.floor(i * noteDurationInSamples);\n            const maxGain = 1 / notes.length;\n            const gainAttack = Math.min(maxGain, j / (context.sampleRate * 0.015));\n\n            channel[sample] += Math.sin(phase) * gain;\n            phase = phase + (2 * Math.PI * frequency) / context.sampleRate;\n            gain = Math.max(gainAttack - j / noteDurationInSamples, 0);\n          }\n        }\n      }\n\n      const source = context.createBufferSource();\n      source.buffer = buffer;\n      source.loop = true;\n      source.loopEnd = measureDurationInSeconds;\n\n      return source;\n    },\n    [beatsPerMeasure, notes.length, beatsPerMinute]\n  );\n\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  const toggleNote = useCallback(\n    note => onChange({ notes: notes.includes(note) ? notes.filter((n: number) => n !== note) : notes.concat(note) }),\n    [notes, onChange]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Metronome: ${beatsPerMinute} BPM`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={208}\n              min={40}\n              onChange={e => onChange({ beatsPerMinute: +e.target.value })}\n              title=\"Beats Per Minute\"\n              type=\"number\"\n              value={beatsPerMinute}\n            />\n            <input\n              max={8}\n              min={1}\n              onChange={e => onChange({ beatsPerMeasure: +e.target.value })}\n              title=\"Beats Per Measure\"\n              type=\"number\"\n              value={beatsPerMeasure}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <span style={{ alignItems: \"center\", display: \"flex\", justifyContent: \"space-between\" }}>\n              {[NoteValue.Whole, NoteValue.Half, NoteValue.Quarter, NoteValue.Eight, NoteValue.Sixteenth].map(note => (\n                <button\n                  key={note}\n                  onClick={() => toggleNote(note)}\n                  style={{ ...noteStyle, color: notes.includes(note) ? \"#0d0\" : \"#d00\" }}\n                  title={`${NoteValue[note]} note`}\n                >\n                  {NoteSymbol[NoteValue[note] as any]}\n                </button>\n              ))}\n            </span>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Metronome);\n","export enum NoiseType {\n  Brown = \"Brown\",\n  Pink = \"Pink\",\n  White = \"White\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { NoiseType } from \"worklets/noise-processor.types\";\n\nfunction Noise({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, type = NoiseType.White } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => new AudioWorkletNode(context, \"noise-processor\", { numberOfInputs: 0, processorOptions: { type } }),\n    [type]\n  );\n\n  return (\n    <Node id={id} outputs={[\"output\"]} title={`Noise: ${type}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Type\" value={type}>\n              <option value={NoiseType.White}>{NoiseType.White}</option>\n              <option value={NoiseType.Pink}>{NoiseType.Pink}</option>\n              <option value={NoiseType.Brown}>{NoiseType.Brown}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Noise);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction NotGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"not-gate-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Gate: NOT\" type={type} />;\n}\n\nexport default React.memo(NotGate);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction OrGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"or-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: OR\" type={type} />;\n}\n\nexport default React.memo(OrGate);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Oscillator({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, frequency = 440, onChange, type = \"sine\" } = data;\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency ?? 440), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\", \"frequency\"]}\n      outputs={[\"output\"]}\n      title={`${frequencyDetuned.toFixed(2)} Hz ${type}`}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              max={20000}\n              min={0}\n              onChange={e => onChange({ frequency: +e.target.value })}\n              title=\"Frequency\"\n              type=\"number\"\n              value={frequency}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ type: e.target.value })} title=\"Wave\" value={type}>\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Oscillator);\n","import React from \"react\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\n\ninterface Props {\n  detune: number;\n  octave: number;\n  twelfth: number;\n}\n\nconst modifierStyles: React.CSSProperties = {\n  display: \"inline-block\",\n  textAlign: \"center\",\n  width: 7,\n};\nconst octaveStyles: React.CSSProperties = {\n  ...modifierStyles,\n  verticalAlign: \"sub\",\n};\nconst accidentalStyles: React.CSSProperties = {\n  ...modifierStyles,\n  transform: \"translateX(-100%)\",\n  verticalAlign: \"super\",\n};\n\nfunction Note({ detune, octave, twelfth }: Props) {\n  const [name, accidental] = getNoteName(twelfth).split(\"\");\n  const frequency = getNoteFrequency(octave, twelfth);\n  const frequencyDetuned = frequency * Math.pow(2, detune / 1200);\n\n  return (\n    <span>\n      {name}\n      <small style={octaveStyles}>{octave}</small>\n      {accidental && <small style={accidentalStyles}>{accidental}</small>}\n      &nbsp;\n      <small>\n        ({frequency.toFixed(2)} Hz\n        {detune !== 0 && <> &rarr; {frequencyDetuned.toFixed(2)} Hz</>})\n      </small>\n    </span>\n  );\n}\n\nexport default React.memo(Note);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport Note from \"components/Note\";\nimport { useNode } from \"context/NodeContext\";\nimport { getNoteFrequency, getNoteName } from \"utils/notes\";\nimport Node from \"components/Node\";\n\nfunction OscillatorNote({ data, id, selected, type: nodeType }: NodeProps) {\n  const { detune = 0, octave = 4, onChange, twelfth = 0, type = \"sine\" } = data;\n  const frequency = getNoteFrequency(octave, twelfth);\n\n  // AudioNode\n  const node = useNode(id, context => context.createOscillator());\n  useEffect(() => {\n    node.start();\n    return () => node.stop();\n  }, [node]);\n\n  // AudioParam\n  useEffect(() => void (node.detune.value = detune ?? 0), [node, detune]);\n  useEffect(() => void (node.frequency.value = frequency), [node, frequency]);\n  useEffect(() => void (node.type = type ?? \"sine\"), [node, type]);\n\n  return (\n    <Node\n      id={id}\n      inputs={[\"detune\"]}\n      outputs={[\"output\"]}\n      title={<Note detune={detune} octave={octave} twelfth={twelfth} />}\n      type={nodeType}\n    >\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max={100}\n              min={-100}\n              onChange={e => onChange({ detune: +e.target.value })}\n              step={1}\n              style={{ width: \"100%\" }}\n              title={`Detune: ${detune} cents`}\n              type=\"range\"\n              value={detune}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ twelfth: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Note\"\n              value={twelfth}\n            >\n              {Array(12)\n                .fill(0)\n                .map((_, twelfth) => (\n                  <option key={twelfth} value={twelfth}>\n                    {getNoteName(twelfth)}\n                  </option>\n                ))}\n            </select>\n            <select\n              onChange={e => onChange({ octave: +e.target.value })}\n              style={{ width: \"50%\" }}\n              title=\"Octave\"\n              value={octave}\n            >\n              {Array(11)\n                .fill(0)\n                .map((_, octave) => (\n                  <option key={octave} value={octave}>\n                    {octave}\n                  </option>\n                ))}\n            </select>\n          </div>\n          <div className=\"customNode_item\">\n            <select\n              onChange={e => onChange({ type: e.target.value })}\n              style={{ width: \"100%\" }}\n              title=\"Wave\"\n              value={type}\n            >\n              <option value=\"sawtooth\">sawtooth</option>\n              <option value=\"square\">square</option>\n              <option value=\"sine\">sine</option>\n              <option value=\"triangle\">triangle</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OscillatorNote);\n","import React, { useCallback, useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { ComplexAudioNode, useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport Toggle from \"components/controls/Toggle\";\n\ninterface OutputSwitchNode extends ComplexAudioNode<GainNode, undefined> {\n  A: GainNode;\n  B: GainNode;\n}\n\nfunction OutputSwitch({ data, id, selected, type: nodeType }: NodeProps) {\n  const { onChange, output = \"A\" } = data;\n\n  // AudioNode\n  const node = (useNode(id, context => {\n    const input = context.createGain();\n    const A = context.createGain();\n    const B = context.createGain();\n\n    input.connect(A);\n    input.connect(B);\n\n    return {\n      A,\n      B,\n      input,\n      output: undefined,\n    };\n  }) as unknown) as OutputSwitchNode;\n\n  // AudioParam\n  useEffect(() => {\n    if (output === \"A\") {\n      node.A.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n    } else {\n      node.A.gain.setTargetAtTime(0, node.A.context.currentTime, 0.015);\n      node.B.gain.setTargetAtTime(1, node.A.context.currentTime, 0.015);\n    }\n  }, [node, output]);\n\n  const toggleOutput = useCallback(() => onChange({ output: output === \"A\" ? \"B\" : \"A\" }), [onChange, output]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"A\", \"B\"]} title={`Output: ${output}`} type={nodeType}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <Toggle checked={output === \"A\"} labelOff=\"B\" labelOn=\"A\" onChange={toggleOutput} />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(OutputSwitch);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { levels = 256, max = 1, min = -1, onChange } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context => new AudioWorkletNode(context, \"quantizer-processor\", { processorOptions: { levels, max, min } }),\n    [levels, max, min]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Quantizer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ levels: +e.target.value })}\n              step={1}\n              title=\"Levels\"\n              type=\"number\"\n              value={levels}\n            />\n          </div>\n          <div className=\"customNode_item\" style={{ width: 138 }}>\n            <input\n              onChange={e => onChange({ min: +e.target.value })}\n              step={1}\n              style={{ width: \"50%\" }}\n              title=\"Min\"\n              type=\"number\"\n              value={min}\n            />\n            <input\n              onChange={e => onChange({ max: +e.target.value })}\n              style={{ width: \"50%\" }}\n              step={1}\n              title=\"Max>\"\n              type=\"number\"\n              value={max}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Mode {\n  FullWave = \"Full-wave\",\n  HalfWave = \"Half-wave\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Mode } from \"worklets/rectifier-processor.types\";\n\nfunction Rectifier({ data, id, selected, type }: NodeProps) {\n  const { mode = Mode.HalfWave, onChange } = data;\n\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"rectifier-processor\", { processorOptions: { mode } }), [mode]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Rectifier\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ mode: e.target.value })} title=\"Type\" value={mode}>\n              <option value={Mode.FullWave}>{Mode.FullWave}</option>\n              <option value={Mode.HalfWave}>{Mode.HalfWave}</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Rectifier);\n","export enum Parameters {\n  HoldTime = \"holdTime\",\n}\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\nimport { Parameters } from \"worklets/sample-and-hold-processor.types\";\n\nfunction SampleAndHold({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => {\n    const sampleAndHold = new AudioWorkletNode(context, \"sample-and-hold-processor\");\n\n    return {\n      [Parameters.HoldTime]: sampleAndHold.parameters.get(Parameters.HoldTime),\n      input: sampleAndHold,\n      output: sampleAndHold,\n    };\n  });\n\n  return <Node id={id} inputs={[\"input\", Parameters.HoldTime]} outputs={[\"output\"]} title=\"Sample/Hold\" type={type} />;\n}\n\nexport default React.memo(SampleAndHold);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction Sign({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"sign-processor\"));\n\n  return <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Sign\" type={type} />;\n}\n\nexport default React.memo(Sign);\n","import React, { useEffect } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction StereoPanner({ data, id, selected, type }: NodeProps) {\n  const { pan = 0, onChange } = data;\n  const title = `Stereo: ${Math.abs(pan * 100).toFixed(0)}% ${pan > 0 ? \"Right\" : pan < 0 ? \"Left\" : \"\"}`;\n\n  // AudioNode\n  const node = useNode(id, context => context.createStereoPanner());\n\n  // AudioParam\n  useEffect(() => void (node.pan.value = pan), [node, pan]);\n\n  return (\n    <Node id={id} inputs={[\"input\", \"pan\"]} outputs={[\"output\"]} title={title} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              max=\"1\"\n              min=\"-1\"\n              onChange={e => onChange({ pan: +e.target.value })}\n              step=\"0.01\"\n              title={title}\n              type=\"range\"\n              value={pan}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(StereoPanner);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nconst inputStyle = {\n  width: 50,\n};\n\nfunction Transformer({ data, id, selected, type }: NodeProps) {\n  const { inputMax = 1, inputMin = -1, onChange, outputMax = 1, outputMin = 0 } = data;\n\n  // AudioNode\n  useNode(\n    id,\n    context =>\n      new AudioWorkletNode(context, \"transformer-processor\", {\n        processorOptions: {\n          inputMin,\n          inputMax,\n          outputMin,\n          outputMax,\n        },\n      }),\n    [inputMin, inputMax, outputMin, outputMax]\n  );\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} title=\"Transformer\" type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Input min`}\n              type=\"number\"\n              value={inputMin}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMin: +e.target.value })}\n              style={inputStyle}\n              title={`Output min`}\n              type=\"number\"\n              value={outputMin}\n            />\n          </div>\n          <div className=\"customNode_item\">\n            <input\n              onChange={e => onChange({ inputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Input max`}\n              type=\"number\"\n              value={inputMax}\n            />\n            <span>&rarr;</span>\n            <input\n              onChange={e => onChange({ outputMax: +e.target.value })}\n              style={inputStyle}\n              title={`Output max`}\n              type=\"number\"\n              value={outputMax}\n            />\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(Transformer);\n","import React, { useCallback, useContext, useEffect, useMemo, useState } from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { AudioContext } from \"context/AudioContext\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\n// See: https://developer.mozilla.org/en-US/docs/Web/API/WaveShaperNode#Example\nconst distortion = `const k = 50;\nconst samples = curve.length;\nconst deg = Math.PI / 180;\nfor (let i = 0; i < samples; i++) {\n  const x = (i * 2) / samples - 1;\n  curve[i] = ((3 + k) * x * 20 * deg) / (Math.PI + k * Math.abs(x));\n}\nreturn curve;`;\n\nfunction WaveShaper({ data, id, selected, type }: NodeProps) {\n  const { onChange, oversample } = data;\n  const [curveFn, setCurveFn] = useState(data.curveFn ?? distortion);\n  const [lastValidCurveFn, setLastValidCurveFn] = useState(curveFn);\n\n  // AudioNode\n  const context = useContext(AudioContext);\n  const node = useNode(id, () => context.createWaveShaper());\n\n  const curve = useMemo(() => {\n    const curve = new Float32Array(context.sampleRate);\n    // eslint-disable-next-line\n    return new Function(\"curve\", lastValidCurveFn)(curve);\n  }, [context.sampleRate, lastValidCurveFn]);\n\n  // AudioParam\n  useEffect(() => void (node.curve = curve), [node, curve]);\n  useEffect(() => void (node.oversample = oversample), [node, oversample]);\n\n  const updateCurve = useCallback(() => {\n    try {\n      // eslint-disable-next-line\n      new Function(\"curve\", curveFn)(new Float32Array(context.sampleRate));\n\n      setLastValidCurveFn(curveFn);\n      onChange({ curveFn });\n    } catch (e) {\n      console.error(e);\n    }\n  }, [context.sampleRate, curveFn, onChange]);\n\n  return (\n    <Node id={id} inputs={[\"input\"]} outputs={[\"output\"]} type={type}>\n      {selected && (\n        <div className=\"customNode_editor nodrag\">\n          <div className=\"customNode_item\" style={{ flexWrap: \"wrap\" }}>\n            <textarea\n              onChange={e => setCurveFn(e.target.value)}\n              rows={8}\n              style={{ width: \"100%\" }}\n              title=\"Curve function\"\n              value={curveFn}\n            />\n            <button onClick={updateCurve}>save</button>\n          </div>\n          <div className=\"customNode_item\">\n            <select onChange={e => onChange({ oversample: e.target.value })} title=\"Oversample\" value={oversample}>\n              <option value=\"none\">none</option>\n              <option value=\"2x\">2x</option>\n              <option value=\"4x\">4x</option>\n            </select>\n          </div>\n        </div>\n      )}\n    </Node>\n  );\n}\n\nexport default React.memo(WaveShaper);\n","import React from \"react\";\nimport { NodeProps } from \"react-flow-renderer\";\nimport { useNode } from \"context/NodeContext\";\nimport Node from \"components/Node\";\n\nfunction XorGate({ id, type }: NodeProps) {\n  // AudioNode\n  useNode(id, context => new AudioWorkletNode(context, \"xor-gate-processor\", { numberOfInputs: 2 }));\n\n  return <Node id={id} inputs={[\"input-0\", \"input-1\"]} outputs={[\"output\"]} title=\"Gate: XOR\" type={type} />;\n}\n\nexport default React.memo(XorGate);\n","import React, { useCallback, useState } from \"react\";\nimport ReactFlow, {\n  addEdge,\n  isEdge,\n  isNode,\n  removeElements,\n  Background,\n  Connection,\n  Controls,\n  Edge,\n  Elements,\n  Node as ReactFlowNode,\n  OnConnectStartParams,\n  OnLoadParams as ReactFlowInstance,\n} from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport produce from \"immer\";\nimport ADSR from \"components/nodes/ADSR\";\nimport Analyser from \"components/nodes/Analyser\";\nimport AndGate from \"components/nodes/AndGate\";\nimport AudioBufferSource from \"components/nodes/AudioBufferSource\";\nimport BiquadFilter from \"components/nodes/BiquadFilter\";\nimport ChannelMerger from \"components/nodes/ChannelMerger\";\nimport ChannelSplitter from \"components/nodes/ChannelSplitter\";\nimport Comparator from \"components/nodes/Comparator\";\nimport ConstantSource from \"components/nodes/ConstantSource\";\nimport Delay from \"components/nodes/Delay\";\nimport DelayEffect from \"components/nodes/DelayEffect\";\nimport Destination from \"components/nodes/Destination\";\nimport DynamicsCompressor from \"components/nodes/DynamicsCompressor\";\nimport Equalizer from \"components/nodes/Equalizer\";\nimport FlowContextMenu from \"components/FlowContextMenu\";\nimport Gain from \"components/nodes/Gain\";\nimport Gate from \"components/nodes/Gate\";\nimport InputSwitch from \"components/nodes/InputSwitch\";\nimport Keyboard from \"components/nodes/Keyboard\";\nimport Meter from \"components/nodes/Meter\";\nimport Metronome from \"components/nodes/Metronome\";\nimport Noise from \"components/nodes/Noise\";\nimport NotGate from \"components/nodes/NotGate\";\nimport OrGate from \"components/nodes/OrGate\";\nimport Oscillator from \"components/nodes/Oscillator\";\nimport OscillatorNote from \"components/nodes/OscillatorNote\";\nimport OutputSwitch from \"components/nodes/OutputSwitch\";\nimport Quantizer from \"components/nodes/Quantizer\";\nimport Rectifier from \"components/nodes/Rectifier\";\nimport SampleAndHold from \"components/nodes/SampleAndHold\";\nimport Sign from \"components/nodes/Sign\";\nimport StereoPanner from \"components/nodes/StereoPanner\";\nimport Transformer from \"components/nodes/Transformer\";\nimport WaveShaper from \"components/nodes/WaveShaper\";\nimport XorGate from \"components/nodes/XorGate\";\nimport { useContextMenu } from \"context/ContextMenuContext\";\nimport { AnyAudioNode, useNodeContext } from \"context/NodeContext\";\nimport { useProject } from \"context/ProjectContext\";\nimport { useOnConnect, useOnEdgeRemove, useOnNodeRemove } from \"utils/handles\";\n\nconst nodeTypes = {\n  ADSR: ADSR,\n  Analyser: Analyser,\n  AndGate: AndGate,\n  AudioBufferSource: AudioBufferSource,\n  BiquadFilter: BiquadFilter,\n  ChannelMerger: ChannelMerger,\n  ChannelSplitter: ChannelSplitter,\n  Comparator: Comparator,\n  ConstantSource: ConstantSource,\n  Delay: Delay,\n  DelayEffect: DelayEffect,\n  Destination: Destination,\n  DynamicsCompressor: DynamicsCompressor,\n  Equalizer: Equalizer,\n  Gain: Gain,\n  Gate: Gate,\n  InputSwitch: InputSwitch,\n  Keyboard: Keyboard,\n  Meter: Meter,\n  Metronome: Metronome,\n  Noise: Noise,\n  NotGate: NotGate,\n  OrGate: OrGate,\n  Oscillator: Oscillator,\n  OscillatorNote: OscillatorNote,\n  OutputSwitch: OutputSwitch,\n  Quantizer: Quantizer,\n  Rectifier: Rectifier,\n  SampleAndHold: SampleAndHold,\n  Sign: Sign,\n  StereoPanner: StereoPanner,\n  Transformer: Transformer,\n  WaveShaper: WaveShaper,\n  XorGate: XorGate,\n};\n\nfunction getEdgeWithColor(params: Edge | Connection) {\n  if (!params.source) {\n    return params;\n  }\n\n  return Object.assign({}, params, {\n    style: {\n      stroke: `#${params.source.substr(-6)}`,\n    },\n  });\n}\n\nasync function waitForInitialNodes(initialElements: Elements, audioNodes: Record<string, AnyAudioNode>) {\n  const nodesWithConnections = initialElements.filter(isEdge).reduce<Record<string, boolean>>((nodeIds, edge) => {\n    nodeIds[edge.source] = true;\n    nodeIds[edge.target] = true;\n    return nodeIds;\n  }, {});\n  while (Object.keys(nodesWithConnections).length) {\n    Object.keys(audioNodes).forEach(nodeId => {\n      delete nodesWithConnections[nodeId];\n    });\n    await new Promise(resolve => setTimeout(resolve, 0));\n  }\n}\n\nexport const GRID_SIZE = 10;\n\nfunction snapToGrid(position: number) {\n  return Math.floor(position / GRID_SIZE) * GRID_SIZE;\n}\n\nfunction Flow() {\n  const { elements, onChangeElementFactory, setElements, setTransform, transform } = useProject();\n  const contextMenu = useContextMenu();\n  const { nodes: audioNodes } = useNodeContext();\n  const [tryingToConnect, setTryingToConnect] = useState<OnConnectStartParams | null>(null);\n\n  const onElementsConnect = useOnConnect();\n  const onEdgeRemove = useOnEdgeRemove();\n  const onNodeRemove = useOnNodeRemove();\n\n  const onLoad = useCallback(\n    async (reactFlowInstance: ReactFlowInstance) => {\n      reactFlowInstance.setTransform(transform);\n\n      // Attach onChange to nodes\n      setElements(\n        produce((draft: Elements) => {\n          draft.filter(isNode).forEach(node => {\n            node.data.onChange = onChangeElementFactory(node.id);\n          });\n        })\n      );\n\n      // Wait for nodes to render and handle connections\n      // FIXME This should be handled on changes to ReactFlowRenderer state instead.\n      await waitForInitialNodes(elements, audioNodes);\n      const edges = elements.filter(isEdge);\n      edges.forEach(edge => onElementsConnect(edge));\n    },\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    []\n  );\n\n  const onMoveEnd = useCallback(\n    transform => {\n      setTransform(transform);\n    },\n    [setTransform]\n  );\n\n  const onConnectStart = useCallback((e: React.MouseEvent, params: OnConnectStartParams) => {\n    setTryingToConnect(params);\n  }, []);\n  const onConnectStop = useCallback((e: MouseEvent) => setTryingToConnect(null), []);\n  const onConnect = useCallback(\n    (params: Edge | Connection) => {\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(params), elements));\n      onElementsConnect(params);\n    },\n    [onElementsConnect, setElements]\n  );\n  const onElementsRemove = useCallback(\n    (elementsToRemove: Elements) => {\n      elementsToRemove.filter(isEdge).forEach(edge => onEdgeRemove(edge));\n      elementsToRemove.filter(isNode).forEach(node => onNodeRemove(node.id));\n\n      setElements((elements: Elements) => removeElements(elementsToRemove, elements));\n    },\n    [onEdgeRemove, onNodeRemove, setElements]\n  );\n  const onEdgeUpdate = useCallback(\n    (oldEdge: Edge, newConnection: Connection) => {\n      onEdgeRemove(oldEdge);\n      setElements((elements: Elements) => removeElements([oldEdge], elements));\n      setElements((elements: Elements) => addEdge(getEdgeWithColor(newConnection), elements));\n      onElementsConnect(newConnection);\n    },\n    [onEdgeRemove, onElementsConnect, setElements]\n  );\n\n  const onNodeDragStop = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>, draggedNode: ReactFlowNode) => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === draggedNode.id);\n          if (!node) {\n            return;\n          }\n          node.position = {\n            x: snapToGrid(draggedNode.position.x),\n            y: snapToGrid(draggedNode.position.y),\n          };\n        })\n      );\n    },\n    [setElements]\n  );\n\n  const addNode = useCallback(\n    (type: string) => {\n      const id = `${type}-${uuidv4()}`;\n      const onChange = onChangeElementFactory(id);\n      const position = {\n        x: snapToGrid((contextMenu.getRect().left - transform.x) / transform.zoom),\n        y: snapToGrid((contextMenu.getRect().top - transform.y) / transform.zoom),\n      };\n      const node = {\n        id,\n        data: { onChange },\n        type,\n        position,\n      };\n      setElements((elements: Elements) => [...elements, node]);\n      contextMenu.hide();\n    },\n    [contextMenu, onChangeElementFactory, setElements, transform]\n  );\n\n  const onPaneClick = useCallback(() => {\n    contextMenu.hide();\n  }, [contextMenu]);\n\n  const onPaneContextMenu = useCallback(\n    (event: React.MouseEvent<Element, MouseEvent>) => {\n      event.preventDefault();\n      contextMenu.setRect({ width: 0, height: 0, top: event.clientY, right: 0, bottom: 0, left: event.clientX });\n      contextMenu.show(<FlowContextMenu addNode={addNode} />);\n    },\n    [addNode, contextMenu]\n  );\n\n  return (\n    <>\n      <ReactFlow\n        data-connecting-handletype={tryingToConnect ? tryingToConnect.handleType : undefined}\n        defaultPosition={[transform.x, transform.y]}\n        defaultZoom={transform.zoom}\n        elements={elements}\n        nodeTypes={nodeTypes}\n        onConnect={onConnect}\n        onConnectStart={onConnectStart}\n        onConnectStop={onConnectStop}\n        onEdgeUpdate={onEdgeUpdate}\n        onElementsRemove={onElementsRemove}\n        onLoad={onLoad}\n        onMoveEnd={onMoveEnd}\n        onNodeDragStop={onNodeDragStop}\n        onPaneClick={onPaneClick}\n        onPaneContextMenu={onPaneContextMenu}\n        onlyRenderVisibleElements={false}\n        selectNodesOnDrag={false}\n        snapToGrid\n        snapGrid={[GRID_SIZE, GRID_SIZE]}\n        // TODO figure out why this is needed for flow container not to cover context menu\n        style={{ zIndex: 0 }}\n      >\n        <Background gap={GRID_SIZE} />\n        <Controls />\n      </ReactFlow>\n    </>\n  );\n}\n\nexport default React.memo(Flow);\n","import React, { Dispatch, SetStateAction, useCallback, useEffect, useMemo, useState } from \"react\";\nimport { Elements, FlowTransform } from \"react-flow-renderer\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { useProject } from \"context/ProjectContext\";\n\nexport interface ProjectState {\n  elements: Elements;\n  id: string;\n  onChangeElementFactory: (id: string) => (data: Record<string, any>) => void;\n  setElements: Dispatch<SetStateAction<Elements>>;\n  setId: Dispatch<SetStateAction<string>>;\n  setTransform: Dispatch<SetStateAction<FlowTransform>>;\n  transform: FlowTransform;\n}\n\nconst textareaStyles: React.CSSProperties = {\n  fontSize: 12,\n  height: \"100%\",\n  resize: \"none\",\n  width: \"100%\",\n};\n\nconst controlsStyles: React.CSSProperties = {\n  display: \"flex\",\n  position: \"absolute\",\n  right: \"100%\",\n  top: -10,\n  transform: \"rotate(-90deg)\",\n  transformOrigin: \"bottom right\",\n};\n\nconst getDrawerStyles = (visible: boolean): React.CSSProperties => ({\n  height: \"100%\",\n  padding: 10,\n  position: \"absolute\",\n  right: 0,\n  top: 0,\n  transform: visible ? \"translateX(0)\" : \"translateX(100%)\",\n  transition: \"transform 0.4s ease\",\n  width: 400,\n});\n\nexport const getDefaultProject = () => ({\n  id: uuidv4(),\n  elements: [],\n  transform: {\n    x: 0,\n    y: 0,\n    zoom: 1,\n  },\n});\n\nfunction Project() {\n  const { elements, id, setElements, setId, setTransform, transform } = useProject();\n  const [visible, setVisible] = useState(false);\n  const drawerStyles = useMemo(() => getDrawerStyles(visible), [visible]);\n\n  // Load project from URL\n  useEffect(() => {\n    const project = atob(window.location.hash.substr(1));\n    try {\n      const { elements, id, transform } = JSON.parse(project);\n      setElements(elements);\n      setId(id ?? uuidv4());\n      setTransform(transform);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [setElements, setId, setTransform]);\n\n  // Store project in URL\n  useEffect(() => {\n    window.location.hash = btoa(\n      JSON.stringify({\n        elements: elements.map(element => ({ ...element, __rf: undefined })),\n        id,\n        transform,\n      })\n    );\n  }, [elements, id, transform]);\n\n  const onChange = useCallback(\n    (e: React.ChangeEvent<HTMLTextAreaElement>) => {\n      try {\n        const { elements, id, transform } = JSON.parse(e.target.value);\n        setElements(elements);\n        setId(id ?? uuidv4());\n        setTransform(transform);\n      } catch (e) {\n        console.error(e);\n      }\n    },\n    [setElements, setId, setTransform]\n  );\n\n  const clearProject = useCallback(() => {\n    const defaultProject = getDefaultProject();\n    setElements(defaultProject.elements);\n    setId(defaultProject.id);\n    setTransform(defaultProject.transform);\n  }, [setElements, setId, setTransform]);\n  const toggleProjectDrawer = useCallback(() => setVisible(visible => !visible), []);\n\n  return (\n    <div style={drawerStyles}>\n      <textarea\n        onChange={onChange}\n        style={textareaStyles}\n        value={JSON.stringify(\n          {\n            elements: elements.map(element => ({ ...element, __rf: undefined })),\n            id,\n            transform,\n          },\n          null,\n          2\n        )}\n      />\n      <div style={controlsStyles}>\n        <button onClick={clearProject} style={{ marginRight: 10 }}>\n          clear\n        </button>\n        <button onClick={toggleProjectDrawer}>{visible ? \"hide\" : \"show\"}</button>\n      </div>\n    </div>\n  );\n}\n\nexport default Project;\n","import React, { useCallback, useMemo, useState } from \"react\";\nimport { Elements, isNode, ReactFlowProvider } from \"react-flow-renderer\";\nimport produce from \"immer\";\nimport Audio from \"components/Audio\";\nimport ContextMenu from \"components/ContextMenu\";\nimport Flow from \"components/Flow\";\nimport Nodes from \"components/Nodes\";\nimport Project, { ProjectState, getDefaultProject } from \"components/Project\";\nimport { ProjectContext } from \"context/ProjectContext\";\n\nfunction App() {\n  const defaultProject = useMemo(getDefaultProject, []);\n  const [id, setId] = useState<ProjectState[\"id\"]>(defaultProject.id);\n  const [elements, setElements] = useState<ProjectState[\"elements\"]>(defaultProject.elements);\n  const [transform, setTransform] = useState<ProjectState[\"transform\"]>(defaultProject.transform);\n  const onChangeElementFactory = useCallback(\n    (id: string) => (data: Record<string, any>): void => {\n      setElements(\n        produce((draft: Elements) => {\n          const node = draft.filter(isNode).find(element => element.id === id);\n          if (!node) {\n            return;\n          }\n          Object.keys(data).forEach(property => (node.data[property] = data[property]));\n        })\n      );\n    },\n    [setElements]\n  );\n  const project = { elements, id, onChangeElementFactory, setElements, setId, setTransform, transform };\n\n  return (\n    <ProjectContext.Provider value={project}>\n      <Audio>\n        <ReactFlowProvider>\n          <Nodes>\n            <ContextMenu>\n              <div\n                style={{\n                  alignItems: \"stretch\",\n                  display: \"flex\",\n                  height: \"100vh\",\n                }}\n              >\n                <Flow key={project.id} />\n                <Project />\n              </div>\n            </ContextMenu>\n          </Nodes>\n        </ReactFlowProvider>\n      </Audio>\n    </ProjectContext.Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}